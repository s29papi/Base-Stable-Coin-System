{
  "version": "3.2",
  "log": [
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "08295699790c674c5574539ced5280dbb163cab91795b07eb9175feafd7c5c02",
          "withoutMetadata": "7e7a4d2dea64835b308c8a359c3029d74988a4318ba8ef4240ab30513edfd448",
          "linkedWithoutMetadata": "7e7a4d2dea64835b308c8a359c3029d74988a4318ba8ef4240ab30513edfd448"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:18",
        "version": {
          "withMetadata": "3cadbdb25b0d889a6e9d9f749cc008545c861f2916c34f119ffec15ff9894211",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "f453140119aa4ab940c1c866e30faba30c70b1bf42ecb26b808dc4e355066110",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "e96c088265fb723a79b847223722ed9c8034dcd061caf652f25c4bd66d192c8e",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "BaseCore": {
        "src": "contracts/BaseCore.sol:21",
        "version": {
          "withMetadata": "3563d897ab49cb1a2a07e4d7424f8a933ce003913324c53abc7cf1ff39c153ed",
          "withoutMetadata": "148a8cd523efe4c6bb2e745b7768f121d068e9f62e0394139a253f33be835c7b",
          "linkedWithoutMetadata": "148a8cd523efe4c6bb2e745b7768f121d068e9f62e0394139a253f33be835c7b"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeERC20",
          "SafeMath",
          "WadMath",
          "Math"
        ],
        "methods": [
          "(address[5])",
          "transferCollToUser(address,address payable,uint256)",
          "transferBaseUsdToUser(address,address payable,uint256)",
          "setTokens(address,address,address)",
          "mint(uint256)",
          "burn(uint256)",
          "getBalance(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BaseCore",
            "src": "contracts/BaseCore.sol:59"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "backingcoins",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_address)5_storage",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:50"
            },
            {
              "label": "baseusd",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(IBase_usd)3995",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:52"
            },
            {
              "label": "basestables",
              "offset": 0,
              "slot": "7",
              "type": "t_contract(IBase_stables)3968",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:53"
            },
            {
              "label": "BaseLendAddress",
              "offset": 0,
              "slot": "8",
              "type": "t_contract(BaseLend)3892",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:54"
            },
            {
              "label": "backingbalances",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:56"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_address)5_storage": {
              "label": "address[5]"
            },
            "t_contract(BaseLend)3892": {
              "label": "contract BaseLend"
            },
            "t_contract(IBase_stables)3968": {
              "label": "contract IBase_stables"
            },
            "t_contract(IBase_usd)3995": {
              "label": "contract IBase_usd"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "BaseLend": {
        "src": "contracts/BaseLend.sol:16",
        "version": {
          "withMetadata": "d9fb8ac1337fbd597a5270bdfe8b41f31f5da800a24cd50e942f7d26be797993",
          "withoutMetadata": "85b16210d8418f88a86701e774884bb38111d34cfaa3a345c5b3fe27c2050b0e",
          "linkedWithoutMetadata": "85b16210d8418f88a86701e774884bb38111d34cfaa3a345c5b3fe27c2050b0e"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeERC20",
          "SafeMath",
          "WadMath",
          "Math",
          "corelibrary"
        ],
        "methods": [
          "getTotalAvailableLiquidity(address)",
          "getTotalLiquidity(address)",
          "LendersShareAmount(address,uint256)",
          "LendersLiquidityAmount(address,uint256)",
          "initIBT(address,address)",
          "initNIBT(address,address,string)",
          "getIBTdata()",
          "getNIBTdata(address)",
          "setPriceOracle(address)",
          "setTokens(address,address,address)",
          "setIBTStatus(address,uint8)",
          "setNIBTStatus(address,uint8)",
          "getUserCompoundedBorrowBalance(address)",
          "getUserTankData(address,address)",
          "getUserCompoundedLiquidityBalance(address,address)",
          "getUserAccount(address)",
          "depositColl(address,uint256)",
          "withdrawColl(address,uint256)",
          "borrowBaseusd(uint256)",
          "isAccountHealthy(address)",
          "RepaysShareAmount(address,uint256)",
          "repayBaseUsd(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "reservePercent",
            "src": "contracts/BaseLend.sol:106"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "baseusd",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IBase_usd)3995",
              "contract": "BaseLend",
              "src": "contracts/BaseLend.sol:90"
            },
            {
              "label": "basecore",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(BaseCore)2175",
              "contract": "BaseLend",
              "src": "contracts/BaseLend.sol:91"
            },
            {
              "label": "interestbearingtank",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_struct(interestbearingtankdata)4328_storage)",
              "contract": "BaseLend",
              "src": "contracts/BaseLend.sol:93"
            },
            {
              "label": "noninterestbearingtank",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_struct(noninterestbearingtankdata)4347_storage)",
              "contract": "BaseLend",
              "src": "contracts/BaseLend.sol:94"
            },
            {
              "label": "borrowerstank",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_struct(borrowerstankdata)4333_storage))",
              "contract": "BaseLend",
              "src": "contracts/BaseLend.sol:96"
            },
            {
              "label": "lenderstank",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_address,t_struct(lenderstankdata)4310_storage))",
              "contract": "BaseLend",
              "src": "contracts/BaseLend.sol:97"
            },
            {
              "label": "interestbearingtanklist",
              "offset": 0,
              "slot": "7",
              "type": "t_array(t_contract(ERC20)692)dyn_storage",
              "contract": "BaseLend",
              "src": "contracts/BaseLend.sol:98"
            },
            {
              "label": "noninterestbearingtanklist",
              "offset": 0,
              "slot": "8",
              "type": "t_array(t_contract(ERC20)692)dyn_storage",
              "contract": "BaseLend",
              "src": "contracts/BaseLend.sol:99"
            },
            {
              "label": "basecollDeployer",
              "offset": 0,
              "slot": "9",
              "type": "t_contract(BasecollDeployer)4173",
              "contract": "BaseLend",
              "src": "contracts/BaseLend.sol:101"
            },
            {
              "label": "priceoracle",
              "offset": 0,
              "slot": "10",
              "type": "t_contract(IDAIoraclePriceGetter)4007",
              "contract": "BaseLend",
              "src": "contracts/BaseLend.sol:103"
            },
            {
              "label": "reservePercent",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "BaseLend",
              "src": "contracts/BaseLend.sol:106"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_contract(ERC20)692)dyn_storage": {
              "label": "contract ERC20[]"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_contract(BaseCore)2175": {
              "label": "contract BaseCore"
            },
            "t_contract(BasecollDeployer)4173": {
              "label": "contract BasecollDeployer"
            },
            "t_contract(ERC20)692": {
              "label": "contract ERC20"
            },
            "t_contract(IBase_usd)3995": {
              "label": "contract IBase_usd"
            },
            "t_contract(IDAIoraclePriceGetter)4007": {
              "label": "contract IDAIoraclePriceGetter"
            },
            "t_contract(IPoolConfiguration)4048": {
              "label": "contract IPoolConfiguration"
            },
            "t_contract(basecoll)4136": {
              "label": "contract basecoll"
            },
            "t_enum(tankStatus)4304": {
              "label": "enum corelibrary.tankStatus",
              "members": [
                "INACTIVE",
                "ACTIVE",
                "CLOSED"
              ]
            },
            "t_mapping(t_address,t_mapping(t_address,t_struct(borrowerstankdata)4333_storage))": {
              "label": "mapping(address => mapping(address => struct corelibrary.borrowerstankdata))"
            },
            "t_mapping(t_address,t_mapping(t_address,t_struct(lenderstankdata)4310_storage))": {
              "label": "mapping(address => mapping(address => struct corelibrary.lenderstankdata))"
            },
            "t_mapping(t_address,t_struct(borrowerstankdata)4333_storage)": {
              "label": "mapping(address => struct corelibrary.borrowerstankdata)"
            },
            "t_mapping(t_address,t_struct(interestbearingtankdata)4328_storage)": {
              "label": "mapping(address => struct corelibrary.interestbearingtankdata)"
            },
            "t_mapping(t_address,t_struct(lenderstankdata)4310_storage)": {
              "label": "mapping(address => struct corelibrary.lenderstankdata)"
            },
            "t_mapping(t_address,t_struct(noninterestbearingtankdata)4347_storage)": {
              "label": "mapping(address => struct corelibrary.noninterestbearingtankdata)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(borrowerstankdata)4333_storage": {
              "label": "struct corelibrary.borrowerstankdata",
              "members": [
                {
                  "label": "disableUseAsCollateral",
                  "type": "t_bool"
                },
                {
                  "label": "borrowShares",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(interestbearingtankdata)4328_storage": {
              "label": "struct corelibrary.interestbearingtankdata",
              "members": [
                {
                  "label": "status",
                  "type": "t_enum(tankStatus)4304"
                },
                {
                  "label": "baseusd",
                  "type": "t_contract(IBase_usd)3995"
                },
                {
                  "label": "poolConfig",
                  "type": "t_contract(IPoolConfiguration)4048"
                },
                {
                  "label": "totalBorrows",
                  "type": "t_uint256"
                },
                {
                  "label": "totalBorrowShares",
                  "type": "t_uint256"
                },
                {
                  "label": "tankReserves",
                  "type": "t_uint256"
                },
                {
                  "label": "lastUpdateTimestamp",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(lenderstankdata)4310_storage": {
              "label": "struct corelibrary.lenderstankdata",
              "members": [
                {
                  "label": "borrowShares",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(noninterestbearingtankdata)4347_storage": {
              "label": "struct corelibrary.noninterestbearingtankdata",
              "members": [
                {
                  "label": "status",
                  "type": "t_enum(tankStatus)4304"
                },
                {
                  "label": "baseColl",
                  "type": "t_contract(basecoll)4136"
                },
                {
                  "label": "poolConfig",
                  "type": "t_contract(IPoolConfiguration)4048"
                },
                {
                  "label": "lastUpdateTimestamp",
                  "type": "t_uint256"
                },
                {
                  "label": "usdpair",
                  "type": "t_string_storage"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IBaseCore": {
        "src": "contracts/Interface/IBaseCore.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(uint256,address)",
          "redeem(uint256,address)",
          "harvest()",
          "earned()",
          "dusdToUsd(uint256,bool)",
          "peaks(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IBase_stables": {
        "src": "contracts/Interface/IBase_stables.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)",
          "burn(address,uint256)",
          "totalSupply()",
          "burnForSelf(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IBase_usd": {
        "src": "contracts/Interface/IBase_usd.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)",
          "burn(address,uint256)",
          "totalSupply()",
          "burnForSelf(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IDAIoraclePriceGetter": {
        "src": "contracts/Interface/IDAIoraclePriceGetter.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getPrice(string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPoolConfiguration": {
        "src": "contracts/Interface/IPoolConfiguration.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getOptimalUtilizationRate()",
          "getBaseBorrowRate()",
          "getLiquidationBonusPercent()",
          "getCollateralPercent()",
          "calculateInterestRate(uint256,uint256)",
          "getUtilizationRate(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "basecoll": {
        "src": "contracts/basecoll.sol:8",
        "version": {
          "withMetadata": "9e9a7e4bf0439689743ccada761cdd9c9e0deb9a0b783ecaf3545c0935e5d8b7",
          "withoutMetadata": "fd8a7b64813b41475f4f2ca2e4cc396d01b9a5887e53356bec97171d8ea4acec",
          "linkedWithoutMetadata": "fd8a7b64813b41475f4f2ca2e4cc396d01b9a5887e53356bec97171d8ea4acec"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "methods": [
          "(string,string,address,address)",
          "mint(address,uint256)",
          "burn(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "basecoll",
            "src": "contracts/basecoll.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "basecore",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(BaseCore)2175",
              "contract": "basecoll",
              "src": "contracts/basecoll.sol:11"
            },
            {
              "label": "underlyingAsset",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(ERC20)692",
              "contract": "basecoll",
              "src": "contracts/basecoll.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_contract(BaseCore)2175": {
              "label": "contract BaseCore"
            },
            "t_contract(ERC20)692": {
              "label": "contract ERC20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "BasecollDeployer": {
        "src": "contracts/basecollDeployer.sol:8",
        "version": {
          "withMetadata": "47900c59f4cfdd551160aa71088d7b53fc959fb2e32d240b48b27083b256c9d6",
          "withoutMetadata": "2ee542c0f3342223a18fdca1cf093e36ec5d96242ba2da998d6bd9c107b918df",
          "linkedWithoutMetadata": "2ee542c0f3342223a18fdca1cf093e36ec5d96242ba2da998d6bd9c107b918df"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "createNewbasecoll(string,string,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Math": {
        "src": "contracts/libraries/Math.sol:10",
        "version": {
          "withMetadata": "8eb24f05334341281cfdc4ce9624eb0214fec990a3e7edf35702f88dcb93527f",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "WadMath": {
        "src": "contracts/libraries/WadMath.sol:11",
        "version": {
          "withMetadata": "4469de403b749c3b4e3c35240492ef4d28235438c36c6733c57fd87b0535274f",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "SafeMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "corelibrary": {
        "src": "contracts/libraries/corelibrary.sol:14",
        "version": {
          "withMetadata": "f0dfa65d729a94e2590945c6db27aa0aeef5e57c89fffd655d2cde240bbdf619",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "SafeERC20",
          "SafeMath",
          "WadMath",
          "Math"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "08295699790c674c5574539ced5280dbb163cab91795b07eb9175feafd7c5c02",
          "withoutMetadata": "7e7a4d2dea64835b308c8a359c3029d74988a4318ba8ef4240ab30513edfd448",
          "linkedWithoutMetadata": "7e7a4d2dea64835b308c8a359c3029d74988a4318ba8ef4240ab30513edfd448"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:18",
        "version": {
          "withMetadata": "3cadbdb25b0d889a6e9d9f749cc008545c861f2916c34f119ffec15ff9894211",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "f453140119aa4ab940c1c866e30faba30c70b1bf42ecb26b808dc4e355066110",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "e96c088265fb723a79b847223722ed9c8034dcd061caf652f25c4bd66d192c8e",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "BaseCore": {
        "src": "contracts/BaseCore.sol:21",
        "version": {
          "withMetadata": "1f094e264735cad628452b00b086e5e8a4bf05fd71036ff2d853174f596e2330",
          "withoutMetadata": "148a8cd523efe4c6bb2e745b7768f121d068e9f62e0394139a253f33be835c7b",
          "linkedWithoutMetadata": "148a8cd523efe4c6bb2e745b7768f121d068e9f62e0394139a253f33be835c7b"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeERC20",
          "SafeMath",
          "WadMath",
          "Math"
        ],
        "methods": [
          "(address[5])",
          "transferCollToUser(address,address payable,uint256)",
          "transferBaseUsdToUser(address,address payable,uint256)",
          "setTokens(address,address,address)",
          "mint(uint256)",
          "burn(uint256)",
          "getBalance(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BaseCore",
            "src": "contracts/BaseCore.sol:59"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "backingcoins",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_address)5_storage",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:50"
            },
            {
              "label": "baseusd",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(IBase_usd)3995",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:52"
            },
            {
              "label": "basestables",
              "offset": 0,
              "slot": "7",
              "type": "t_contract(IBase_stables)3968",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:53"
            },
            {
              "label": "BaseLendAddress",
              "offset": 0,
              "slot": "8",
              "type": "t_contract(BaseLend)3892",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:54"
            },
            {
              "label": "backingbalances",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:56"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_address)5_storage": {
              "label": "address[5]"
            },
            "t_contract(BaseLend)3892": {
              "label": "contract BaseLend"
            },
            "t_contract(IBase_stables)3968": {
              "label": "contract IBase_stables"
            },
            "t_contract(IBase_usd)3995": {
              "label": "contract IBase_usd"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "BaseLend": {
        "src": "contracts/BaseLend.sol:16",
        "version": {
          "withMetadata": "a9f8b80666f4d6502a5e4182a4d6f5730dae66ff736a9c589cf6bb185ec559e3",
          "withoutMetadata": "85b16210d8418f88a86701e774884bb38111d34cfaa3a345c5b3fe27c2050b0e",
          "linkedWithoutMetadata": "85b16210d8418f88a86701e774884bb38111d34cfaa3a345c5b3fe27c2050b0e"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeERC20",
          "SafeMath",
          "WadMath",
          "Math",
          "corelibrary"
        ],
        "methods": [
          "getTotalAvailableLiquidity(address)",
          "getTotalLiquidity(address)",
          "LendersShareAmount(address,uint256)",
          "LendersLiquidityAmount(address,uint256)",
          "initIBT(address,address)",
          "initNIBT(address,address,string)",
          "getIBTdata()",
          "getNIBTdata(address)",
          "setPriceOracle(address)",
          "setTokens(address,address,address)",
          "setIBTStatus(address,uint8)",
          "setNIBTStatus(address,uint8)",
          "getUserCompoundedBorrowBalance(address)",
          "getUserTankData(address,address)",
          "getUserCompoundedLiquidityBalance(address,address)",
          "getUserAccount(address)",
          "depositColl(address,uint256)",
          "withdrawColl(address,uint256)",
          "borrowBaseusd(uint256)",
          "isAccountHealthy(address)",
          "RepaysShareAmount(address,uint256)",
          "repayBaseUsd(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "reservePercent",
            "src": "contracts/BaseLend.sol:106"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "baseusd",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IBase_usd)3995",
              "contract": "BaseLend",
              "src": "contracts/BaseLend.sol:90"
            },
            {
              "label": "basecore",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(BaseCore)2175",
              "contract": "BaseLend",
              "src": "contracts/BaseLend.sol:91"
            },
            {
              "label": "interestbearingtank",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_struct(interestbearingtankdata)4328_storage)",
              "contract": "BaseLend",
              "src": "contracts/BaseLend.sol:93"
            },
            {
              "label": "noninterestbearingtank",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_struct(noninterestbearingtankdata)4347_storage)",
              "contract": "BaseLend",
              "src": "contracts/BaseLend.sol:94"
            },
            {
              "label": "borrowerstank",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_struct(borrowerstankdata)4333_storage))",
              "contract": "BaseLend",
              "src": "contracts/BaseLend.sol:96"
            },
            {
              "label": "lenderstank",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_address,t_struct(lenderstankdata)4310_storage))",
              "contract": "BaseLend",
              "src": "contracts/BaseLend.sol:97"
            },
            {
              "label": "interestbearingtanklist",
              "offset": 0,
              "slot": "7",
              "type": "t_array(t_contract(ERC20)692)dyn_storage",
              "contract": "BaseLend",
              "src": "contracts/BaseLend.sol:98"
            },
            {
              "label": "noninterestbearingtanklist",
              "offset": 0,
              "slot": "8",
              "type": "t_array(t_contract(ERC20)692)dyn_storage",
              "contract": "BaseLend",
              "src": "contracts/BaseLend.sol:99"
            },
            {
              "label": "basecollDeployer",
              "offset": 0,
              "slot": "9",
              "type": "t_contract(BasecollDeployer)4173",
              "contract": "BaseLend",
              "src": "contracts/BaseLend.sol:101"
            },
            {
              "label": "priceoracle",
              "offset": 0,
              "slot": "10",
              "type": "t_contract(IDAIoraclePriceGetter)4007",
              "contract": "BaseLend",
              "src": "contracts/BaseLend.sol:103"
            },
            {
              "label": "reservePercent",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "BaseLend",
              "src": "contracts/BaseLend.sol:106"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_contract(ERC20)692)dyn_storage": {
              "label": "contract ERC20[]"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_contract(BaseCore)2175": {
              "label": "contract BaseCore"
            },
            "t_contract(BasecollDeployer)4173": {
              "label": "contract BasecollDeployer"
            },
            "t_contract(ERC20)692": {
              "label": "contract ERC20"
            },
            "t_contract(IBase_usd)3995": {
              "label": "contract IBase_usd"
            },
            "t_contract(IDAIoraclePriceGetter)4007": {
              "label": "contract IDAIoraclePriceGetter"
            },
            "t_contract(IPoolConfiguration)4048": {
              "label": "contract IPoolConfiguration"
            },
            "t_contract(basecoll)4136": {
              "label": "contract basecoll"
            },
            "t_enum(tankStatus)4304": {
              "label": "enum corelibrary.tankStatus",
              "members": [
                "INACTIVE",
                "ACTIVE",
                "CLOSED"
              ]
            },
            "t_mapping(t_address,t_mapping(t_address,t_struct(borrowerstankdata)4333_storage))": {
              "label": "mapping(address => mapping(address => struct corelibrary.borrowerstankdata))"
            },
            "t_mapping(t_address,t_mapping(t_address,t_struct(lenderstankdata)4310_storage))": {
              "label": "mapping(address => mapping(address => struct corelibrary.lenderstankdata))"
            },
            "t_mapping(t_address,t_struct(borrowerstankdata)4333_storage)": {
              "label": "mapping(address => struct corelibrary.borrowerstankdata)"
            },
            "t_mapping(t_address,t_struct(interestbearingtankdata)4328_storage)": {
              "label": "mapping(address => struct corelibrary.interestbearingtankdata)"
            },
            "t_mapping(t_address,t_struct(lenderstankdata)4310_storage)": {
              "label": "mapping(address => struct corelibrary.lenderstankdata)"
            },
            "t_mapping(t_address,t_struct(noninterestbearingtankdata)4347_storage)": {
              "label": "mapping(address => struct corelibrary.noninterestbearingtankdata)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(borrowerstankdata)4333_storage": {
              "label": "struct corelibrary.borrowerstankdata",
              "members": [
                {
                  "label": "disableUseAsCollateral",
                  "type": "t_bool"
                },
                {
                  "label": "borrowShares",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(interestbearingtankdata)4328_storage": {
              "label": "struct corelibrary.interestbearingtankdata",
              "members": [
                {
                  "label": "status",
                  "type": "t_enum(tankStatus)4304"
                },
                {
                  "label": "baseusd",
                  "type": "t_contract(IBase_usd)3995"
                },
                {
                  "label": "poolConfig",
                  "type": "t_contract(IPoolConfiguration)4048"
                },
                {
                  "label": "totalBorrows",
                  "type": "t_uint256"
                },
                {
                  "label": "totalBorrowShares",
                  "type": "t_uint256"
                },
                {
                  "label": "tankReserves",
                  "type": "t_uint256"
                },
                {
                  "label": "lastUpdateTimestamp",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(lenderstankdata)4310_storage": {
              "label": "struct corelibrary.lenderstankdata",
              "members": [
                {
                  "label": "borrowShares",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(noninterestbearingtankdata)4347_storage": {
              "label": "struct corelibrary.noninterestbearingtankdata",
              "members": [
                {
                  "label": "status",
                  "type": "t_enum(tankStatus)4304"
                },
                {
                  "label": "baseColl",
                  "type": "t_contract(basecoll)4136"
                },
                {
                  "label": "poolConfig",
                  "type": "t_contract(IPoolConfiguration)4048"
                },
                {
                  "label": "lastUpdateTimestamp",
                  "type": "t_uint256"
                },
                {
                  "label": "usdpair",
                  "type": "t_string_storage"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IBaseCore": {
        "src": "contracts/Interface/IBaseCore.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(uint256,address)",
          "redeem(uint256,address)",
          "harvest()",
          "earned()",
          "dusdToUsd(uint256,bool)",
          "peaks(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IBase_stables": {
        "src": "contracts/Interface/IBase_stables.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)",
          "burn(address,uint256)",
          "totalSupply()",
          "burnForSelf(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IBase_usd": {
        "src": "contracts/Interface/IBase_usd.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)",
          "burn(address,uint256)",
          "totalSupply()",
          "burnForSelf(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IDAIoraclePriceGetter": {
        "src": "contracts/Interface/IDAIoraclePriceGetter.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getPrice(string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPoolConfiguration": {
        "src": "contracts/Interface/IPoolConfiguration.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getOptimalUtilizationRate()",
          "getBaseBorrowRate()",
          "getLiquidationBonusPercent()",
          "getCollateralPercent()",
          "calculateInterestRate(uint256,uint256)",
          "getUtilizationRate(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "basecoll": {
        "src": "contracts/basecoll.sol:8",
        "version": {
          "withMetadata": "42a969629ed3c36b71a17724f90e45e16a0c83a762f29b2ca1831de4e3f24caf",
          "withoutMetadata": "fd8a7b64813b41475f4f2ca2e4cc396d01b9a5887e53356bec97171d8ea4acec",
          "linkedWithoutMetadata": "fd8a7b64813b41475f4f2ca2e4cc396d01b9a5887e53356bec97171d8ea4acec"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "methods": [
          "(string,string,address,address)",
          "mint(address,uint256)",
          "burn(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "basecoll",
            "src": "contracts/basecoll.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "basecore",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(BaseCore)2175",
              "contract": "basecoll",
              "src": "contracts/basecoll.sol:11"
            },
            {
              "label": "underlyingAsset",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(ERC20)692",
              "contract": "basecoll",
              "src": "contracts/basecoll.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_contract(BaseCore)2175": {
              "label": "contract BaseCore"
            },
            "t_contract(ERC20)692": {
              "label": "contract ERC20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "BasecollDeployer": {
        "src": "contracts/basecollDeployer.sol:8",
        "version": {
          "withMetadata": "c3da8dc1ca86b6022ec0c5febc2c0e92e97c28b343a5c620ec48d40ddc706e42",
          "withoutMetadata": "d037a08487db3f1456352123cb000d91cb4cd2d87e87eb3486c3b379388b891d",
          "linkedWithoutMetadata": "d037a08487db3f1456352123cb000d91cb4cd2d87e87eb3486c3b379388b891d"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "createNewbasecoll(string,string,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Math": {
        "src": "contracts/libraries/Math.sol:10",
        "version": {
          "withMetadata": "8eb24f05334341281cfdc4ce9624eb0214fec990a3e7edf35702f88dcb93527f",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "WadMath": {
        "src": "contracts/libraries/WadMath.sol:11",
        "version": {
          "withMetadata": "4469de403b749c3b4e3c35240492ef4d28235438c36c6733c57fd87b0535274f",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "SafeMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "corelibrary": {
        "src": "contracts/libraries/corelibrary.sol:14",
        "version": {
          "withMetadata": "76208b753ffed6671cceba237dc24f734cb669343abf1f2aa7444e14151a9787",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "SafeERC20",
          "SafeMath",
          "WadMath",
          "Math"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "08295699790c674c5574539ced5280dbb163cab91795b07eb9175feafd7c5c02",
          "withoutMetadata": "7e7a4d2dea64835b308c8a359c3029d74988a4318ba8ef4240ab30513edfd448",
          "linkedWithoutMetadata": "7e7a4d2dea64835b308c8a359c3029d74988a4318ba8ef4240ab30513edfd448"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:18",
        "version": {
          "withMetadata": "3cadbdb25b0d889a6e9d9f749cc008545c861f2916c34f119ffec15ff9894211",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "f453140119aa4ab940c1c866e30faba30c70b1bf42ecb26b808dc4e355066110",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "e96c088265fb723a79b847223722ed9c8034dcd061caf652f25c4bd66d192c8e",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "BaseCore": {
        "src": "contracts/BaseCore.sol:21",
        "version": {
          "withMetadata": "18dab5e4d375462b48a41300f2a7b62103954aa0dba484e01c2532d9ffd2501c",
          "withoutMetadata": "4d520ee518efa1a05fcd57defa72df4c6445685ff463c21fb7ca530a3fce0dda",
          "linkedWithoutMetadata": "4d520ee518efa1a05fcd57defa72df4c6445685ff463c21fb7ca530a3fce0dda"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeERC20",
          "SafeMath",
          "WadMath",
          "Math",
          "corelibrary"
        ],
        "methods": [
          "(address[5])",
          "transferCollToUser(address,address payable,uint256)",
          "transferBaseUsdToUser(address,address payable,uint256)",
          "initIBT(address,address)",
          "initNIBT(address,address,string)",
          "getIBTdata()",
          "getNIBTdata(address)",
          "setPriceOracle(address)",
          "setTokens(address,address,address,address)",
          "setIBTStatus(address,uint8)",
          "setNIBTStatus(address,uint8)",
          "mint(uint256)",
          "depositColl(address,uint256)",
          "burn(uint256)",
          "withdrawColl(address,uint256)",
          "getBalance(address)",
          "getTotalAvailableLiquidity(address)",
          "getTotalLiquidity(address)",
          "getUserCompoundedLiquidityBalance(address,address)",
          "getUserTankData(address,address)",
          "getUserCompoundedBorrowBalance(address)",
          "getUserAccount(address)",
          "borrowBaseusd(uint256)",
          "isAccountHealthy(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BaseCore",
            "src": "contracts/BaseCore.sol:134"
          },
          {
            "kind": "state-variable-assignment",
            "name": "reservePercent",
            "src": "contracts/BaseCore.sol:131"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "backingcoins",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_address)5_storage",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:112"
            },
            {
              "label": "baseusd",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(IBase_usd)5326",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:114"
            },
            {
              "label": "basestables",
              "offset": 0,
              "slot": "7",
              "type": "t_contract(IBase_stables)5299",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:115"
            },
            {
              "label": "BaseLendAddress",
              "offset": 0,
              "slot": "8",
              "type": "t_contract(BaseLend)5223",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:116"
            },
            {
              "label": "backingbalances",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:118"
            },
            {
              "label": "interestbearingtank",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(interestbearingtankdata)5659_storage)",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:119"
            },
            {
              "label": "noninterestbearingtank",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_struct(noninterestbearingtankdata)5678_storage)",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:120"
            },
            {
              "label": "borrowerstank",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_mapping(t_address,t_struct(borrowerstankdata)5664_storage))",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:122"
            },
            {
              "label": "lenderstank",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_mapping(t_address,t_struct(lenderstankdata)5641_storage))",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:123"
            },
            {
              "label": "interestbearingtanklist",
              "offset": 0,
              "slot": "14",
              "type": "t_array(t_contract(ERC20)692)dyn_storage",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:124"
            },
            {
              "label": "noninterestbearingtanklist",
              "offset": 0,
              "slot": "15",
              "type": "t_array(t_contract(ERC20)692)dyn_storage",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:125"
            },
            {
              "label": "basecollDeployer",
              "offset": 0,
              "slot": "16",
              "type": "t_contract(BasecollDeployer)5504",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:127"
            },
            {
              "label": "priceoracle",
              "offset": 0,
              "slot": "17",
              "type": "t_contract(IDAIoraclePriceGetter)5338",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:129"
            },
            {
              "label": "reservePercent",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:131"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_address)5_storage": {
              "label": "address[5]"
            },
            "t_array(t_contract(ERC20)692)dyn_storage": {
              "label": "contract ERC20[]"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_contract(BaseLend)5223": {
              "label": "contract BaseLend"
            },
            "t_contract(BasecollDeployer)5504": {
              "label": "contract BasecollDeployer"
            },
            "t_contract(ERC20)692": {
              "label": "contract ERC20"
            },
            "t_contract(IBase_stables)5299": {
              "label": "contract IBase_stables"
            },
            "t_contract(IBase_usd)5326": {
              "label": "contract IBase_usd"
            },
            "t_contract(IDAIoraclePriceGetter)5338": {
              "label": "contract IDAIoraclePriceGetter"
            },
            "t_contract(IPoolConfiguration)5379": {
              "label": "contract IPoolConfiguration"
            },
            "t_contract(basecoll)5467": {
              "label": "contract basecoll"
            },
            "t_enum(tankStatus)5635": {
              "label": "enum corelibrary.tankStatus",
              "members": [
                "INACTIVE",
                "ACTIVE",
                "CLOSED"
              ]
            },
            "t_mapping(t_address,t_mapping(t_address,t_struct(borrowerstankdata)5664_storage))": {
              "label": "mapping(address => mapping(address => struct corelibrary.borrowerstankdata))"
            },
            "t_mapping(t_address,t_mapping(t_address,t_struct(lenderstankdata)5641_storage))": {
              "label": "mapping(address => mapping(address => struct corelibrary.lenderstankdata))"
            },
            "t_mapping(t_address,t_struct(borrowerstankdata)5664_storage)": {
              "label": "mapping(address => struct corelibrary.borrowerstankdata)"
            },
            "t_mapping(t_address,t_struct(interestbearingtankdata)5659_storage)": {
              "label": "mapping(address => struct corelibrary.interestbearingtankdata)"
            },
            "t_mapping(t_address,t_struct(lenderstankdata)5641_storage)": {
              "label": "mapping(address => struct corelibrary.lenderstankdata)"
            },
            "t_mapping(t_address,t_struct(noninterestbearingtankdata)5678_storage)": {
              "label": "mapping(address => struct corelibrary.noninterestbearingtankdata)"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(borrowerstankdata)5664_storage": {
              "label": "struct corelibrary.borrowerstankdata",
              "members": [
                {
                  "label": "disableUseAsCollateral",
                  "type": "t_bool"
                },
                {
                  "label": "borrowShares",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(interestbearingtankdata)5659_storage": {
              "label": "struct corelibrary.interestbearingtankdata",
              "members": [
                {
                  "label": "status",
                  "type": "t_enum(tankStatus)5635"
                },
                {
                  "label": "baseusd",
                  "type": "t_contract(IBase_usd)5326"
                },
                {
                  "label": "poolConfig",
                  "type": "t_contract(IPoolConfiguration)5379"
                },
                {
                  "label": "totalBorrows",
                  "type": "t_uint256"
                },
                {
                  "label": "totalBorrowShares",
                  "type": "t_uint256"
                },
                {
                  "label": "tankReserves",
                  "type": "t_uint256"
                },
                {
                  "label": "lastUpdateTimestamp",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(lenderstankdata)5641_storage": {
              "label": "struct corelibrary.lenderstankdata",
              "members": [
                {
                  "label": "borrowShares",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(noninterestbearingtankdata)5678_storage": {
              "label": "struct corelibrary.noninterestbearingtankdata",
              "members": [
                {
                  "label": "status",
                  "type": "t_enum(tankStatus)5635"
                },
                {
                  "label": "baseColl",
                  "type": "t_contract(basecoll)5467"
                },
                {
                  "label": "poolConfig",
                  "type": "t_contract(IPoolConfiguration)5379"
                },
                {
                  "label": "lastUpdateTimestamp",
                  "type": "t_uint256"
                },
                {
                  "label": "usdpair",
                  "type": "t_string_storage"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "BaseLend": {
        "src": "contracts/BaseLend.sol:16",
        "version": {
          "withMetadata": "7e538d39dd328ccd2310e0e94fe1e08fc2a3fe804bc1804a0aae4a8a3f49ea55",
          "withoutMetadata": "bc5c754ae3a35cacee9d50f27fe6543b5f8086df6b8997d8651c341d5e8562eb",
          "linkedWithoutMetadata": "bc5c754ae3a35cacee9d50f27fe6543b5f8086df6b8997d8651c341d5e8562eb"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeERC20",
          "SafeMath",
          "WadMath",
          "Math",
          "corelibrary"
        ],
        "methods": [
          "getTotalAvailableLiquidity(address)",
          "getTotalLiquidity(address)",
          "initIBT(address,address)",
          "initNIBT(address,address,string)",
          "getIBTdata()",
          "getNIBTdata(address)",
          "setPriceOracle(address)",
          "setTokens(address,address,address)",
          "setIBTStatus(address,uint8)",
          "setNIBTStatus(address,uint8)",
          "getUserCompoundedBorrowBalance(address)",
          "getUserTankData(address,address)",
          "getUserCompoundedLiquidityBalance(address,address)",
          "getUserAccount(address)",
          "depositColl(address,uint256)",
          "withdrawColl(address,uint256)",
          "borrowBaseusd(uint256)",
          "isAccountHealthy(address)",
          "RepaysShareAmount(address,uint256)",
          "repayBaseUsd(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "reservePercent",
            "src": "contracts/BaseLend.sol:107"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "baseusd",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IBase_usd)5326",
              "contract": "BaseLend",
              "src": "contracts/BaseLend.sol:90"
            },
            {
              "label": "basecore",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(BaseCore)3610",
              "contract": "BaseLend",
              "src": "contracts/BaseLend.sol:91"
            },
            {
              "label": "backingbalances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "BaseLend",
              "src": "contracts/BaseLend.sol:93"
            },
            {
              "label": "interestbearingtank",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_struct(interestbearingtankdata)5659_storage)",
              "contract": "BaseLend",
              "src": "contracts/BaseLend.sol:94"
            },
            {
              "label": "noninterestbearingtank",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(noninterestbearingtankdata)5678_storage)",
              "contract": "BaseLend",
              "src": "contracts/BaseLend.sol:95"
            },
            {
              "label": "borrowerstank",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_address,t_struct(borrowerstankdata)5664_storage))",
              "contract": "BaseLend",
              "src": "contracts/BaseLend.sol:97"
            },
            {
              "label": "lenderstank",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_mapping(t_address,t_struct(lenderstankdata)5641_storage))",
              "contract": "BaseLend",
              "src": "contracts/BaseLend.sol:98"
            },
            {
              "label": "interestbearingtanklist",
              "offset": 0,
              "slot": "8",
              "type": "t_array(t_contract(ERC20)692)dyn_storage",
              "contract": "BaseLend",
              "src": "contracts/BaseLend.sol:99"
            },
            {
              "label": "noninterestbearingtanklist",
              "offset": 0,
              "slot": "9",
              "type": "t_array(t_contract(ERC20)692)dyn_storage",
              "contract": "BaseLend",
              "src": "contracts/BaseLend.sol:100"
            },
            {
              "label": "basecollDeployer",
              "offset": 0,
              "slot": "10",
              "type": "t_contract(BasecollDeployer)5504",
              "contract": "BaseLend",
              "src": "contracts/BaseLend.sol:102"
            },
            {
              "label": "priceoracle",
              "offset": 0,
              "slot": "11",
              "type": "t_contract(IDAIoraclePriceGetter)5338",
              "contract": "BaseLend",
              "src": "contracts/BaseLend.sol:104"
            },
            {
              "label": "reservePercent",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "BaseLend",
              "src": "contracts/BaseLend.sol:107"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_contract(ERC20)692)dyn_storage": {
              "label": "contract ERC20[]"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_contract(BaseCore)3610": {
              "label": "contract BaseCore"
            },
            "t_contract(BasecollDeployer)5504": {
              "label": "contract BasecollDeployer"
            },
            "t_contract(ERC20)692": {
              "label": "contract ERC20"
            },
            "t_contract(IBase_usd)5326": {
              "label": "contract IBase_usd"
            },
            "t_contract(IDAIoraclePriceGetter)5338": {
              "label": "contract IDAIoraclePriceGetter"
            },
            "t_contract(IPoolConfiguration)5379": {
              "label": "contract IPoolConfiguration"
            },
            "t_contract(basecoll)5467": {
              "label": "contract basecoll"
            },
            "t_enum(tankStatus)5635": {
              "label": "enum corelibrary.tankStatus",
              "members": [
                "INACTIVE",
                "ACTIVE",
                "CLOSED"
              ]
            },
            "t_mapping(t_address,t_mapping(t_address,t_struct(borrowerstankdata)5664_storage))": {
              "label": "mapping(address => mapping(address => struct corelibrary.borrowerstankdata))"
            },
            "t_mapping(t_address,t_mapping(t_address,t_struct(lenderstankdata)5641_storage))": {
              "label": "mapping(address => mapping(address => struct corelibrary.lenderstankdata))"
            },
            "t_mapping(t_address,t_struct(borrowerstankdata)5664_storage)": {
              "label": "mapping(address => struct corelibrary.borrowerstankdata)"
            },
            "t_mapping(t_address,t_struct(interestbearingtankdata)5659_storage)": {
              "label": "mapping(address => struct corelibrary.interestbearingtankdata)"
            },
            "t_mapping(t_address,t_struct(lenderstankdata)5641_storage)": {
              "label": "mapping(address => struct corelibrary.lenderstankdata)"
            },
            "t_mapping(t_address,t_struct(noninterestbearingtankdata)5678_storage)": {
              "label": "mapping(address => struct corelibrary.noninterestbearingtankdata)"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(borrowerstankdata)5664_storage": {
              "label": "struct corelibrary.borrowerstankdata",
              "members": [
                {
                  "label": "disableUseAsCollateral",
                  "type": "t_bool"
                },
                {
                  "label": "borrowShares",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(interestbearingtankdata)5659_storage": {
              "label": "struct corelibrary.interestbearingtankdata",
              "members": [
                {
                  "label": "status",
                  "type": "t_enum(tankStatus)5635"
                },
                {
                  "label": "baseusd",
                  "type": "t_contract(IBase_usd)5326"
                },
                {
                  "label": "poolConfig",
                  "type": "t_contract(IPoolConfiguration)5379"
                },
                {
                  "label": "totalBorrows",
                  "type": "t_uint256"
                },
                {
                  "label": "totalBorrowShares",
                  "type": "t_uint256"
                },
                {
                  "label": "tankReserves",
                  "type": "t_uint256"
                },
                {
                  "label": "lastUpdateTimestamp",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(lenderstankdata)5641_storage": {
              "label": "struct corelibrary.lenderstankdata",
              "members": [
                {
                  "label": "borrowShares",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(noninterestbearingtankdata)5678_storage": {
              "label": "struct corelibrary.noninterestbearingtankdata",
              "members": [
                {
                  "label": "status",
                  "type": "t_enum(tankStatus)5635"
                },
                {
                  "label": "baseColl",
                  "type": "t_contract(basecoll)5467"
                },
                {
                  "label": "poolConfig",
                  "type": "t_contract(IPoolConfiguration)5379"
                },
                {
                  "label": "lastUpdateTimestamp",
                  "type": "t_uint256"
                },
                {
                  "label": "usdpair",
                  "type": "t_string_storage"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IBaseCore": {
        "src": "contracts/Interface/IBaseCore.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(uint256,address)",
          "redeem(uint256,address)",
          "harvest()",
          "earned()",
          "dusdToUsd(uint256,bool)",
          "peaks(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IBase_stables": {
        "src": "contracts/Interface/IBase_stables.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)",
          "burn(address,uint256)",
          "totalSupply()",
          "burnForSelf(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IBase_usd": {
        "src": "contracts/Interface/IBase_usd.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)",
          "burn(address,uint256)",
          "totalSupply()",
          "burnForSelf(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IDAIoraclePriceGetter": {
        "src": "contracts/Interface/IDAIoraclePriceGetter.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getPrice(string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPoolConfiguration": {
        "src": "contracts/Interface/IPoolConfiguration.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getOptimalUtilizationRate()",
          "getBaseBorrowRate()",
          "getLiquidationBonusPercent()",
          "getCollateralPercent()",
          "calculateInterestRate(uint256,uint256)",
          "getUtilizationRate(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "basecoll": {
        "src": "contracts/basecoll.sol:8",
        "version": {
          "withMetadata": "4aa89be23bd297bdbaaba72a3a83e3e4b7d68fe2daaeff49b526414af76925d8",
          "withoutMetadata": "fd8a7b64813b41475f4f2ca2e4cc396d01b9a5887e53356bec97171d8ea4acec",
          "linkedWithoutMetadata": "fd8a7b64813b41475f4f2ca2e4cc396d01b9a5887e53356bec97171d8ea4acec"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "methods": [
          "(string,string,address,address)",
          "mint(address,uint256)",
          "burn(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "basecoll",
            "src": "contracts/basecoll.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "basecore",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(BaseCore)3610",
              "contract": "basecoll",
              "src": "contracts/basecoll.sol:11"
            },
            {
              "label": "underlyingAsset",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(ERC20)692",
              "contract": "basecoll",
              "src": "contracts/basecoll.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_contract(BaseCore)3610": {
              "label": "contract BaseCore"
            },
            "t_contract(ERC20)692": {
              "label": "contract ERC20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "BasecollDeployer": {
        "src": "contracts/basecollDeployer.sol:8",
        "version": {
          "withMetadata": "f3b3e68f924be03ce9075c6eb913f59e253f21c9ee560c4334ed50d15714e799",
          "withoutMetadata": "e1ddfeeeee03af62e32cc30fe21e10742f03b36247cece5d351773c9f5dec012",
          "linkedWithoutMetadata": "e1ddfeeeee03af62e32cc30fe21e10742f03b36247cece5d351773c9f5dec012"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "createNewbasecoll(string,string,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Math": {
        "src": "contracts/libraries/Math.sol:10",
        "version": {
          "withMetadata": "8eb24f05334341281cfdc4ce9624eb0214fec990a3e7edf35702f88dcb93527f",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "WadMath": {
        "src": "contracts/libraries/WadMath.sol:11",
        "version": {
          "withMetadata": "4469de403b749c3b4e3c35240492ef4d28235438c36c6733c57fd87b0535274f",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "SafeMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "corelibrary": {
        "src": "contracts/libraries/corelibrary.sol:14",
        "version": {
          "withMetadata": "949462c5db52bb9284d05b357f2c7cc37d31f181019bcb59200b8c78c0e34de7",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "SafeERC20",
          "SafeMath",
          "WadMath",
          "Math"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "08295699790c674c5574539ced5280dbb163cab91795b07eb9175feafd7c5c02",
          "withoutMetadata": "7e7a4d2dea64835b308c8a359c3029d74988a4318ba8ef4240ab30513edfd448",
          "linkedWithoutMetadata": "7e7a4d2dea64835b308c8a359c3029d74988a4318ba8ef4240ab30513edfd448"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:18",
        "version": {
          "withMetadata": "3cadbdb25b0d889a6e9d9f749cc008545c861f2916c34f119ffec15ff9894211",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "f453140119aa4ab940c1c866e30faba30c70b1bf42ecb26b808dc4e355066110",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "e96c088265fb723a79b847223722ed9c8034dcd061caf652f25c4bd66d192c8e",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "BaseCore": {
        "src": "contracts/BaseCore.sol:21",
        "version": {
          "withMetadata": "e854f3b2d2eb7d25beaa7fdd62ff6608354d58bd007853cef51d580e80ddb203",
          "withoutMetadata": "4d520ee518efa1a05fcd57defa72df4c6445685ff463c21fb7ca530a3fce0dda",
          "linkedWithoutMetadata": "4d520ee518efa1a05fcd57defa72df4c6445685ff463c21fb7ca530a3fce0dda"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeERC20",
          "SafeMath",
          "WadMath",
          "Math",
          "corelibrary"
        ],
        "methods": [
          "(address[5])",
          "transferCollToUser(address,address payable,uint256)",
          "transferBaseUsdToUser(address,address payable,uint256)",
          "initIBT(address,address)",
          "initNIBT(address,address,string)",
          "getIBTdata()",
          "getNIBTdata(address)",
          "setPriceOracle(address)",
          "setTokens(address,address,address,address)",
          "setIBTStatus(address,uint8)",
          "setNIBTStatus(address,uint8)",
          "mint(uint256)",
          "depositColl(address,uint256)",
          "burn(uint256)",
          "withdrawColl(address,uint256)",
          "getBalance(address)",
          "getTotalAvailableLiquidity(address)",
          "getTotalLiquidity(address)",
          "getUserCompoundedLiquidityBalance(address,address)",
          "getUserTankData(address,address)",
          "getUserCompoundedBorrowBalance(address)",
          "getUserAccount(address)",
          "borrowBaseusd(uint256)",
          "isAccountHealthy(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BaseCore",
            "src": "contracts/BaseCore.sol:134"
          },
          {
            "kind": "state-variable-assignment",
            "name": "reservePercent",
            "src": "contracts/BaseCore.sol:131"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "backingcoins",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_address)5_storage",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:112"
            },
            {
              "label": "baseusd",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(IBase_usd)5079",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:114"
            },
            {
              "label": "basestables",
              "offset": 0,
              "slot": "7",
              "type": "t_contract(IBase_stables)5052",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:115"
            },
            {
              "label": "BaseLendAddress",
              "offset": 0,
              "slot": "8",
              "type": "t_contract(BaseLend)4976",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:116"
            },
            {
              "label": "backingbalances",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:118"
            },
            {
              "label": "interestbearingtank",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(interestbearingtankdata)5412_storage)",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:119"
            },
            {
              "label": "noninterestbearingtank",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_struct(noninterestbearingtankdata)5431_storage)",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:120"
            },
            {
              "label": "borrowerstank",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_mapping(t_address,t_struct(borrowerstankdata)5417_storage))",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:122"
            },
            {
              "label": "lenderstank",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_mapping(t_address,t_struct(lenderstankdata)5394_storage))",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:123"
            },
            {
              "label": "interestbearingtanklist",
              "offset": 0,
              "slot": "14",
              "type": "t_array(t_contract(ERC20)692)dyn_storage",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:124"
            },
            {
              "label": "noninterestbearingtanklist",
              "offset": 0,
              "slot": "15",
              "type": "t_array(t_contract(ERC20)692)dyn_storage",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:125"
            },
            {
              "label": "basecollDeployer",
              "offset": 0,
              "slot": "16",
              "type": "t_contract(BasecollDeployer)5257",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:127"
            },
            {
              "label": "priceoracle",
              "offset": 0,
              "slot": "17",
              "type": "t_contract(IDAIoraclePriceGetter)5091",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:129"
            },
            {
              "label": "reservePercent",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:131"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_address)5_storage": {
              "label": "address[5]"
            },
            "t_array(t_contract(ERC20)692)dyn_storage": {
              "label": "contract ERC20[]"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_contract(BaseLend)4976": {
              "label": "contract BaseLend"
            },
            "t_contract(BasecollDeployer)5257": {
              "label": "contract BasecollDeployer"
            },
            "t_contract(ERC20)692": {
              "label": "contract ERC20"
            },
            "t_contract(IBase_stables)5052": {
              "label": "contract IBase_stables"
            },
            "t_contract(IBase_usd)5079": {
              "label": "contract IBase_usd"
            },
            "t_contract(IDAIoraclePriceGetter)5091": {
              "label": "contract IDAIoraclePriceGetter"
            },
            "t_contract(IPoolConfiguration)5132": {
              "label": "contract IPoolConfiguration"
            },
            "t_contract(basecoll)5220": {
              "label": "contract basecoll"
            },
            "t_enum(tankStatus)5388": {
              "label": "enum corelibrary.tankStatus",
              "members": [
                "INACTIVE",
                "ACTIVE",
                "CLOSED"
              ]
            },
            "t_mapping(t_address,t_mapping(t_address,t_struct(borrowerstankdata)5417_storage))": {
              "label": "mapping(address => mapping(address => struct corelibrary.borrowerstankdata))"
            },
            "t_mapping(t_address,t_mapping(t_address,t_struct(lenderstankdata)5394_storage))": {
              "label": "mapping(address => mapping(address => struct corelibrary.lenderstankdata))"
            },
            "t_mapping(t_address,t_struct(borrowerstankdata)5417_storage)": {
              "label": "mapping(address => struct corelibrary.borrowerstankdata)"
            },
            "t_mapping(t_address,t_struct(interestbearingtankdata)5412_storage)": {
              "label": "mapping(address => struct corelibrary.interestbearingtankdata)"
            },
            "t_mapping(t_address,t_struct(lenderstankdata)5394_storage)": {
              "label": "mapping(address => struct corelibrary.lenderstankdata)"
            },
            "t_mapping(t_address,t_struct(noninterestbearingtankdata)5431_storage)": {
              "label": "mapping(address => struct corelibrary.noninterestbearingtankdata)"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(borrowerstankdata)5417_storage": {
              "label": "struct corelibrary.borrowerstankdata",
              "members": [
                {
                  "label": "disableUseAsCollateral",
                  "type": "t_bool"
                },
                {
                  "label": "borrowShares",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(interestbearingtankdata)5412_storage": {
              "label": "struct corelibrary.interestbearingtankdata",
              "members": [
                {
                  "label": "status",
                  "type": "t_enum(tankStatus)5388"
                },
                {
                  "label": "baseusd",
                  "type": "t_contract(IBase_usd)5079"
                },
                {
                  "label": "poolConfig",
                  "type": "t_contract(IPoolConfiguration)5132"
                },
                {
                  "label": "totalBorrows",
                  "type": "t_uint256"
                },
                {
                  "label": "totalBorrowShares",
                  "type": "t_uint256"
                },
                {
                  "label": "tankReserves",
                  "type": "t_uint256"
                },
                {
                  "label": "lastUpdateTimestamp",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(lenderstankdata)5394_storage": {
              "label": "struct corelibrary.lenderstankdata",
              "members": [
                {
                  "label": "borrowShares",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(noninterestbearingtankdata)5431_storage": {
              "label": "struct corelibrary.noninterestbearingtankdata",
              "members": [
                {
                  "label": "status",
                  "type": "t_enum(tankStatus)5388"
                },
                {
                  "label": "baseColl",
                  "type": "t_contract(basecoll)5220"
                },
                {
                  "label": "poolConfig",
                  "type": "t_contract(IPoolConfiguration)5132"
                },
                {
                  "label": "lastUpdateTimestamp",
                  "type": "t_uint256"
                },
                {
                  "label": "usdpair",
                  "type": "t_string_storage"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "BaseLend": {
        "src": "contracts/BaseLend.sol:16",
        "version": {
          "withMetadata": "44da380c99932fb3777db8b8fd5eabc4a3212fced529d79ec97927fa53594df2",
          "withoutMetadata": "edc69fbc87cc888384d6ff220ac1337f0b3acef611d0e88822e14a647781ac7f",
          "linkedWithoutMetadata": "edc69fbc87cc888384d6ff220ac1337f0b3acef611d0e88822e14a647781ac7f"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeERC20",
          "SafeMath",
          "WadMath",
          "Math",
          "corelibrary"
        ],
        "methods": [
          "getTotalAvailableLiquidity(address)",
          "getTotalLiquidity(address)",
          "initIBT(address,address)",
          "initNIBT(address,address,string)",
          "getIBTdata()",
          "getNIBTdata(address)",
          "setPriceOracle(address)",
          "setTokens(address,address,address)",
          "setIBTStatus(address,uint8)",
          "setNIBTStatus(address,uint8)",
          "getUserCompoundedBorrowBalance(address)",
          "getUserTankData(address,address)",
          "getUserCompoundedLiquidityBalance(address,address)",
          "getUserAccount(address)",
          "depositColl(address,uint256)",
          "withdrawColl(address,uint256)",
          "borrowBaseusd(uint256)",
          "isAccountHealthy(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "reservePercent",
            "src": "contracts/BaseLend.sol:107"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "baseusd",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IBase_usd)5079",
              "contract": "BaseLend",
              "src": "contracts/BaseLend.sol:90"
            },
            {
              "label": "basecore",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(BaseCore)3610",
              "contract": "BaseLend",
              "src": "contracts/BaseLend.sol:91"
            },
            {
              "label": "backingbalances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "BaseLend",
              "src": "contracts/BaseLend.sol:93"
            },
            {
              "label": "interestbearingtank",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_struct(interestbearingtankdata)5412_storage)",
              "contract": "BaseLend",
              "src": "contracts/BaseLend.sol:94"
            },
            {
              "label": "noninterestbearingtank",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(noninterestbearingtankdata)5431_storage)",
              "contract": "BaseLend",
              "src": "contracts/BaseLend.sol:95"
            },
            {
              "label": "borrowerstank",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_address,t_struct(borrowerstankdata)5417_storage))",
              "contract": "BaseLend",
              "src": "contracts/BaseLend.sol:97"
            },
            {
              "label": "lenderstank",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_mapping(t_address,t_struct(lenderstankdata)5394_storage))",
              "contract": "BaseLend",
              "src": "contracts/BaseLend.sol:98"
            },
            {
              "label": "interestbearingtanklist",
              "offset": 0,
              "slot": "8",
              "type": "t_array(t_contract(ERC20)692)dyn_storage",
              "contract": "BaseLend",
              "src": "contracts/BaseLend.sol:99"
            },
            {
              "label": "noninterestbearingtanklist",
              "offset": 0,
              "slot": "9",
              "type": "t_array(t_contract(ERC20)692)dyn_storage",
              "contract": "BaseLend",
              "src": "contracts/BaseLend.sol:100"
            },
            {
              "label": "basecollDeployer",
              "offset": 0,
              "slot": "10",
              "type": "t_contract(BasecollDeployer)5257",
              "contract": "BaseLend",
              "src": "contracts/BaseLend.sol:102"
            },
            {
              "label": "priceoracle",
              "offset": 0,
              "slot": "11",
              "type": "t_contract(IDAIoraclePriceGetter)5091",
              "contract": "BaseLend",
              "src": "contracts/BaseLend.sol:104"
            },
            {
              "label": "reservePercent",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "BaseLend",
              "src": "contracts/BaseLend.sol:107"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_contract(ERC20)692)dyn_storage": {
              "label": "contract ERC20[]"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_contract(BaseCore)3610": {
              "label": "contract BaseCore"
            },
            "t_contract(BasecollDeployer)5257": {
              "label": "contract BasecollDeployer"
            },
            "t_contract(ERC20)692": {
              "label": "contract ERC20"
            },
            "t_contract(IBase_usd)5079": {
              "label": "contract IBase_usd"
            },
            "t_contract(IDAIoraclePriceGetter)5091": {
              "label": "contract IDAIoraclePriceGetter"
            },
            "t_contract(IPoolConfiguration)5132": {
              "label": "contract IPoolConfiguration"
            },
            "t_contract(basecoll)5220": {
              "label": "contract basecoll"
            },
            "t_enum(tankStatus)5388": {
              "label": "enum corelibrary.tankStatus",
              "members": [
                "INACTIVE",
                "ACTIVE",
                "CLOSED"
              ]
            },
            "t_mapping(t_address,t_mapping(t_address,t_struct(borrowerstankdata)5417_storage))": {
              "label": "mapping(address => mapping(address => struct corelibrary.borrowerstankdata))"
            },
            "t_mapping(t_address,t_mapping(t_address,t_struct(lenderstankdata)5394_storage))": {
              "label": "mapping(address => mapping(address => struct corelibrary.lenderstankdata))"
            },
            "t_mapping(t_address,t_struct(borrowerstankdata)5417_storage)": {
              "label": "mapping(address => struct corelibrary.borrowerstankdata)"
            },
            "t_mapping(t_address,t_struct(interestbearingtankdata)5412_storage)": {
              "label": "mapping(address => struct corelibrary.interestbearingtankdata)"
            },
            "t_mapping(t_address,t_struct(lenderstankdata)5394_storage)": {
              "label": "mapping(address => struct corelibrary.lenderstankdata)"
            },
            "t_mapping(t_address,t_struct(noninterestbearingtankdata)5431_storage)": {
              "label": "mapping(address => struct corelibrary.noninterestbearingtankdata)"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(borrowerstankdata)5417_storage": {
              "label": "struct corelibrary.borrowerstankdata",
              "members": [
                {
                  "label": "disableUseAsCollateral",
                  "type": "t_bool"
                },
                {
                  "label": "borrowShares",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(interestbearingtankdata)5412_storage": {
              "label": "struct corelibrary.interestbearingtankdata",
              "members": [
                {
                  "label": "status",
                  "type": "t_enum(tankStatus)5388"
                },
                {
                  "label": "baseusd",
                  "type": "t_contract(IBase_usd)5079"
                },
                {
                  "label": "poolConfig",
                  "type": "t_contract(IPoolConfiguration)5132"
                },
                {
                  "label": "totalBorrows",
                  "type": "t_uint256"
                },
                {
                  "label": "totalBorrowShares",
                  "type": "t_uint256"
                },
                {
                  "label": "tankReserves",
                  "type": "t_uint256"
                },
                {
                  "label": "lastUpdateTimestamp",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(lenderstankdata)5394_storage": {
              "label": "struct corelibrary.lenderstankdata",
              "members": [
                {
                  "label": "borrowShares",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(noninterestbearingtankdata)5431_storage": {
              "label": "struct corelibrary.noninterestbearingtankdata",
              "members": [
                {
                  "label": "status",
                  "type": "t_enum(tankStatus)5388"
                },
                {
                  "label": "baseColl",
                  "type": "t_contract(basecoll)5220"
                },
                {
                  "label": "poolConfig",
                  "type": "t_contract(IPoolConfiguration)5132"
                },
                {
                  "label": "lastUpdateTimestamp",
                  "type": "t_uint256"
                },
                {
                  "label": "usdpair",
                  "type": "t_string_storage"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IBaseCore": {
        "src": "contracts/Interface/IBaseCore.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(uint256,address)",
          "redeem(uint256,address)",
          "harvest()",
          "earned()",
          "dusdToUsd(uint256,bool)",
          "peaks(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IBase_stables": {
        "src": "contracts/Interface/IBase_stables.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)",
          "burn(address,uint256)",
          "totalSupply()",
          "burnForSelf(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IBase_usd": {
        "src": "contracts/Interface/IBase_usd.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)",
          "burn(address,uint256)",
          "totalSupply()",
          "burnForSelf(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IDAIoraclePriceGetter": {
        "src": "contracts/Interface/IDAIoraclePriceGetter.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getPrice(string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPoolConfiguration": {
        "src": "contracts/Interface/IPoolConfiguration.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getOptimalUtilizationRate()",
          "getBaseBorrowRate()",
          "getLiquidationBonusPercent()",
          "getCollateralPercent()",
          "calculateInterestRate(uint256,uint256)",
          "getUtilizationRate(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "basecoll": {
        "src": "contracts/basecoll.sol:8",
        "version": {
          "withMetadata": "96c48064eae484d6914c27df41ebce0e178e1c2f18a8f039b549f389a87d74f9",
          "withoutMetadata": "fd8a7b64813b41475f4f2ca2e4cc396d01b9a5887e53356bec97171d8ea4acec",
          "linkedWithoutMetadata": "fd8a7b64813b41475f4f2ca2e4cc396d01b9a5887e53356bec97171d8ea4acec"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "methods": [
          "(string,string,address,address)",
          "mint(address,uint256)",
          "burn(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "basecoll",
            "src": "contracts/basecoll.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "basecore",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(BaseCore)3610",
              "contract": "basecoll",
              "src": "contracts/basecoll.sol:11"
            },
            {
              "label": "underlyingAsset",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(ERC20)692",
              "contract": "basecoll",
              "src": "contracts/basecoll.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_contract(BaseCore)3610": {
              "label": "contract BaseCore"
            },
            "t_contract(ERC20)692": {
              "label": "contract ERC20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "BasecollDeployer": {
        "src": "contracts/basecollDeployer.sol:8",
        "version": {
          "withMetadata": "a32f9fb2a5b577ecae0bdb9e90e97a3c0133cb110abf05de147087bbe2be6031",
          "withoutMetadata": "1ab55582d59d7e18c4341d03934803ad67b5fa3804fe85d6d152bd418fb1b701",
          "linkedWithoutMetadata": "1ab55582d59d7e18c4341d03934803ad67b5fa3804fe85d6d152bd418fb1b701"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "createNewbasecoll(string,string,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Math": {
        "src": "contracts/libraries/Math.sol:10",
        "version": {
          "withMetadata": "8eb24f05334341281cfdc4ce9624eb0214fec990a3e7edf35702f88dcb93527f",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "WadMath": {
        "src": "contracts/libraries/WadMath.sol:11",
        "version": {
          "withMetadata": "4469de403b749c3b4e3c35240492ef4d28235438c36c6733c57fd87b0535274f",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "SafeMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "corelibrary": {
        "src": "contracts/libraries/corelibrary.sol:14",
        "version": {
          "withMetadata": "7760e818320e2b93cdd31f85f0d889453a0dc90241c53c946fcc8e4a3e5eeedf",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "SafeERC20",
          "SafeMath",
          "WadMath",
          "Math"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "08295699790c674c5574539ced5280dbb163cab91795b07eb9175feafd7c5c02",
          "withoutMetadata": "7e7a4d2dea64835b308c8a359c3029d74988a4318ba8ef4240ab30513edfd448",
          "linkedWithoutMetadata": "7e7a4d2dea64835b308c8a359c3029d74988a4318ba8ef4240ab30513edfd448"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:18",
        "version": {
          "withMetadata": "3cadbdb25b0d889a6e9d9f749cc008545c861f2916c34f119ffec15ff9894211",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "f453140119aa4ab940c1c866e30faba30c70b1bf42ecb26b808dc4e355066110",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "e96c088265fb723a79b847223722ed9c8034dcd061caf652f25c4bd66d192c8e",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "BaseCore": {
        "src": "contracts/BaseCore.sol:21",
        "version": {
          "withMetadata": "f27685108147554548cbe899f6ff8d134b7daf60fa342b9b39c406e59f7a4717",
          "withoutMetadata": "4d520ee518efa1a05fcd57defa72df4c6445685ff463c21fb7ca530a3fce0dda",
          "linkedWithoutMetadata": "4d520ee518efa1a05fcd57defa72df4c6445685ff463c21fb7ca530a3fce0dda"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeERC20",
          "SafeMath",
          "WadMath",
          "Math",
          "corelibrary"
        ],
        "methods": [
          "(address[5])",
          "transferCollToUser(address,address payable,uint256)",
          "transferBaseUsdToUser(address,address payable,uint256)",
          "initIBT(address,address)",
          "initNIBT(address,address,string)",
          "getIBTdata()",
          "getNIBTdata(address)",
          "setPriceOracle(address)",
          "setTokens(address,address,address,address)",
          "setIBTStatus(address,uint8)",
          "setNIBTStatus(address,uint8)",
          "mint(uint256)",
          "depositColl(address,uint256)",
          "burn(uint256)",
          "withdrawColl(address,uint256)",
          "getBalance(address)",
          "getTotalAvailableLiquidity(address)",
          "getTotalLiquidity(address)",
          "getUserCompoundedLiquidityBalance(address,address)",
          "getUserTankData(address,address)",
          "getUserCompoundedBorrowBalance(address)",
          "getUserAccount(address)",
          "borrowBaseusd(uint256)",
          "isAccountHealthy(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BaseCore",
            "src": "contracts/BaseCore.sol:134"
          },
          {
            "kind": "state-variable-assignment",
            "name": "reservePercent",
            "src": "contracts/BaseCore.sol:131"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "backingcoins",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_address)5_storage",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:112"
            },
            {
              "label": "baseusd",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(IBase_usd)5071",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:114"
            },
            {
              "label": "basestables",
              "offset": 0,
              "slot": "7",
              "type": "t_contract(IBase_stables)5044",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:115"
            },
            {
              "label": "BaseLendAddress",
              "offset": 0,
              "slot": "8",
              "type": "t_contract(BaseLend)4968",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:116"
            },
            {
              "label": "backingbalances",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:118"
            },
            {
              "label": "interestbearingtank",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(interestbearingtankdata)5404_storage)",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:119"
            },
            {
              "label": "noninterestbearingtank",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_struct(noninterestbearingtankdata)5423_storage)",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:120"
            },
            {
              "label": "borrowerstank",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_mapping(t_address,t_struct(borrowerstankdata)5409_storage))",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:122"
            },
            {
              "label": "lenderstank",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_mapping(t_address,t_struct(lenderstankdata)5386_storage))",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:123"
            },
            {
              "label": "interestbearingtanklist",
              "offset": 0,
              "slot": "14",
              "type": "t_array(t_contract(ERC20)692)dyn_storage",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:124"
            },
            {
              "label": "noninterestbearingtanklist",
              "offset": 0,
              "slot": "15",
              "type": "t_array(t_contract(ERC20)692)dyn_storage",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:125"
            },
            {
              "label": "basecollDeployer",
              "offset": 0,
              "slot": "16",
              "type": "t_contract(BasecollDeployer)5249",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:127"
            },
            {
              "label": "priceoracle",
              "offset": 0,
              "slot": "17",
              "type": "t_contract(IDAIoraclePriceGetter)5083",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:129"
            },
            {
              "label": "reservePercent",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:131"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_address)5_storage": {
              "label": "address[5]"
            },
            "t_array(t_contract(ERC20)692)dyn_storage": {
              "label": "contract ERC20[]"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_contract(BaseLend)4968": {
              "label": "contract BaseLend"
            },
            "t_contract(BasecollDeployer)5249": {
              "label": "contract BasecollDeployer"
            },
            "t_contract(ERC20)692": {
              "label": "contract ERC20"
            },
            "t_contract(IBase_stables)5044": {
              "label": "contract IBase_stables"
            },
            "t_contract(IBase_usd)5071": {
              "label": "contract IBase_usd"
            },
            "t_contract(IDAIoraclePriceGetter)5083": {
              "label": "contract IDAIoraclePriceGetter"
            },
            "t_contract(IPoolConfiguration)5124": {
              "label": "contract IPoolConfiguration"
            },
            "t_contract(basecoll)5212": {
              "label": "contract basecoll"
            },
            "t_enum(tankStatus)5380": {
              "label": "enum corelibrary.tankStatus",
              "members": [
                "INACTIVE",
                "ACTIVE",
                "CLOSED"
              ]
            },
            "t_mapping(t_address,t_mapping(t_address,t_struct(borrowerstankdata)5409_storage))": {
              "label": "mapping(address => mapping(address => struct corelibrary.borrowerstankdata))"
            },
            "t_mapping(t_address,t_mapping(t_address,t_struct(lenderstankdata)5386_storage))": {
              "label": "mapping(address => mapping(address => struct corelibrary.lenderstankdata))"
            },
            "t_mapping(t_address,t_struct(borrowerstankdata)5409_storage)": {
              "label": "mapping(address => struct corelibrary.borrowerstankdata)"
            },
            "t_mapping(t_address,t_struct(interestbearingtankdata)5404_storage)": {
              "label": "mapping(address => struct corelibrary.interestbearingtankdata)"
            },
            "t_mapping(t_address,t_struct(lenderstankdata)5386_storage)": {
              "label": "mapping(address => struct corelibrary.lenderstankdata)"
            },
            "t_mapping(t_address,t_struct(noninterestbearingtankdata)5423_storage)": {
              "label": "mapping(address => struct corelibrary.noninterestbearingtankdata)"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(borrowerstankdata)5409_storage": {
              "label": "struct corelibrary.borrowerstankdata",
              "members": [
                {
                  "label": "disableUseAsCollateral",
                  "type": "t_bool"
                },
                {
                  "label": "borrowShares",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(interestbearingtankdata)5404_storage": {
              "label": "struct corelibrary.interestbearingtankdata",
              "members": [
                {
                  "label": "status",
                  "type": "t_enum(tankStatus)5380"
                },
                {
                  "label": "baseusd",
                  "type": "t_contract(IBase_usd)5071"
                },
                {
                  "label": "poolConfig",
                  "type": "t_contract(IPoolConfiguration)5124"
                },
                {
                  "label": "totalBorrows",
                  "type": "t_uint256"
                },
                {
                  "label": "totalBorrowShares",
                  "type": "t_uint256"
                },
                {
                  "label": "tankReserves",
                  "type": "t_uint256"
                },
                {
                  "label": "lastUpdateTimestamp",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(lenderstankdata)5386_storage": {
              "label": "struct corelibrary.lenderstankdata",
              "members": [
                {
                  "label": "borrowShares",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(noninterestbearingtankdata)5423_storage": {
              "label": "struct corelibrary.noninterestbearingtankdata",
              "members": [
                {
                  "label": "status",
                  "type": "t_enum(tankStatus)5380"
                },
                {
                  "label": "baseColl",
                  "type": "t_contract(basecoll)5212"
                },
                {
                  "label": "poolConfig",
                  "type": "t_contract(IPoolConfiguration)5124"
                },
                {
                  "label": "lastUpdateTimestamp",
                  "type": "t_uint256"
                },
                {
                  "label": "usdpair",
                  "type": "t_string_storage"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "BaseLend": {
        "src": "contracts/BaseLend.sol:16",
        "version": {
          "withMetadata": "f0a459cfe4d4cb9c3bc20e164aacc30c53f6759da989e2f0820acffd80139918",
          "withoutMetadata": "d3709757361f3559b1500ee6ce3a8c306cd84096e6a2456afa2c62ffc7aff683",
          "linkedWithoutMetadata": "d3709757361f3559b1500ee6ce3a8c306cd84096e6a2456afa2c62ffc7aff683"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeERC20",
          "SafeMath",
          "WadMath",
          "Math",
          "corelibrary"
        ],
        "methods": [
          "getTotalAvailableLiquidity(address)",
          "getTotalLiquidity(address)",
          "initIBT(address,address)",
          "initNIBT(address,address,string)",
          "getIBTdata()",
          "getNIBTdata(address)",
          "setPriceOracle(address)",
          "setTokens(address,address,address)",
          "setIBTStatus(address,uint8)",
          "setNIBTStatus(address,uint8)",
          "getUserCompoundedBorrowBalance(address)",
          "getUserTankData(address,address)",
          "getUserCompoundedLiquidityBalance(address,address)",
          "getUserAccount(address)",
          "depositColl(address,uint256)",
          "withdrawColl(address,uint256)",
          "borrowBaseusd(uint256)",
          "isAccountHealthy(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "reservePercent",
            "src": "contracts/BaseLend.sol:107"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "baseusd",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IBase_usd)5071",
              "contract": "BaseLend",
              "src": "contracts/BaseLend.sol:90"
            },
            {
              "label": "basecore",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(BaseCore)3610",
              "contract": "BaseLend",
              "src": "contracts/BaseLend.sol:91"
            },
            {
              "label": "backingbalances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "BaseLend",
              "src": "contracts/BaseLend.sol:93"
            },
            {
              "label": "interestbearingtank",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_struct(interestbearingtankdata)5404_storage)",
              "contract": "BaseLend",
              "src": "contracts/BaseLend.sol:94"
            },
            {
              "label": "noninterestbearingtank",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(noninterestbearingtankdata)5423_storage)",
              "contract": "BaseLend",
              "src": "contracts/BaseLend.sol:95"
            },
            {
              "label": "borrowerstank",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_address,t_struct(borrowerstankdata)5409_storage))",
              "contract": "BaseLend",
              "src": "contracts/BaseLend.sol:97"
            },
            {
              "label": "lenderstank",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_mapping(t_address,t_struct(lenderstankdata)5386_storage))",
              "contract": "BaseLend",
              "src": "contracts/BaseLend.sol:98"
            },
            {
              "label": "interestbearingtanklist",
              "offset": 0,
              "slot": "8",
              "type": "t_array(t_contract(ERC20)692)dyn_storage",
              "contract": "BaseLend",
              "src": "contracts/BaseLend.sol:99"
            },
            {
              "label": "noninterestbearingtanklist",
              "offset": 0,
              "slot": "9",
              "type": "t_array(t_contract(ERC20)692)dyn_storage",
              "contract": "BaseLend",
              "src": "contracts/BaseLend.sol:100"
            },
            {
              "label": "basecollDeployer",
              "offset": 0,
              "slot": "10",
              "type": "t_contract(BasecollDeployer)5249",
              "contract": "BaseLend",
              "src": "contracts/BaseLend.sol:102"
            },
            {
              "label": "priceoracle",
              "offset": 0,
              "slot": "11",
              "type": "t_contract(IDAIoraclePriceGetter)5083",
              "contract": "BaseLend",
              "src": "contracts/BaseLend.sol:104"
            },
            {
              "label": "reservePercent",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "BaseLend",
              "src": "contracts/BaseLend.sol:107"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_contract(ERC20)692)dyn_storage": {
              "label": "contract ERC20[]"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_contract(BaseCore)3610": {
              "label": "contract BaseCore"
            },
            "t_contract(BasecollDeployer)5249": {
              "label": "contract BasecollDeployer"
            },
            "t_contract(ERC20)692": {
              "label": "contract ERC20"
            },
            "t_contract(IBase_usd)5071": {
              "label": "contract IBase_usd"
            },
            "t_contract(IDAIoraclePriceGetter)5083": {
              "label": "contract IDAIoraclePriceGetter"
            },
            "t_contract(IPoolConfiguration)5124": {
              "label": "contract IPoolConfiguration"
            },
            "t_contract(basecoll)5212": {
              "label": "contract basecoll"
            },
            "t_enum(tankStatus)5380": {
              "label": "enum corelibrary.tankStatus",
              "members": [
                "INACTIVE",
                "ACTIVE",
                "CLOSED"
              ]
            },
            "t_mapping(t_address,t_mapping(t_address,t_struct(borrowerstankdata)5409_storage))": {
              "label": "mapping(address => mapping(address => struct corelibrary.borrowerstankdata))"
            },
            "t_mapping(t_address,t_mapping(t_address,t_struct(lenderstankdata)5386_storage))": {
              "label": "mapping(address => mapping(address => struct corelibrary.lenderstankdata))"
            },
            "t_mapping(t_address,t_struct(borrowerstankdata)5409_storage)": {
              "label": "mapping(address => struct corelibrary.borrowerstankdata)"
            },
            "t_mapping(t_address,t_struct(interestbearingtankdata)5404_storage)": {
              "label": "mapping(address => struct corelibrary.interestbearingtankdata)"
            },
            "t_mapping(t_address,t_struct(lenderstankdata)5386_storage)": {
              "label": "mapping(address => struct corelibrary.lenderstankdata)"
            },
            "t_mapping(t_address,t_struct(noninterestbearingtankdata)5423_storage)": {
              "label": "mapping(address => struct corelibrary.noninterestbearingtankdata)"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(borrowerstankdata)5409_storage": {
              "label": "struct corelibrary.borrowerstankdata",
              "members": [
                {
                  "label": "disableUseAsCollateral",
                  "type": "t_bool"
                },
                {
                  "label": "borrowShares",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(interestbearingtankdata)5404_storage": {
              "label": "struct corelibrary.interestbearingtankdata",
              "members": [
                {
                  "label": "status",
                  "type": "t_enum(tankStatus)5380"
                },
                {
                  "label": "baseusd",
                  "type": "t_contract(IBase_usd)5071"
                },
                {
                  "label": "poolConfig",
                  "type": "t_contract(IPoolConfiguration)5124"
                },
                {
                  "label": "totalBorrows",
                  "type": "t_uint256"
                },
                {
                  "label": "totalBorrowShares",
                  "type": "t_uint256"
                },
                {
                  "label": "tankReserves",
                  "type": "t_uint256"
                },
                {
                  "label": "lastUpdateTimestamp",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(lenderstankdata)5386_storage": {
              "label": "struct corelibrary.lenderstankdata",
              "members": [
                {
                  "label": "borrowShares",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(noninterestbearingtankdata)5423_storage": {
              "label": "struct corelibrary.noninterestbearingtankdata",
              "members": [
                {
                  "label": "status",
                  "type": "t_enum(tankStatus)5380"
                },
                {
                  "label": "baseColl",
                  "type": "t_contract(basecoll)5212"
                },
                {
                  "label": "poolConfig",
                  "type": "t_contract(IPoolConfiguration)5124"
                },
                {
                  "label": "lastUpdateTimestamp",
                  "type": "t_uint256"
                },
                {
                  "label": "usdpair",
                  "type": "t_string_storage"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IBaseCore": {
        "src": "contracts/Interface/IBaseCore.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(uint256,address)",
          "redeem(uint256,address)",
          "harvest()",
          "earned()",
          "dusdToUsd(uint256,bool)",
          "peaks(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IBase_stables": {
        "src": "contracts/Interface/IBase_stables.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)",
          "burn(address,uint256)",
          "totalSupply()",
          "burnForSelf(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IBase_usd": {
        "src": "contracts/Interface/IBase_usd.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)",
          "burn(address,uint256)",
          "totalSupply()",
          "burnForSelf(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IDAIoraclePriceGetter": {
        "src": "contracts/Interface/IDAIoraclePriceGetter.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getPrice(string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPoolConfiguration": {
        "src": "contracts/Interface/IPoolConfiguration.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getOptimalUtilizationRate()",
          "getBaseBorrowRate()",
          "getLiquidationBonusPercent()",
          "getCollateralPercent()",
          "calculateInterestRate(uint256,uint256)",
          "getUtilizationRate(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "basecoll": {
        "src": "contracts/basecoll.sol:8",
        "version": {
          "withMetadata": "06b095a32901581eea608cdd0913c47d5d38ef1e0d2c42c908517ba4c9056fdf",
          "withoutMetadata": "fd8a7b64813b41475f4f2ca2e4cc396d01b9a5887e53356bec97171d8ea4acec",
          "linkedWithoutMetadata": "fd8a7b64813b41475f4f2ca2e4cc396d01b9a5887e53356bec97171d8ea4acec"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "methods": [
          "(string,string,address,address)",
          "mint(address,uint256)",
          "burn(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "basecoll",
            "src": "contracts/basecoll.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "basecore",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(BaseCore)3610",
              "contract": "basecoll",
              "src": "contracts/basecoll.sol:11"
            },
            {
              "label": "underlyingAsset",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(ERC20)692",
              "contract": "basecoll",
              "src": "contracts/basecoll.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_contract(BaseCore)3610": {
              "label": "contract BaseCore"
            },
            "t_contract(ERC20)692": {
              "label": "contract ERC20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "BasecollDeployer": {
        "src": "contracts/basecollDeployer.sol:8",
        "version": {
          "withMetadata": "382d8d411f61be4ca2fcbeb74b4281523a043b8528879c1ba3d3431f33aa9c8d",
          "withoutMetadata": "1b5a07d7045586017c1cd89175614cd461225ea57d754a71ae357021bb37315c",
          "linkedWithoutMetadata": "1b5a07d7045586017c1cd89175614cd461225ea57d754a71ae357021bb37315c"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "createNewbasecoll(string,string,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Math": {
        "src": "contracts/libraries/Math.sol:10",
        "version": {
          "withMetadata": "8eb24f05334341281cfdc4ce9624eb0214fec990a3e7edf35702f88dcb93527f",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "WadMath": {
        "src": "contracts/libraries/WadMath.sol:11",
        "version": {
          "withMetadata": "4469de403b749c3b4e3c35240492ef4d28235438c36c6733c57fd87b0535274f",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "SafeMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "corelibrary": {
        "src": "contracts/libraries/corelibrary.sol:14",
        "version": {
          "withMetadata": "21faef3c4dd13f1f2e765303ba7f280c49eea07669d1372bf4fc197df0fdec9a",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "SafeERC20",
          "SafeMath",
          "WadMath",
          "Math"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "08295699790c674c5574539ced5280dbb163cab91795b07eb9175feafd7c5c02",
          "withoutMetadata": "7e7a4d2dea64835b308c8a359c3029d74988a4318ba8ef4240ab30513edfd448",
          "linkedWithoutMetadata": "7e7a4d2dea64835b308c8a359c3029d74988a4318ba8ef4240ab30513edfd448"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:18",
        "version": {
          "withMetadata": "3cadbdb25b0d889a6e9d9f749cc008545c861f2916c34f119ffec15ff9894211",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "f453140119aa4ab940c1c866e30faba30c70b1bf42ecb26b808dc4e355066110",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "e96c088265fb723a79b847223722ed9c8034dcd061caf652f25c4bd66d192c8e",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "BaseCore": {
        "src": "contracts/BaseCore.sol:21",
        "version": {
          "withMetadata": "6841bcef784f26b17a76b68da56179f14bb8598a1765019c289e0e43d84931a5",
          "withoutMetadata": "4d520ee518efa1a05fcd57defa72df4c6445685ff463c21fb7ca530a3fce0dda",
          "linkedWithoutMetadata": "4d520ee518efa1a05fcd57defa72df4c6445685ff463c21fb7ca530a3fce0dda"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeERC20",
          "SafeMath",
          "WadMath",
          "Math",
          "corelibrary"
        ],
        "methods": [
          "(address[5])",
          "transferCollToUser(address,address payable,uint256)",
          "transferBaseUsdToUser(address,address payable,uint256)",
          "initIBT(address,address)",
          "initNIBT(address,address,string)",
          "getIBTdata()",
          "getNIBTdata(address)",
          "setPriceOracle(address)",
          "setTokens(address,address,address,address)",
          "setIBTStatus(address,uint8)",
          "setNIBTStatus(address,uint8)",
          "mint(uint256)",
          "depositColl(address,uint256)",
          "burn(uint256)",
          "withdrawColl(address,uint256)",
          "getBalance(address)",
          "getTotalAvailableLiquidity(address)",
          "getTotalLiquidity(address)",
          "getUserCompoundedLiquidityBalance(address,address)",
          "getUserTankData(address,address)",
          "getUserCompoundedBorrowBalance(address)",
          "getUserAccount(address)",
          "borrowBaseusd(uint256)",
          "isAccountHealthy(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BaseCore",
            "src": "contracts/BaseCore.sol:134"
          },
          {
            "kind": "state-variable-assignment",
            "name": "reservePercent",
            "src": "contracts/BaseCore.sol:131"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "backingcoins",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_address)5_storage",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:112"
            },
            {
              "label": "baseusd",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(IBase_usd)4787",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:114"
            },
            {
              "label": "basestables",
              "offset": 0,
              "slot": "7",
              "type": "t_contract(IBase_stables)4760",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:115"
            },
            {
              "label": "BaseLendAddress",
              "offset": 0,
              "slot": "8",
              "type": "t_contract(BaseLend)4684",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:116"
            },
            {
              "label": "backingbalances",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:118"
            },
            {
              "label": "interestbearingtank",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(interestbearingtankdata)5120_storage)",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:119"
            },
            {
              "label": "noninterestbearingtank",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_struct(noninterestbearingtankdata)5139_storage)",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:120"
            },
            {
              "label": "borrowerstank",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_mapping(t_address,t_struct(borrowerstankdata)5125_storage))",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:122"
            },
            {
              "label": "lenderstank",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_mapping(t_address,t_struct(lenderstankdata)5102_storage))",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:123"
            },
            {
              "label": "interestbearingtanklist",
              "offset": 0,
              "slot": "14",
              "type": "t_array(t_contract(ERC20)692)dyn_storage",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:124"
            },
            {
              "label": "noninterestbearingtanklist",
              "offset": 0,
              "slot": "15",
              "type": "t_array(t_contract(ERC20)692)dyn_storage",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:125"
            },
            {
              "label": "basecollDeployer",
              "offset": 0,
              "slot": "16",
              "type": "t_contract(BasecollDeployer)4965",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:127"
            },
            {
              "label": "priceoracle",
              "offset": 0,
              "slot": "17",
              "type": "t_contract(IDAIoraclePriceGetter)4799",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:129"
            },
            {
              "label": "reservePercent",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:131"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_address)5_storage": {
              "label": "address[5]"
            },
            "t_array(t_contract(ERC20)692)dyn_storage": {
              "label": "contract ERC20[]"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_contract(BaseLend)4684": {
              "label": "contract BaseLend"
            },
            "t_contract(BasecollDeployer)4965": {
              "label": "contract BasecollDeployer"
            },
            "t_contract(ERC20)692": {
              "label": "contract ERC20"
            },
            "t_contract(IBase_stables)4760": {
              "label": "contract IBase_stables"
            },
            "t_contract(IBase_usd)4787": {
              "label": "contract IBase_usd"
            },
            "t_contract(IDAIoraclePriceGetter)4799": {
              "label": "contract IDAIoraclePriceGetter"
            },
            "t_contract(IPoolConfiguration)4840": {
              "label": "contract IPoolConfiguration"
            },
            "t_contract(basecoll)4928": {
              "label": "contract basecoll"
            },
            "t_enum(tankStatus)5096": {
              "label": "enum corelibrary.tankStatus",
              "members": [
                "INACTIVE",
                "ACTIVE",
                "CLOSED"
              ]
            },
            "t_mapping(t_address,t_mapping(t_address,t_struct(borrowerstankdata)5125_storage))": {
              "label": "mapping(address => mapping(address => struct corelibrary.borrowerstankdata))"
            },
            "t_mapping(t_address,t_mapping(t_address,t_struct(lenderstankdata)5102_storage))": {
              "label": "mapping(address => mapping(address => struct corelibrary.lenderstankdata))"
            },
            "t_mapping(t_address,t_struct(borrowerstankdata)5125_storage)": {
              "label": "mapping(address => struct corelibrary.borrowerstankdata)"
            },
            "t_mapping(t_address,t_struct(interestbearingtankdata)5120_storage)": {
              "label": "mapping(address => struct corelibrary.interestbearingtankdata)"
            },
            "t_mapping(t_address,t_struct(lenderstankdata)5102_storage)": {
              "label": "mapping(address => struct corelibrary.lenderstankdata)"
            },
            "t_mapping(t_address,t_struct(noninterestbearingtankdata)5139_storage)": {
              "label": "mapping(address => struct corelibrary.noninterestbearingtankdata)"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(borrowerstankdata)5125_storage": {
              "label": "struct corelibrary.borrowerstankdata",
              "members": [
                {
                  "label": "disableUseAsCollateral",
                  "type": "t_bool"
                },
                {
                  "label": "borrowShares",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(interestbearingtankdata)5120_storage": {
              "label": "struct corelibrary.interestbearingtankdata",
              "members": [
                {
                  "label": "status",
                  "type": "t_enum(tankStatus)5096"
                },
                {
                  "label": "baseusd",
                  "type": "t_contract(IBase_usd)4787"
                },
                {
                  "label": "poolConfig",
                  "type": "t_contract(IPoolConfiguration)4840"
                },
                {
                  "label": "totalBorrows",
                  "type": "t_uint256"
                },
                {
                  "label": "totalBorrowShares",
                  "type": "t_uint256"
                },
                {
                  "label": "tankReserves",
                  "type": "t_uint256"
                },
                {
                  "label": "lastUpdateTimestamp",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(lenderstankdata)5102_storage": {
              "label": "struct corelibrary.lenderstankdata",
              "members": [
                {
                  "label": "borrowShares",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(noninterestbearingtankdata)5139_storage": {
              "label": "struct corelibrary.noninterestbearingtankdata",
              "members": [
                {
                  "label": "status",
                  "type": "t_enum(tankStatus)5096"
                },
                {
                  "label": "baseColl",
                  "type": "t_contract(basecoll)4928"
                },
                {
                  "label": "poolConfig",
                  "type": "t_contract(IPoolConfiguration)4840"
                },
                {
                  "label": "lastUpdateTimestamp",
                  "type": "t_uint256"
                },
                {
                  "label": "usdpair",
                  "type": "t_string_storage"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "BaseLend": {
        "src": "contracts/BaseLend.sol:16",
        "version": {
          "withMetadata": "0c931cbf4f16a85d1470798d5ff8dc7fc89d447e93ea091fe9a43056b29abe8d",
          "withoutMetadata": "031494b5af6c78bdbdc84f7ecb8f407fcfc2138543e962c8cbe2dfdb80b4ebdf",
          "linkedWithoutMetadata": "031494b5af6c78bdbdc84f7ecb8f407fcfc2138543e962c8cbe2dfdb80b4ebdf"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeERC20",
          "SafeMath",
          "WadMath",
          "Math",
          "corelibrary"
        ],
        "methods": [
          "getTotalAvailableLiquidity(address)",
          "getTotalLiquidity(address)",
          "initIBT(address,address)",
          "initNIBT(address,address,string)",
          "getIBTdata()",
          "getNIBTdata(address)",
          "setPriceOracle(address)",
          "setTokens(address,address,address)",
          "setIBTStatus(address,uint8)",
          "setNIBTStatus(address,uint8)",
          "depositColl(address,uint256)",
          "withdrawColl(address,uint256)",
          "borrowBaseusd(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "reservePercent",
            "src": "contracts/BaseLend.sol:107"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "baseusd",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IBase_usd)4787",
              "contract": "BaseLend",
              "src": "contracts/BaseLend.sol:90"
            },
            {
              "label": "basecore",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(BaseCore)3610",
              "contract": "BaseLend",
              "src": "contracts/BaseLend.sol:91"
            },
            {
              "label": "backingbalances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "BaseLend",
              "src": "contracts/BaseLend.sol:93"
            },
            {
              "label": "interestbearingtank",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_struct(interestbearingtankdata)5120_storage)",
              "contract": "BaseLend",
              "src": "contracts/BaseLend.sol:94"
            },
            {
              "label": "noninterestbearingtank",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(noninterestbearingtankdata)5139_storage)",
              "contract": "BaseLend",
              "src": "contracts/BaseLend.sol:95"
            },
            {
              "label": "borrowerstank",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_address,t_struct(borrowerstankdata)5125_storage))",
              "contract": "BaseLend",
              "src": "contracts/BaseLend.sol:97"
            },
            {
              "label": "lenderstank",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_mapping(t_address,t_struct(lenderstankdata)5102_storage))",
              "contract": "BaseLend",
              "src": "contracts/BaseLend.sol:98"
            },
            {
              "label": "interestbearingtanklist",
              "offset": 0,
              "slot": "8",
              "type": "t_array(t_contract(ERC20)692)dyn_storage",
              "contract": "BaseLend",
              "src": "contracts/BaseLend.sol:99"
            },
            {
              "label": "noninterestbearingtanklist",
              "offset": 0,
              "slot": "9",
              "type": "t_array(t_contract(ERC20)692)dyn_storage",
              "contract": "BaseLend",
              "src": "contracts/BaseLend.sol:100"
            },
            {
              "label": "basecollDeployer",
              "offset": 0,
              "slot": "10",
              "type": "t_contract(BasecollDeployer)4965",
              "contract": "BaseLend",
              "src": "contracts/BaseLend.sol:102"
            },
            {
              "label": "priceoracle",
              "offset": 0,
              "slot": "11",
              "type": "t_contract(IDAIoraclePriceGetter)4799",
              "contract": "BaseLend",
              "src": "contracts/BaseLend.sol:104"
            },
            {
              "label": "reservePercent",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "BaseLend",
              "src": "contracts/BaseLend.sol:107"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_contract(ERC20)692)dyn_storage": {
              "label": "contract ERC20[]"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_contract(BaseCore)3610": {
              "label": "contract BaseCore"
            },
            "t_contract(BasecollDeployer)4965": {
              "label": "contract BasecollDeployer"
            },
            "t_contract(ERC20)692": {
              "label": "contract ERC20"
            },
            "t_contract(IBase_usd)4787": {
              "label": "contract IBase_usd"
            },
            "t_contract(IDAIoraclePriceGetter)4799": {
              "label": "contract IDAIoraclePriceGetter"
            },
            "t_contract(IPoolConfiguration)4840": {
              "label": "contract IPoolConfiguration"
            },
            "t_contract(basecoll)4928": {
              "label": "contract basecoll"
            },
            "t_enum(tankStatus)5096": {
              "label": "enum corelibrary.tankStatus",
              "members": [
                "INACTIVE",
                "ACTIVE",
                "CLOSED"
              ]
            },
            "t_mapping(t_address,t_mapping(t_address,t_struct(borrowerstankdata)5125_storage))": {
              "label": "mapping(address => mapping(address => struct corelibrary.borrowerstankdata))"
            },
            "t_mapping(t_address,t_mapping(t_address,t_struct(lenderstankdata)5102_storage))": {
              "label": "mapping(address => mapping(address => struct corelibrary.lenderstankdata))"
            },
            "t_mapping(t_address,t_struct(borrowerstankdata)5125_storage)": {
              "label": "mapping(address => struct corelibrary.borrowerstankdata)"
            },
            "t_mapping(t_address,t_struct(interestbearingtankdata)5120_storage)": {
              "label": "mapping(address => struct corelibrary.interestbearingtankdata)"
            },
            "t_mapping(t_address,t_struct(lenderstankdata)5102_storage)": {
              "label": "mapping(address => struct corelibrary.lenderstankdata)"
            },
            "t_mapping(t_address,t_struct(noninterestbearingtankdata)5139_storage)": {
              "label": "mapping(address => struct corelibrary.noninterestbearingtankdata)"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(borrowerstankdata)5125_storage": {
              "label": "struct corelibrary.borrowerstankdata",
              "members": [
                {
                  "label": "disableUseAsCollateral",
                  "type": "t_bool"
                },
                {
                  "label": "borrowShares",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(interestbearingtankdata)5120_storage": {
              "label": "struct corelibrary.interestbearingtankdata",
              "members": [
                {
                  "label": "status",
                  "type": "t_enum(tankStatus)5096"
                },
                {
                  "label": "baseusd",
                  "type": "t_contract(IBase_usd)4787"
                },
                {
                  "label": "poolConfig",
                  "type": "t_contract(IPoolConfiguration)4840"
                },
                {
                  "label": "totalBorrows",
                  "type": "t_uint256"
                },
                {
                  "label": "totalBorrowShares",
                  "type": "t_uint256"
                },
                {
                  "label": "tankReserves",
                  "type": "t_uint256"
                },
                {
                  "label": "lastUpdateTimestamp",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(lenderstankdata)5102_storage": {
              "label": "struct corelibrary.lenderstankdata",
              "members": [
                {
                  "label": "borrowShares",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(noninterestbearingtankdata)5139_storage": {
              "label": "struct corelibrary.noninterestbearingtankdata",
              "members": [
                {
                  "label": "status",
                  "type": "t_enum(tankStatus)5096"
                },
                {
                  "label": "baseColl",
                  "type": "t_contract(basecoll)4928"
                },
                {
                  "label": "poolConfig",
                  "type": "t_contract(IPoolConfiguration)4840"
                },
                {
                  "label": "lastUpdateTimestamp",
                  "type": "t_uint256"
                },
                {
                  "label": "usdpair",
                  "type": "t_string_storage"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IBaseCore": {
        "src": "contracts/Interface/IBaseCore.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(uint256,address)",
          "redeem(uint256,address)",
          "harvest()",
          "earned()",
          "dusdToUsd(uint256,bool)",
          "peaks(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IBase_stables": {
        "src": "contracts/Interface/IBase_stables.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)",
          "burn(address,uint256)",
          "totalSupply()",
          "burnForSelf(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IBase_usd": {
        "src": "contracts/Interface/IBase_usd.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)",
          "burn(address,uint256)",
          "totalSupply()",
          "burnForSelf(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IDAIoraclePriceGetter": {
        "src": "contracts/Interface/IDAIoraclePriceGetter.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getPrice(string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPoolConfiguration": {
        "src": "contracts/Interface/IPoolConfiguration.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getOptimalUtilizationRate()",
          "getBaseBorrowRate()",
          "getLiquidationBonusPercent()",
          "getCollateralPercent()",
          "calculateInterestRate(uint256,uint256)",
          "getUtilizationRate(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "basecoll": {
        "src": "contracts/basecoll.sol:8",
        "version": {
          "withMetadata": "306f7ebd4973716f2a57f652c168f719993fc0a37b8e6dbb2b3d3fc8ab5aed62",
          "withoutMetadata": "fd8a7b64813b41475f4f2ca2e4cc396d01b9a5887e53356bec97171d8ea4acec",
          "linkedWithoutMetadata": "fd8a7b64813b41475f4f2ca2e4cc396d01b9a5887e53356bec97171d8ea4acec"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "methods": [
          "(string,string,address,address)",
          "mint(address,uint256)",
          "burn(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "basecoll",
            "src": "contracts/basecoll.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "basecore",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(BaseCore)3610",
              "contract": "basecoll",
              "src": "contracts/basecoll.sol:11"
            },
            {
              "label": "underlyingAsset",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(ERC20)692",
              "contract": "basecoll",
              "src": "contracts/basecoll.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_contract(BaseCore)3610": {
              "label": "contract BaseCore"
            },
            "t_contract(ERC20)692": {
              "label": "contract ERC20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "BasecollDeployer": {
        "src": "contracts/basecollDeployer.sol:8",
        "version": {
          "withMetadata": "f4623bcb998df3ef01b635b50f32935a1173613caf0b3eb7158153d722506497",
          "withoutMetadata": "8b61b9196125c04cd26e77722c07ae44d4ee7db83aef32dde840d77e1df63ad1",
          "linkedWithoutMetadata": "8b61b9196125c04cd26e77722c07ae44d4ee7db83aef32dde840d77e1df63ad1"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "createNewbasecoll(string,string,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Math": {
        "src": "contracts/libraries/Math.sol:10",
        "version": {
          "withMetadata": "8eb24f05334341281cfdc4ce9624eb0214fec990a3e7edf35702f88dcb93527f",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "WadMath": {
        "src": "contracts/libraries/WadMath.sol:11",
        "version": {
          "withMetadata": "4469de403b749c3b4e3c35240492ef4d28235438c36c6733c57fd87b0535274f",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "SafeMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "corelibrary": {
        "src": "contracts/libraries/corelibrary.sol:14",
        "version": {
          "withMetadata": "30fc271e5472c39d57f4ff68b9c80b1c9b109cf05de44869299cda295cc4aef6",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "SafeERC20",
          "SafeMath",
          "WadMath",
          "Math"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "08295699790c674c5574539ced5280dbb163cab91795b07eb9175feafd7c5c02",
          "withoutMetadata": "7e7a4d2dea64835b308c8a359c3029d74988a4318ba8ef4240ab30513edfd448",
          "linkedWithoutMetadata": "7e7a4d2dea64835b308c8a359c3029d74988a4318ba8ef4240ab30513edfd448"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:18",
        "version": {
          "withMetadata": "3cadbdb25b0d889a6e9d9f749cc008545c861f2916c34f119ffec15ff9894211",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "f453140119aa4ab940c1c866e30faba30c70b1bf42ecb26b808dc4e355066110",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "e96c088265fb723a79b847223722ed9c8034dcd061caf652f25c4bd66d192c8e",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "BaseCore": {
        "src": "contracts/BaseCore.sol:21",
        "version": {
          "withMetadata": "60255b4346fb221253d2ba9dbabc680316858bc4eae29403479afcf01e75af42",
          "withoutMetadata": "4f5e07ed7609b8bcb36c67148756289626e5c077e21907484f78bb75ca0bb57e",
          "linkedWithoutMetadata": "4f5e07ed7609b8bcb36c67148756289626e5c077e21907484f78bb75ca0bb57e"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeERC20",
          "SafeMath",
          "WadMath",
          "Math",
          "corelibrary"
        ],
        "methods": [
          "(address[5])",
          "transferCollToUser(address,address payable,uint256)",
          "initIBT(address,address)",
          "initNIBT(address,address,string)",
          "getIBTdata()",
          "getNIBTdata(address)",
          "setPriceOracle(address)",
          "setTokens(address,address,address,address)",
          "setIBTStatus(address,uint8)",
          "setNIBTStatus(address,uint8)",
          "mint(uint256)",
          "depositColl(address,uint256)",
          "burn(uint256)",
          "withdrawColl(address,uint256)",
          "getBalance(address)",
          "getTotalAvailableLiquidity(address)",
          "getTotalLiquidity(address)",
          "getUserCompoundedLiquidityBalance(address,address)",
          "getUserTankData(address,address)",
          "getUserCompoundedBorrowBalance(address)",
          "getUserAccount(address)",
          "borrowBaseusd(uint256)",
          "isAccountHealthy(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BaseCore",
            "src": "contracts/BaseCore.sol:134"
          },
          {
            "kind": "state-variable-assignment",
            "name": "reservePercent",
            "src": "contracts/BaseCore.sol:131"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "backingcoins",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_address)5_storage",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:112"
            },
            {
              "label": "baseusd",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(IBase_usd)4600",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:114"
            },
            {
              "label": "basestables",
              "offset": 0,
              "slot": "7",
              "type": "t_contract(IBase_stables)4573",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:115"
            },
            {
              "label": "BaseLendAddress",
              "offset": 0,
              "slot": "8",
              "type": "t_contract(BaseLend)4497",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:116"
            },
            {
              "label": "backingbalances",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:118"
            },
            {
              "label": "interestbearingtank",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(interestbearingtankdata)4933_storage)",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:119"
            },
            {
              "label": "noninterestbearingtank",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_struct(noninterestbearingtankdata)4952_storage)",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:120"
            },
            {
              "label": "borrowerstank",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_mapping(t_address,t_struct(borrowerstankdata)4938_storage))",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:122"
            },
            {
              "label": "lenderstank",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_mapping(t_address,t_struct(lenderstankdata)4915_storage))",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:123"
            },
            {
              "label": "interestbearingtanklist",
              "offset": 0,
              "slot": "14",
              "type": "t_array(t_contract(ERC20)692)dyn_storage",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:124"
            },
            {
              "label": "noninterestbearingtanklist",
              "offset": 0,
              "slot": "15",
              "type": "t_array(t_contract(ERC20)692)dyn_storage",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:125"
            },
            {
              "label": "basecollDeployer",
              "offset": 0,
              "slot": "16",
              "type": "t_contract(BasecollDeployer)4778",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:127"
            },
            {
              "label": "priceoracle",
              "offset": 0,
              "slot": "17",
              "type": "t_contract(IDAIoraclePriceGetter)4612",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:129"
            },
            {
              "label": "reservePercent",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:131"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_address)5_storage": {
              "label": "address[5]"
            },
            "t_array(t_contract(ERC20)692)dyn_storage": {
              "label": "contract ERC20[]"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_contract(BaseLend)4497": {
              "label": "contract BaseLend"
            },
            "t_contract(BasecollDeployer)4778": {
              "label": "contract BasecollDeployer"
            },
            "t_contract(ERC20)692": {
              "label": "contract ERC20"
            },
            "t_contract(IBase_stables)4573": {
              "label": "contract IBase_stables"
            },
            "t_contract(IBase_usd)4600": {
              "label": "contract IBase_usd"
            },
            "t_contract(IDAIoraclePriceGetter)4612": {
              "label": "contract IDAIoraclePriceGetter"
            },
            "t_contract(IPoolConfiguration)4653": {
              "label": "contract IPoolConfiguration"
            },
            "t_contract(basecoll)4741": {
              "label": "contract basecoll"
            },
            "t_enum(tankStatus)4909": {
              "label": "enum corelibrary.tankStatus",
              "members": [
                "INACTIVE",
                "ACTIVE",
                "CLOSED"
              ]
            },
            "t_mapping(t_address,t_mapping(t_address,t_struct(borrowerstankdata)4938_storage))": {
              "label": "mapping(address => mapping(address => struct corelibrary.borrowerstankdata))"
            },
            "t_mapping(t_address,t_mapping(t_address,t_struct(lenderstankdata)4915_storage))": {
              "label": "mapping(address => mapping(address => struct corelibrary.lenderstankdata))"
            },
            "t_mapping(t_address,t_struct(borrowerstankdata)4938_storage)": {
              "label": "mapping(address => struct corelibrary.borrowerstankdata)"
            },
            "t_mapping(t_address,t_struct(interestbearingtankdata)4933_storage)": {
              "label": "mapping(address => struct corelibrary.interestbearingtankdata)"
            },
            "t_mapping(t_address,t_struct(lenderstankdata)4915_storage)": {
              "label": "mapping(address => struct corelibrary.lenderstankdata)"
            },
            "t_mapping(t_address,t_struct(noninterestbearingtankdata)4952_storage)": {
              "label": "mapping(address => struct corelibrary.noninterestbearingtankdata)"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(borrowerstankdata)4938_storage": {
              "label": "struct corelibrary.borrowerstankdata",
              "members": [
                {
                  "label": "disableUseAsCollateral",
                  "type": "t_bool"
                },
                {
                  "label": "borrowShares",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(interestbearingtankdata)4933_storage": {
              "label": "struct corelibrary.interestbearingtankdata",
              "members": [
                {
                  "label": "status",
                  "type": "t_enum(tankStatus)4909"
                },
                {
                  "label": "baseusd",
                  "type": "t_contract(IBase_usd)4600"
                },
                {
                  "label": "poolConfig",
                  "type": "t_contract(IPoolConfiguration)4653"
                },
                {
                  "label": "totalBorrows",
                  "type": "t_uint256"
                },
                {
                  "label": "totalBorrowShares",
                  "type": "t_uint256"
                },
                {
                  "label": "tankReserves",
                  "type": "t_uint256"
                },
                {
                  "label": "lastUpdateTimestamp",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(lenderstankdata)4915_storage": {
              "label": "struct corelibrary.lenderstankdata",
              "members": [
                {
                  "label": "borrowShares",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(noninterestbearingtankdata)4952_storage": {
              "label": "struct corelibrary.noninterestbearingtankdata",
              "members": [
                {
                  "label": "status",
                  "type": "t_enum(tankStatus)4909"
                },
                {
                  "label": "baseColl",
                  "type": "t_contract(basecoll)4741"
                },
                {
                  "label": "poolConfig",
                  "type": "t_contract(IPoolConfiguration)4653"
                },
                {
                  "label": "lastUpdateTimestamp",
                  "type": "t_uint256"
                },
                {
                  "label": "usdpair",
                  "type": "t_string_storage"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "BaseLend": {
        "src": "contracts/BaseLend.sol:16",
        "version": {
          "withMetadata": "5ad7e7bddee0215c96eaf232e559503294120cf5960e94ec9fe303cdd0cce237",
          "withoutMetadata": "a6c39801f1cf3b41f549d527a3a35f92091b4064c39fb5a7b3a3f2b3c6bb2361",
          "linkedWithoutMetadata": "a6c39801f1cf3b41f549d527a3a35f92091b4064c39fb5a7b3a3f2b3c6bb2361"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeERC20",
          "SafeMath",
          "WadMath",
          "Math",
          "corelibrary"
        ],
        "methods": [
          "getTotalAvailableLiquidity(address)",
          "getTotalLiquidity(address)",
          "initIBT(address,address)",
          "initNIBT(address,address,string)",
          "getIBTdata()",
          "getNIBTdata(address)",
          "setPriceOracle(address)",
          "setTokens(address,address,address)",
          "setIBTStatus(address,uint8)",
          "setNIBTStatus(address,uint8)",
          "depositColl(address,uint256)",
          "withdrawColl(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "reservePercent",
            "src": "contracts/BaseLend.sol:107"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "baseusd",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IBase_usd)4600",
              "contract": "BaseLend",
              "src": "contracts/BaseLend.sol:90"
            },
            {
              "label": "basecore",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(BaseCore)3590",
              "contract": "BaseLend",
              "src": "contracts/BaseLend.sol:91"
            },
            {
              "label": "backingbalances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "BaseLend",
              "src": "contracts/BaseLend.sol:93"
            },
            {
              "label": "interestbearingtank",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_struct(interestbearingtankdata)4933_storage)",
              "contract": "BaseLend",
              "src": "contracts/BaseLend.sol:94"
            },
            {
              "label": "noninterestbearingtank",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(noninterestbearingtankdata)4952_storage)",
              "contract": "BaseLend",
              "src": "contracts/BaseLend.sol:95"
            },
            {
              "label": "borrowerstank",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_address,t_struct(borrowerstankdata)4938_storage))",
              "contract": "BaseLend",
              "src": "contracts/BaseLend.sol:97"
            },
            {
              "label": "lenderstank",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_mapping(t_address,t_struct(lenderstankdata)4915_storage))",
              "contract": "BaseLend",
              "src": "contracts/BaseLend.sol:98"
            },
            {
              "label": "interestbearingtanklist",
              "offset": 0,
              "slot": "8",
              "type": "t_array(t_contract(ERC20)692)dyn_storage",
              "contract": "BaseLend",
              "src": "contracts/BaseLend.sol:99"
            },
            {
              "label": "noninterestbearingtanklist",
              "offset": 0,
              "slot": "9",
              "type": "t_array(t_contract(ERC20)692)dyn_storage",
              "contract": "BaseLend",
              "src": "contracts/BaseLend.sol:100"
            },
            {
              "label": "basecollDeployer",
              "offset": 0,
              "slot": "10",
              "type": "t_contract(BasecollDeployer)4778",
              "contract": "BaseLend",
              "src": "contracts/BaseLend.sol:102"
            },
            {
              "label": "priceoracle",
              "offset": 0,
              "slot": "11",
              "type": "t_contract(IDAIoraclePriceGetter)4612",
              "contract": "BaseLend",
              "src": "contracts/BaseLend.sol:104"
            },
            {
              "label": "reservePercent",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "BaseLend",
              "src": "contracts/BaseLend.sol:107"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_contract(ERC20)692)dyn_storage": {
              "label": "contract ERC20[]"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_contract(BaseCore)3590": {
              "label": "contract BaseCore"
            },
            "t_contract(BasecollDeployer)4778": {
              "label": "contract BasecollDeployer"
            },
            "t_contract(ERC20)692": {
              "label": "contract ERC20"
            },
            "t_contract(IBase_usd)4600": {
              "label": "contract IBase_usd"
            },
            "t_contract(IDAIoraclePriceGetter)4612": {
              "label": "contract IDAIoraclePriceGetter"
            },
            "t_contract(IPoolConfiguration)4653": {
              "label": "contract IPoolConfiguration"
            },
            "t_contract(basecoll)4741": {
              "label": "contract basecoll"
            },
            "t_enum(tankStatus)4909": {
              "label": "enum corelibrary.tankStatus",
              "members": [
                "INACTIVE",
                "ACTIVE",
                "CLOSED"
              ]
            },
            "t_mapping(t_address,t_mapping(t_address,t_struct(borrowerstankdata)4938_storage))": {
              "label": "mapping(address => mapping(address => struct corelibrary.borrowerstankdata))"
            },
            "t_mapping(t_address,t_mapping(t_address,t_struct(lenderstankdata)4915_storage))": {
              "label": "mapping(address => mapping(address => struct corelibrary.lenderstankdata))"
            },
            "t_mapping(t_address,t_struct(borrowerstankdata)4938_storage)": {
              "label": "mapping(address => struct corelibrary.borrowerstankdata)"
            },
            "t_mapping(t_address,t_struct(interestbearingtankdata)4933_storage)": {
              "label": "mapping(address => struct corelibrary.interestbearingtankdata)"
            },
            "t_mapping(t_address,t_struct(lenderstankdata)4915_storage)": {
              "label": "mapping(address => struct corelibrary.lenderstankdata)"
            },
            "t_mapping(t_address,t_struct(noninterestbearingtankdata)4952_storage)": {
              "label": "mapping(address => struct corelibrary.noninterestbearingtankdata)"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(borrowerstankdata)4938_storage": {
              "label": "struct corelibrary.borrowerstankdata",
              "members": [
                {
                  "label": "disableUseAsCollateral",
                  "type": "t_bool"
                },
                {
                  "label": "borrowShares",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(interestbearingtankdata)4933_storage": {
              "label": "struct corelibrary.interestbearingtankdata",
              "members": [
                {
                  "label": "status",
                  "type": "t_enum(tankStatus)4909"
                },
                {
                  "label": "baseusd",
                  "type": "t_contract(IBase_usd)4600"
                },
                {
                  "label": "poolConfig",
                  "type": "t_contract(IPoolConfiguration)4653"
                },
                {
                  "label": "totalBorrows",
                  "type": "t_uint256"
                },
                {
                  "label": "totalBorrowShares",
                  "type": "t_uint256"
                },
                {
                  "label": "tankReserves",
                  "type": "t_uint256"
                },
                {
                  "label": "lastUpdateTimestamp",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(lenderstankdata)4915_storage": {
              "label": "struct corelibrary.lenderstankdata",
              "members": [
                {
                  "label": "borrowShares",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(noninterestbearingtankdata)4952_storage": {
              "label": "struct corelibrary.noninterestbearingtankdata",
              "members": [
                {
                  "label": "status",
                  "type": "t_enum(tankStatus)4909"
                },
                {
                  "label": "baseColl",
                  "type": "t_contract(basecoll)4741"
                },
                {
                  "label": "poolConfig",
                  "type": "t_contract(IPoolConfiguration)4653"
                },
                {
                  "label": "lastUpdateTimestamp",
                  "type": "t_uint256"
                },
                {
                  "label": "usdpair",
                  "type": "t_string_storage"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IBaseCore": {
        "src": "contracts/Interface/IBaseCore.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(uint256,address)",
          "redeem(uint256,address)",
          "harvest()",
          "earned()",
          "dusdToUsd(uint256,bool)",
          "peaks(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IBase_stables": {
        "src": "contracts/Interface/IBase_stables.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)",
          "burn(address,uint256)",
          "totalSupply()",
          "burnForSelf(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IBase_usd": {
        "src": "contracts/Interface/IBase_usd.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)",
          "burn(address,uint256)",
          "totalSupply()",
          "burnForSelf(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IDAIoraclePriceGetter": {
        "src": "contracts/Interface/IDAIoraclePriceGetter.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getPrice(string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPoolConfiguration": {
        "src": "contracts/Interface/IPoolConfiguration.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getOptimalUtilizationRate()",
          "getBaseBorrowRate()",
          "getLiquidationBonusPercent()",
          "getCollateralPercent()",
          "calculateInterestRate(uint256,uint256)",
          "getUtilizationRate(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "basecoll": {
        "src": "contracts/basecoll.sol:8",
        "version": {
          "withMetadata": "61ee8a53217de8f57bc5c4e0ba48a4d72f01977366db507c6fa828dc6d48a013",
          "withoutMetadata": "fd8a7b64813b41475f4f2ca2e4cc396d01b9a5887e53356bec97171d8ea4acec",
          "linkedWithoutMetadata": "fd8a7b64813b41475f4f2ca2e4cc396d01b9a5887e53356bec97171d8ea4acec"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "methods": [
          "(string,string,address,address)",
          "mint(address,uint256)",
          "burn(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "basecoll",
            "src": "contracts/basecoll.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "basecore",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(BaseCore)3590",
              "contract": "basecoll",
              "src": "contracts/basecoll.sol:11"
            },
            {
              "label": "underlyingAsset",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(ERC20)692",
              "contract": "basecoll",
              "src": "contracts/basecoll.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_contract(BaseCore)3590": {
              "label": "contract BaseCore"
            },
            "t_contract(ERC20)692": {
              "label": "contract ERC20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "BasecollDeployer": {
        "src": "contracts/basecollDeployer.sol:8",
        "version": {
          "withMetadata": "eff6997818e0969da0248eb3b37ceb4cd630463c8a70923379e11eb6d70e9f3a",
          "withoutMetadata": "74f3152e884b11f110c0a7dfe1b4c9b7902917ec58031d858039b997af1f3b37",
          "linkedWithoutMetadata": "74f3152e884b11f110c0a7dfe1b4c9b7902917ec58031d858039b997af1f3b37"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "createNewbasecoll(string,string,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Math": {
        "src": "contracts/libraries/Math.sol:10",
        "version": {
          "withMetadata": "8eb24f05334341281cfdc4ce9624eb0214fec990a3e7edf35702f88dcb93527f",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "WadMath": {
        "src": "contracts/libraries/WadMath.sol:11",
        "version": {
          "withMetadata": "4469de403b749c3b4e3c35240492ef4d28235438c36c6733c57fd87b0535274f",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "SafeMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "corelibrary": {
        "src": "contracts/libraries/corelibrary.sol:14",
        "version": {
          "withMetadata": "6262cfb5857a3f6bcea676599d09fa626e768f258a71006f989ac93781644426",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "SafeERC20",
          "SafeMath",
          "WadMath",
          "Math"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "08295699790c674c5574539ced5280dbb163cab91795b07eb9175feafd7c5c02",
          "withoutMetadata": "7e7a4d2dea64835b308c8a359c3029d74988a4318ba8ef4240ab30513edfd448",
          "linkedWithoutMetadata": "7e7a4d2dea64835b308c8a359c3029d74988a4318ba8ef4240ab30513edfd448"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:18",
        "version": {
          "withMetadata": "3cadbdb25b0d889a6e9d9f749cc008545c861f2916c34f119ffec15ff9894211",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "f453140119aa4ab940c1c866e30faba30c70b1bf42ecb26b808dc4e355066110",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "e96c088265fb723a79b847223722ed9c8034dcd061caf652f25c4bd66d192c8e",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "BaseCore": {
        "src": "contracts/BaseCore.sol:21",
        "version": {
          "withMetadata": "c37da6be9f1730ea9862de687efc9c458a1e51a82d5e6b20aec227812340e6c8",
          "withoutMetadata": "4f5e07ed7609b8bcb36c67148756289626e5c077e21907484f78bb75ca0bb57e",
          "linkedWithoutMetadata": "4f5e07ed7609b8bcb36c67148756289626e5c077e21907484f78bb75ca0bb57e"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeERC20",
          "SafeMath",
          "WadMath",
          "Math",
          "corelibrary"
        ],
        "methods": [
          "(address[5])",
          "transferCollToUser(address,address payable,uint256)",
          "initIBT(address,address)",
          "initNIBT(address,address,string)",
          "getIBTdata()",
          "getNIBTdata(address)",
          "setPriceOracle(address)",
          "setTokens(address,address,address,address)",
          "setIBTStatus(address,uint8)",
          "setNIBTStatus(address,uint8)",
          "mint(uint256)",
          "depositColl(address,uint256)",
          "burn(uint256)",
          "withdrawColl(address,uint256)",
          "getBalance(address)",
          "getTotalAvailableLiquidity(address)",
          "getTotalLiquidity(address)",
          "getUserCompoundedLiquidityBalance(address,address)",
          "getUserTankData(address,address)",
          "getUserCompoundedBorrowBalance(address)",
          "getUserAccount(address)",
          "borrowBaseusd(uint256)",
          "isAccountHealthy(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BaseCore",
            "src": "contracts/BaseCore.sol:134"
          },
          {
            "kind": "state-variable-assignment",
            "name": "reservePercent",
            "src": "contracts/BaseCore.sol:131"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "backingcoins",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_address)5_storage",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:112"
            },
            {
              "label": "baseusd",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(IBase_usd)4600",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:114"
            },
            {
              "label": "basestables",
              "offset": 0,
              "slot": "7",
              "type": "t_contract(IBase_stables)4573",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:115"
            },
            {
              "label": "BaseLendAddress",
              "offset": 0,
              "slot": "8",
              "type": "t_contract(BaseLend)4497",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:116"
            },
            {
              "label": "backingbalances",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:118"
            },
            {
              "label": "interestbearingtank",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(interestbearingtankdata)4933_storage)",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:119"
            },
            {
              "label": "noninterestbearingtank",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_struct(noninterestbearingtankdata)4952_storage)",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:120"
            },
            {
              "label": "borrowerstank",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_mapping(t_address,t_struct(borrowerstankdata)4938_storage))",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:122"
            },
            {
              "label": "lenderstank",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_mapping(t_address,t_struct(lenderstankdata)4915_storage))",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:123"
            },
            {
              "label": "interestbearingtanklist",
              "offset": 0,
              "slot": "14",
              "type": "t_array(t_contract(ERC20)692)dyn_storage",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:124"
            },
            {
              "label": "noninterestbearingtanklist",
              "offset": 0,
              "slot": "15",
              "type": "t_array(t_contract(ERC20)692)dyn_storage",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:125"
            },
            {
              "label": "basecollDeployer",
              "offset": 0,
              "slot": "16",
              "type": "t_contract(BasecollDeployer)4778",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:127"
            },
            {
              "label": "priceoracle",
              "offset": 0,
              "slot": "17",
              "type": "t_contract(IDAIoraclePriceGetter)4612",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:129"
            },
            {
              "label": "reservePercent",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:131"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_address)5_storage": {
              "label": "address[5]"
            },
            "t_array(t_contract(ERC20)692)dyn_storage": {
              "label": "contract ERC20[]"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_contract(BaseLend)4497": {
              "label": "contract BaseLend"
            },
            "t_contract(BasecollDeployer)4778": {
              "label": "contract BasecollDeployer"
            },
            "t_contract(ERC20)692": {
              "label": "contract ERC20"
            },
            "t_contract(IBase_stables)4573": {
              "label": "contract IBase_stables"
            },
            "t_contract(IBase_usd)4600": {
              "label": "contract IBase_usd"
            },
            "t_contract(IDAIoraclePriceGetter)4612": {
              "label": "contract IDAIoraclePriceGetter"
            },
            "t_contract(IPoolConfiguration)4653": {
              "label": "contract IPoolConfiguration"
            },
            "t_contract(basecoll)4741": {
              "label": "contract basecoll"
            },
            "t_enum(tankStatus)4909": {
              "label": "enum corelibrary.tankStatus",
              "members": [
                "INACTIVE",
                "ACTIVE",
                "CLOSED"
              ]
            },
            "t_mapping(t_address,t_mapping(t_address,t_struct(borrowerstankdata)4938_storage))": {
              "label": "mapping(address => mapping(address => struct corelibrary.borrowerstankdata))"
            },
            "t_mapping(t_address,t_mapping(t_address,t_struct(lenderstankdata)4915_storage))": {
              "label": "mapping(address => mapping(address => struct corelibrary.lenderstankdata))"
            },
            "t_mapping(t_address,t_struct(borrowerstankdata)4938_storage)": {
              "label": "mapping(address => struct corelibrary.borrowerstankdata)"
            },
            "t_mapping(t_address,t_struct(interestbearingtankdata)4933_storage)": {
              "label": "mapping(address => struct corelibrary.interestbearingtankdata)"
            },
            "t_mapping(t_address,t_struct(lenderstankdata)4915_storage)": {
              "label": "mapping(address => struct corelibrary.lenderstankdata)"
            },
            "t_mapping(t_address,t_struct(noninterestbearingtankdata)4952_storage)": {
              "label": "mapping(address => struct corelibrary.noninterestbearingtankdata)"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(borrowerstankdata)4938_storage": {
              "label": "struct corelibrary.borrowerstankdata",
              "members": [
                {
                  "label": "disableUseAsCollateral",
                  "type": "t_bool"
                },
                {
                  "label": "borrowShares",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(interestbearingtankdata)4933_storage": {
              "label": "struct corelibrary.interestbearingtankdata",
              "members": [
                {
                  "label": "status",
                  "type": "t_enum(tankStatus)4909"
                },
                {
                  "label": "baseusd",
                  "type": "t_contract(IBase_usd)4600"
                },
                {
                  "label": "poolConfig",
                  "type": "t_contract(IPoolConfiguration)4653"
                },
                {
                  "label": "totalBorrows",
                  "type": "t_uint256"
                },
                {
                  "label": "totalBorrowShares",
                  "type": "t_uint256"
                },
                {
                  "label": "tankReserves",
                  "type": "t_uint256"
                },
                {
                  "label": "lastUpdateTimestamp",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(lenderstankdata)4915_storage": {
              "label": "struct corelibrary.lenderstankdata",
              "members": [
                {
                  "label": "borrowShares",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(noninterestbearingtankdata)4952_storage": {
              "label": "struct corelibrary.noninterestbearingtankdata",
              "members": [
                {
                  "label": "status",
                  "type": "t_enum(tankStatus)4909"
                },
                {
                  "label": "baseColl",
                  "type": "t_contract(basecoll)4741"
                },
                {
                  "label": "poolConfig",
                  "type": "t_contract(IPoolConfiguration)4653"
                },
                {
                  "label": "lastUpdateTimestamp",
                  "type": "t_uint256"
                },
                {
                  "label": "usdpair",
                  "type": "t_string_storage"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "BaseLend": {
        "src": "contracts/BaseLend.sol:16",
        "version": {
          "withMetadata": "aca06032e10339f54baf7c9092973a6cbca2629f869181c3c2649f2d64c36d81",
          "withoutMetadata": "a6c39801f1cf3b41f549d527a3a35f92091b4064c39fb5a7b3a3f2b3c6bb2361",
          "linkedWithoutMetadata": "a6c39801f1cf3b41f549d527a3a35f92091b4064c39fb5a7b3a3f2b3c6bb2361"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeERC20",
          "SafeMath",
          "WadMath",
          "Math",
          "corelibrary"
        ],
        "methods": [
          "getTotalAvailableLiquidity(address)",
          "getTotalLiquidity(address)",
          "initIBT(address,address)",
          "initNIBT(address,address,string)",
          "getIBTdata()",
          "getNIBTdata(address)",
          "setPriceOracle(address)",
          "setTokens(address,address,address)",
          "setIBTStatus(address,uint8)",
          "setNIBTStatus(address,uint8)",
          "depositColl(address,uint256)",
          "withdrawColl(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "reservePercent",
            "src": "contracts/BaseLend.sol:107"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "baseusd",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IBase_usd)4600",
              "contract": "BaseLend",
              "src": "contracts/BaseLend.sol:90"
            },
            {
              "label": "basecore",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(BaseCore)3590",
              "contract": "BaseLend",
              "src": "contracts/BaseLend.sol:91"
            },
            {
              "label": "backingbalances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "BaseLend",
              "src": "contracts/BaseLend.sol:93"
            },
            {
              "label": "interestbearingtank",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_struct(interestbearingtankdata)4933_storage)",
              "contract": "BaseLend",
              "src": "contracts/BaseLend.sol:94"
            },
            {
              "label": "noninterestbearingtank",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(noninterestbearingtankdata)4952_storage)",
              "contract": "BaseLend",
              "src": "contracts/BaseLend.sol:95"
            },
            {
              "label": "borrowerstank",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_address,t_struct(borrowerstankdata)4938_storage))",
              "contract": "BaseLend",
              "src": "contracts/BaseLend.sol:97"
            },
            {
              "label": "lenderstank",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_mapping(t_address,t_struct(lenderstankdata)4915_storage))",
              "contract": "BaseLend",
              "src": "contracts/BaseLend.sol:98"
            },
            {
              "label": "interestbearingtanklist",
              "offset": 0,
              "slot": "8",
              "type": "t_array(t_contract(ERC20)692)dyn_storage",
              "contract": "BaseLend",
              "src": "contracts/BaseLend.sol:99"
            },
            {
              "label": "noninterestbearingtanklist",
              "offset": 0,
              "slot": "9",
              "type": "t_array(t_contract(ERC20)692)dyn_storage",
              "contract": "BaseLend",
              "src": "contracts/BaseLend.sol:100"
            },
            {
              "label": "basecollDeployer",
              "offset": 0,
              "slot": "10",
              "type": "t_contract(BasecollDeployer)4778",
              "contract": "BaseLend",
              "src": "contracts/BaseLend.sol:102"
            },
            {
              "label": "priceoracle",
              "offset": 0,
              "slot": "11",
              "type": "t_contract(IDAIoraclePriceGetter)4612",
              "contract": "BaseLend",
              "src": "contracts/BaseLend.sol:104"
            },
            {
              "label": "reservePercent",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "BaseLend",
              "src": "contracts/BaseLend.sol:107"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_contract(ERC20)692)dyn_storage": {
              "label": "contract ERC20[]"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_contract(BaseCore)3590": {
              "label": "contract BaseCore"
            },
            "t_contract(BasecollDeployer)4778": {
              "label": "contract BasecollDeployer"
            },
            "t_contract(ERC20)692": {
              "label": "contract ERC20"
            },
            "t_contract(IBase_usd)4600": {
              "label": "contract IBase_usd"
            },
            "t_contract(IDAIoraclePriceGetter)4612": {
              "label": "contract IDAIoraclePriceGetter"
            },
            "t_contract(IPoolConfiguration)4653": {
              "label": "contract IPoolConfiguration"
            },
            "t_contract(basecoll)4741": {
              "label": "contract basecoll"
            },
            "t_enum(tankStatus)4909": {
              "label": "enum corelibrary.tankStatus",
              "members": [
                "INACTIVE",
                "ACTIVE",
                "CLOSED"
              ]
            },
            "t_mapping(t_address,t_mapping(t_address,t_struct(borrowerstankdata)4938_storage))": {
              "label": "mapping(address => mapping(address => struct corelibrary.borrowerstankdata))"
            },
            "t_mapping(t_address,t_mapping(t_address,t_struct(lenderstankdata)4915_storage))": {
              "label": "mapping(address => mapping(address => struct corelibrary.lenderstankdata))"
            },
            "t_mapping(t_address,t_struct(borrowerstankdata)4938_storage)": {
              "label": "mapping(address => struct corelibrary.borrowerstankdata)"
            },
            "t_mapping(t_address,t_struct(interestbearingtankdata)4933_storage)": {
              "label": "mapping(address => struct corelibrary.interestbearingtankdata)"
            },
            "t_mapping(t_address,t_struct(lenderstankdata)4915_storage)": {
              "label": "mapping(address => struct corelibrary.lenderstankdata)"
            },
            "t_mapping(t_address,t_struct(noninterestbearingtankdata)4952_storage)": {
              "label": "mapping(address => struct corelibrary.noninterestbearingtankdata)"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(borrowerstankdata)4938_storage": {
              "label": "struct corelibrary.borrowerstankdata",
              "members": [
                {
                  "label": "disableUseAsCollateral",
                  "type": "t_bool"
                },
                {
                  "label": "borrowShares",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(interestbearingtankdata)4933_storage": {
              "label": "struct corelibrary.interestbearingtankdata",
              "members": [
                {
                  "label": "status",
                  "type": "t_enum(tankStatus)4909"
                },
                {
                  "label": "baseusd",
                  "type": "t_contract(IBase_usd)4600"
                },
                {
                  "label": "poolConfig",
                  "type": "t_contract(IPoolConfiguration)4653"
                },
                {
                  "label": "totalBorrows",
                  "type": "t_uint256"
                },
                {
                  "label": "totalBorrowShares",
                  "type": "t_uint256"
                },
                {
                  "label": "tankReserves",
                  "type": "t_uint256"
                },
                {
                  "label": "lastUpdateTimestamp",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(lenderstankdata)4915_storage": {
              "label": "struct corelibrary.lenderstankdata",
              "members": [
                {
                  "label": "borrowShares",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(noninterestbearingtankdata)4952_storage": {
              "label": "struct corelibrary.noninterestbearingtankdata",
              "members": [
                {
                  "label": "status",
                  "type": "t_enum(tankStatus)4909"
                },
                {
                  "label": "baseColl",
                  "type": "t_contract(basecoll)4741"
                },
                {
                  "label": "poolConfig",
                  "type": "t_contract(IPoolConfiguration)4653"
                },
                {
                  "label": "lastUpdateTimestamp",
                  "type": "t_uint256"
                },
                {
                  "label": "usdpair",
                  "type": "t_string_storage"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IBaseCore": {
        "src": "contracts/Interface/IBaseCore.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(uint256,address)",
          "redeem(uint256,address)",
          "harvest()",
          "earned()",
          "dusdToUsd(uint256,bool)",
          "peaks(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IBase_stables": {
        "src": "contracts/Interface/IBase_stables.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)",
          "burn(address,uint256)",
          "totalSupply()",
          "burnForSelf(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IBase_usd": {
        "src": "contracts/Interface/IBase_usd.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)",
          "burn(address,uint256)",
          "totalSupply()",
          "burnForSelf(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IDAIoraclePriceGetter": {
        "src": "contracts/Interface/IDAIoraclePriceGetter.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getPrice(string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPoolConfiguration": {
        "src": "contracts/Interface/IPoolConfiguration.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getOptimalUtilizationRate()",
          "getBaseBorrowRate()",
          "getLiquidationBonusPercent()",
          "getCollateralPercent()",
          "calculateInterestRate(uint256,uint256)",
          "getUtilizationRate(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "basecoll": {
        "src": "contracts/basecoll.sol:8",
        "version": {
          "withMetadata": "19cc14de1b9dd330961f4935f2c831ad7d97da6eecf42cf51955029bd964510f",
          "withoutMetadata": "fd8a7b64813b41475f4f2ca2e4cc396d01b9a5887e53356bec97171d8ea4acec",
          "linkedWithoutMetadata": "fd8a7b64813b41475f4f2ca2e4cc396d01b9a5887e53356bec97171d8ea4acec"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "methods": [
          "(string,string,address,address)",
          "mint(address,uint256)",
          "burn(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "basecoll",
            "src": "contracts/basecoll.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "basecore",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(BaseCore)3590",
              "contract": "basecoll",
              "src": "contracts/basecoll.sol:11"
            },
            {
              "label": "underlyingAsset",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(ERC20)692",
              "contract": "basecoll",
              "src": "contracts/basecoll.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_contract(BaseCore)3590": {
              "label": "contract BaseCore"
            },
            "t_contract(ERC20)692": {
              "label": "contract ERC20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "BasecollDeployer": {
        "src": "contracts/basecollDeployer.sol:8",
        "version": {
          "withMetadata": "4729ef119942f7df7881341ca40e9f5ab1e756204558b1581bb3955e5ac62b8a",
          "withoutMetadata": "587a50546a39230111783291dc0fd69ac504b0b7c9273435079b9787683f880c",
          "linkedWithoutMetadata": "587a50546a39230111783291dc0fd69ac504b0b7c9273435079b9787683f880c"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "createNewbasecoll(string,string,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Math": {
        "src": "contracts/libraries/Math.sol:10",
        "version": {
          "withMetadata": "8eb24f05334341281cfdc4ce9624eb0214fec990a3e7edf35702f88dcb93527f",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "WadMath": {
        "src": "contracts/libraries/WadMath.sol:11",
        "version": {
          "withMetadata": "4469de403b749c3b4e3c35240492ef4d28235438c36c6733c57fd87b0535274f",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "SafeMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "corelibrary": {
        "src": "contracts/libraries/corelibrary.sol:14",
        "version": {
          "withMetadata": "e9d2e53a0527a12b115e948cd12de1cc9ed40267fd22117e832ed376dbc9490f",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "SafeERC20",
          "SafeMath",
          "WadMath",
          "Math"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "08295699790c674c5574539ced5280dbb163cab91795b07eb9175feafd7c5c02",
          "withoutMetadata": "7e7a4d2dea64835b308c8a359c3029d74988a4318ba8ef4240ab30513edfd448",
          "linkedWithoutMetadata": "7e7a4d2dea64835b308c8a359c3029d74988a4318ba8ef4240ab30513edfd448"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:18",
        "version": {
          "withMetadata": "3cadbdb25b0d889a6e9d9f749cc008545c861f2916c34f119ffec15ff9894211",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "f453140119aa4ab940c1c866e30faba30c70b1bf42ecb26b808dc4e355066110",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "e96c088265fb723a79b847223722ed9c8034dcd061caf652f25c4bd66d192c8e",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "BaseCore": {
        "src": "contracts/BaseCore.sol:20",
        "version": {
          "withMetadata": "3f7460a1f0cd66114fc5c61a7d4518702676ccc00edcb5ca35dfc970c17ca361",
          "withoutMetadata": "aae5642783e877e4f3469f913bf89fac4894839c51262cf5659c79136c9c1f2c",
          "linkedWithoutMetadata": "aae5642783e877e4f3469f913bf89fac4894839c51262cf5659c79136c9c1f2c"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeERC20",
          "SafeMath",
          "WadMath",
          "Math",
          "corelibrary"
        ],
        "methods": [
          "(address[5])",
          "initIBT(address,address)",
          "initNIBT(address,address,string)",
          "getIBTdata()",
          "getNIBTdata(address)",
          "setPriceOracle(address)",
          "setTokens(address,address,address)",
          "setIBTStatus(address,uint8)",
          "setNIBTStatus(address,uint8)",
          "mint(uint256)",
          "depositColl(address,uint256)",
          "burn(uint256)",
          "withdrawColl(address,uint256)",
          "getBalance(address)",
          "getTotalAvailableLiquidity(address)",
          "getTotalLiquidity(address)",
          "getUserCompoundedLiquidityBalance(address,address)",
          "getUserTankData(address,address)",
          "getUserCompoundedBorrowBalance(address)",
          "getUserAccount(address)",
          "borrowBaseusd(uint256)",
          "isAccountHealthy(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BaseCore",
            "src": "contracts/BaseCore.sol:132"
          },
          {
            "kind": "state-variable-assignment",
            "name": "reservePercent",
            "src": "contracts/BaseCore.sol:129"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "backingcoins",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_address)5_storage",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:111"
            },
            {
              "label": "baseusd",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(IBase_usd)4465",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:113"
            },
            {
              "label": "basestables",
              "offset": 0,
              "slot": "7",
              "type": "t_contract(IBase_stables)4438",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:114"
            },
            {
              "label": "backingbalances",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:116"
            },
            {
              "label": "interestbearingtank",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_struct(interestbearingtankdata)4798_storage)",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:117"
            },
            {
              "label": "noninterestbearingtank",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(noninterestbearingtankdata)4817_storage)",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:118"
            },
            {
              "label": "borrowerstank",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_struct(borrowerstankdata)4803_storage))",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:120"
            },
            {
              "label": "lenderstank",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_mapping(t_address,t_struct(lenderstankdata)4780_storage))",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:121"
            },
            {
              "label": "interestbearingtanklist",
              "offset": 0,
              "slot": "13",
              "type": "t_array(t_contract(ERC20)692)dyn_storage",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:122"
            },
            {
              "label": "noninterestbearingtanklist",
              "offset": 0,
              "slot": "14",
              "type": "t_array(t_contract(ERC20)692)dyn_storage",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:123"
            },
            {
              "label": "basecollDeployer",
              "offset": 0,
              "slot": "15",
              "type": "t_contract(BasecollDeployer)4643",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:125"
            },
            {
              "label": "priceoracle",
              "offset": 0,
              "slot": "16",
              "type": "t_contract(IDAIoraclePriceGetter)4477",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:127"
            },
            {
              "label": "reservePercent",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:129"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_address)5_storage": {
              "label": "address[5]"
            },
            "t_array(t_contract(ERC20)692)dyn_storage": {
              "label": "contract ERC20[]"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_contract(BasecollDeployer)4643": {
              "label": "contract BasecollDeployer"
            },
            "t_contract(ERC20)692": {
              "label": "contract ERC20"
            },
            "t_contract(IBase_stables)4438": {
              "label": "contract IBase_stables"
            },
            "t_contract(IBase_usd)4465": {
              "label": "contract IBase_usd"
            },
            "t_contract(IDAIoraclePriceGetter)4477": {
              "label": "contract IDAIoraclePriceGetter"
            },
            "t_contract(IPoolConfiguration)4518": {
              "label": "contract IPoolConfiguration"
            },
            "t_contract(basecoll)4606": {
              "label": "contract basecoll"
            },
            "t_enum(tankStatus)4774": {
              "label": "enum corelibrary.tankStatus",
              "members": [
                "INACTIVE",
                "ACTIVE",
                "CLOSED"
              ]
            },
            "t_mapping(t_address,t_mapping(t_address,t_struct(borrowerstankdata)4803_storage))": {
              "label": "mapping(address => mapping(address => struct corelibrary.borrowerstankdata))"
            },
            "t_mapping(t_address,t_mapping(t_address,t_struct(lenderstankdata)4780_storage))": {
              "label": "mapping(address => mapping(address => struct corelibrary.lenderstankdata))"
            },
            "t_mapping(t_address,t_struct(borrowerstankdata)4803_storage)": {
              "label": "mapping(address => struct corelibrary.borrowerstankdata)"
            },
            "t_mapping(t_address,t_struct(interestbearingtankdata)4798_storage)": {
              "label": "mapping(address => struct corelibrary.interestbearingtankdata)"
            },
            "t_mapping(t_address,t_struct(lenderstankdata)4780_storage)": {
              "label": "mapping(address => struct corelibrary.lenderstankdata)"
            },
            "t_mapping(t_address,t_struct(noninterestbearingtankdata)4817_storage)": {
              "label": "mapping(address => struct corelibrary.noninterestbearingtankdata)"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(borrowerstankdata)4803_storage": {
              "label": "struct corelibrary.borrowerstankdata",
              "members": [
                {
                  "label": "disableUseAsCollateral",
                  "type": "t_bool"
                },
                {
                  "label": "borrowShares",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(interestbearingtankdata)4798_storage": {
              "label": "struct corelibrary.interestbearingtankdata",
              "members": [
                {
                  "label": "status",
                  "type": "t_enum(tankStatus)4774"
                },
                {
                  "label": "baseusd",
                  "type": "t_contract(IBase_usd)4465"
                },
                {
                  "label": "poolConfig",
                  "type": "t_contract(IPoolConfiguration)4518"
                },
                {
                  "label": "totalBorrows",
                  "type": "t_uint256"
                },
                {
                  "label": "totalBorrowShares",
                  "type": "t_uint256"
                },
                {
                  "label": "tankReserves",
                  "type": "t_uint256"
                },
                {
                  "label": "lastUpdateTimestamp",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(lenderstankdata)4780_storage": {
              "label": "struct corelibrary.lenderstankdata",
              "members": [
                {
                  "label": "borrowShares",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(noninterestbearingtankdata)4817_storage": {
              "label": "struct corelibrary.noninterestbearingtankdata",
              "members": [
                {
                  "label": "status",
                  "type": "t_enum(tankStatus)4774"
                },
                {
                  "label": "baseColl",
                  "type": "t_contract(basecoll)4606"
                },
                {
                  "label": "poolConfig",
                  "type": "t_contract(IPoolConfiguration)4518"
                },
                {
                  "label": "lastUpdateTimestamp",
                  "type": "t_uint256"
                },
                {
                  "label": "usdpair",
                  "type": "t_string_storage"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "BaseLend": {
        "src": "contracts/BaseLend.sol:16",
        "version": {
          "withMetadata": "3d0d257ad5072c6f0908c1edc3c1a1cd41faa62d86137ea79615aea322c3eee0",
          "withoutMetadata": "e07fa5d73591173f3c8f0f4ca7efe54cfc18b7b7ebeeba7cb1c589e359245799",
          "linkedWithoutMetadata": "e07fa5d73591173f3c8f0f4ca7efe54cfc18b7b7ebeeba7cb1c589e359245799"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeERC20",
          "SafeMath",
          "WadMath",
          "Math",
          "corelibrary"
        ],
        "methods": [
          "getTotalAvailableLiquidity(address)",
          "getTotalLiquidity(address)",
          "initIBT(address,address)",
          "initNIBT(address,address,string)",
          "getIBTdata()",
          "getNIBTdata(address)",
          "setPriceOracle(address)",
          "setTokens(address,address,address)",
          "setIBTStatus(address,uint8)",
          "setNIBTStatus(address,uint8)",
          "depositColl(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "reservePercent",
            "src": "contracts/BaseLend.sol:107"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "baseusd",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IBase_usd)4465",
              "contract": "BaseLend",
              "src": "contracts/BaseLend.sol:90"
            },
            {
              "label": "basecore",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(BaseCore)3544",
              "contract": "BaseLend",
              "src": "contracts/BaseLend.sol:91"
            },
            {
              "label": "backingbalances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "BaseLend",
              "src": "contracts/BaseLend.sol:93"
            },
            {
              "label": "interestbearingtank",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_struct(interestbearingtankdata)4798_storage)",
              "contract": "BaseLend",
              "src": "contracts/BaseLend.sol:94"
            },
            {
              "label": "noninterestbearingtank",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(noninterestbearingtankdata)4817_storage)",
              "contract": "BaseLend",
              "src": "contracts/BaseLend.sol:95"
            },
            {
              "label": "borrowerstank",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_address,t_struct(borrowerstankdata)4803_storage))",
              "contract": "BaseLend",
              "src": "contracts/BaseLend.sol:97"
            },
            {
              "label": "lenderstank",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_mapping(t_address,t_struct(lenderstankdata)4780_storage))",
              "contract": "BaseLend",
              "src": "contracts/BaseLend.sol:98"
            },
            {
              "label": "interestbearingtanklist",
              "offset": 0,
              "slot": "8",
              "type": "t_array(t_contract(ERC20)692)dyn_storage",
              "contract": "BaseLend",
              "src": "contracts/BaseLend.sol:99"
            },
            {
              "label": "noninterestbearingtanklist",
              "offset": 0,
              "slot": "9",
              "type": "t_array(t_contract(ERC20)692)dyn_storage",
              "contract": "BaseLend",
              "src": "contracts/BaseLend.sol:100"
            },
            {
              "label": "basecollDeployer",
              "offset": 0,
              "slot": "10",
              "type": "t_contract(BasecollDeployer)4643",
              "contract": "BaseLend",
              "src": "contracts/BaseLend.sol:102"
            },
            {
              "label": "priceoracle",
              "offset": 0,
              "slot": "11",
              "type": "t_contract(IDAIoraclePriceGetter)4477",
              "contract": "BaseLend",
              "src": "contracts/BaseLend.sol:104"
            },
            {
              "label": "reservePercent",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "BaseLend",
              "src": "contracts/BaseLend.sol:107"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_contract(ERC20)692)dyn_storage": {
              "label": "contract ERC20[]"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_contract(BaseCore)3544": {
              "label": "contract BaseCore"
            },
            "t_contract(BasecollDeployer)4643": {
              "label": "contract BasecollDeployer"
            },
            "t_contract(ERC20)692": {
              "label": "contract ERC20"
            },
            "t_contract(IBase_usd)4465": {
              "label": "contract IBase_usd"
            },
            "t_contract(IDAIoraclePriceGetter)4477": {
              "label": "contract IDAIoraclePriceGetter"
            },
            "t_contract(IPoolConfiguration)4518": {
              "label": "contract IPoolConfiguration"
            },
            "t_contract(basecoll)4606": {
              "label": "contract basecoll"
            },
            "t_enum(tankStatus)4774": {
              "label": "enum corelibrary.tankStatus",
              "members": [
                "INACTIVE",
                "ACTIVE",
                "CLOSED"
              ]
            },
            "t_mapping(t_address,t_mapping(t_address,t_struct(borrowerstankdata)4803_storage))": {
              "label": "mapping(address => mapping(address => struct corelibrary.borrowerstankdata))"
            },
            "t_mapping(t_address,t_mapping(t_address,t_struct(lenderstankdata)4780_storage))": {
              "label": "mapping(address => mapping(address => struct corelibrary.lenderstankdata))"
            },
            "t_mapping(t_address,t_struct(borrowerstankdata)4803_storage)": {
              "label": "mapping(address => struct corelibrary.borrowerstankdata)"
            },
            "t_mapping(t_address,t_struct(interestbearingtankdata)4798_storage)": {
              "label": "mapping(address => struct corelibrary.interestbearingtankdata)"
            },
            "t_mapping(t_address,t_struct(lenderstankdata)4780_storage)": {
              "label": "mapping(address => struct corelibrary.lenderstankdata)"
            },
            "t_mapping(t_address,t_struct(noninterestbearingtankdata)4817_storage)": {
              "label": "mapping(address => struct corelibrary.noninterestbearingtankdata)"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(borrowerstankdata)4803_storage": {
              "label": "struct corelibrary.borrowerstankdata",
              "members": [
                {
                  "label": "disableUseAsCollateral",
                  "type": "t_bool"
                },
                {
                  "label": "borrowShares",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(interestbearingtankdata)4798_storage": {
              "label": "struct corelibrary.interestbearingtankdata",
              "members": [
                {
                  "label": "status",
                  "type": "t_enum(tankStatus)4774"
                },
                {
                  "label": "baseusd",
                  "type": "t_contract(IBase_usd)4465"
                },
                {
                  "label": "poolConfig",
                  "type": "t_contract(IPoolConfiguration)4518"
                },
                {
                  "label": "totalBorrows",
                  "type": "t_uint256"
                },
                {
                  "label": "totalBorrowShares",
                  "type": "t_uint256"
                },
                {
                  "label": "tankReserves",
                  "type": "t_uint256"
                },
                {
                  "label": "lastUpdateTimestamp",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(lenderstankdata)4780_storage": {
              "label": "struct corelibrary.lenderstankdata",
              "members": [
                {
                  "label": "borrowShares",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(noninterestbearingtankdata)4817_storage": {
              "label": "struct corelibrary.noninterestbearingtankdata",
              "members": [
                {
                  "label": "status",
                  "type": "t_enum(tankStatus)4774"
                },
                {
                  "label": "baseColl",
                  "type": "t_contract(basecoll)4606"
                },
                {
                  "label": "poolConfig",
                  "type": "t_contract(IPoolConfiguration)4518"
                },
                {
                  "label": "lastUpdateTimestamp",
                  "type": "t_uint256"
                },
                {
                  "label": "usdpair",
                  "type": "t_string_storage"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IBaseCore": {
        "src": "contracts/Interface/IBaseCore.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(uint256,address)",
          "redeem(uint256,address)",
          "harvest()",
          "earned()",
          "dusdToUsd(uint256,bool)",
          "peaks(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IBase_stables": {
        "src": "contracts/Interface/IBase_stables.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)",
          "burn(address,uint256)",
          "totalSupply()",
          "burnForSelf(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IBase_usd": {
        "src": "contracts/Interface/IBase_usd.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)",
          "burn(address,uint256)",
          "totalSupply()",
          "burnForSelf(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IDAIoraclePriceGetter": {
        "src": "contracts/Interface/IDAIoraclePriceGetter.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getPrice(string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPoolConfiguration": {
        "src": "contracts/Interface/IPoolConfiguration.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getOptimalUtilizationRate()",
          "getBaseBorrowRate()",
          "getLiquidationBonusPercent()",
          "getCollateralPercent()",
          "calculateInterestRate(uint256,uint256)",
          "getUtilizationRate(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "basecoll": {
        "src": "contracts/basecoll.sol:8",
        "version": {
          "withMetadata": "d3b0314edf7063e71ffd6c3d85846756719ffffd1896397489fb28790ee073a7",
          "withoutMetadata": "fd8a7b64813b41475f4f2ca2e4cc396d01b9a5887e53356bec97171d8ea4acec",
          "linkedWithoutMetadata": "fd8a7b64813b41475f4f2ca2e4cc396d01b9a5887e53356bec97171d8ea4acec"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "methods": [
          "(string,string,address,address)",
          "mint(address,uint256)",
          "burn(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "basecoll",
            "src": "contracts/basecoll.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "basecore",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(BaseCore)3544",
              "contract": "basecoll",
              "src": "contracts/basecoll.sol:11"
            },
            {
              "label": "underlyingAsset",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(ERC20)692",
              "contract": "basecoll",
              "src": "contracts/basecoll.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_contract(BaseCore)3544": {
              "label": "contract BaseCore"
            },
            "t_contract(ERC20)692": {
              "label": "contract ERC20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "BasecollDeployer": {
        "src": "contracts/basecollDeployer.sol:8",
        "version": {
          "withMetadata": "aa22d305820c7fc51bddc4f2204993497d35c8dbd684bd27ab70365f6fdea2c5",
          "withoutMetadata": "35cd121d23cfdf739b4389959c54c2732d33e5d3483e44fe5086f641c5c3f68b",
          "linkedWithoutMetadata": "35cd121d23cfdf739b4389959c54c2732d33e5d3483e44fe5086f641c5c3f68b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "createNewbasecoll(string,string,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Math": {
        "src": "contracts/libraries/Math.sol:10",
        "version": {
          "withMetadata": "8eb24f05334341281cfdc4ce9624eb0214fec990a3e7edf35702f88dcb93527f",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "WadMath": {
        "src": "contracts/libraries/WadMath.sol:11",
        "version": {
          "withMetadata": "4469de403b749c3b4e3c35240492ef4d28235438c36c6733c57fd87b0535274f",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "SafeMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "corelibrary": {
        "src": "contracts/libraries/corelibrary.sol:14",
        "version": {
          "withMetadata": "ebc455b183a51c3004a15502c95c434caec0a3cc723a55371a0efe76f926a3b4",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "SafeERC20",
          "SafeMath",
          "WadMath",
          "Math"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "08295699790c674c5574539ced5280dbb163cab91795b07eb9175feafd7c5c02",
          "withoutMetadata": "7e7a4d2dea64835b308c8a359c3029d74988a4318ba8ef4240ab30513edfd448",
          "linkedWithoutMetadata": "7e7a4d2dea64835b308c8a359c3029d74988a4318ba8ef4240ab30513edfd448"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:18",
        "version": {
          "withMetadata": "3cadbdb25b0d889a6e9d9f749cc008545c861f2916c34f119ffec15ff9894211",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "f453140119aa4ab940c1c866e30faba30c70b1bf42ecb26b808dc4e355066110",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "e96c088265fb723a79b847223722ed9c8034dcd061caf652f25c4bd66d192c8e",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "BaseCore": {
        "src": "contracts/BaseCore.sol:20",
        "version": {
          "withMetadata": "3f7460a1f0cd66114fc5c61a7d4518702676ccc00edcb5ca35dfc970c17ca361",
          "withoutMetadata": "aae5642783e877e4f3469f913bf89fac4894839c51262cf5659c79136c9c1f2c",
          "linkedWithoutMetadata": "aae5642783e877e4f3469f913bf89fac4894839c51262cf5659c79136c9c1f2c"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeERC20",
          "SafeMath",
          "WadMath",
          "Math",
          "corelibrary"
        ],
        "methods": [
          "(address[5])",
          "initIBT(address,address)",
          "initNIBT(address,address,string)",
          "getIBTdata()",
          "getNIBTdata(address)",
          "setPriceOracle(address)",
          "setTokens(address,address,address)",
          "setIBTStatus(address,uint8)",
          "setNIBTStatus(address,uint8)",
          "mint(uint256)",
          "depositColl(address,uint256)",
          "burn(uint256)",
          "withdrawColl(address,uint256)",
          "getBalance(address)",
          "getTotalAvailableLiquidity(address)",
          "getTotalLiquidity(address)",
          "getUserCompoundedLiquidityBalance(address,address)",
          "getUserTankData(address,address)",
          "getUserCompoundedBorrowBalance(address)",
          "getUserAccount(address)",
          "borrowBaseusd(uint256)",
          "isAccountHealthy(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BaseCore",
            "src": "contracts/BaseCore.sol:132"
          },
          {
            "kind": "state-variable-assignment",
            "name": "reservePercent",
            "src": "contracts/BaseCore.sol:129"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "backingcoins",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_address)5_storage",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:111"
            },
            {
              "label": "baseusd",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(IBase_usd)4396",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:113"
            },
            {
              "label": "basestables",
              "offset": 0,
              "slot": "7",
              "type": "t_contract(IBase_stables)4369",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:114"
            },
            {
              "label": "backingbalances",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:116"
            },
            {
              "label": "interestbearingtank",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_struct(interestbearingtankdata)4729_storage)",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:117"
            },
            {
              "label": "noninterestbearingtank",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(noninterestbearingtankdata)4748_storage)",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:118"
            },
            {
              "label": "borrowerstank",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_struct(borrowerstankdata)4734_storage))",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:120"
            },
            {
              "label": "lenderstank",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_mapping(t_address,t_struct(lenderstankdata)4711_storage))",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:121"
            },
            {
              "label": "interestbearingtanklist",
              "offset": 0,
              "slot": "13",
              "type": "t_array(t_contract(ERC20)692)dyn_storage",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:122"
            },
            {
              "label": "noninterestbearingtanklist",
              "offset": 0,
              "slot": "14",
              "type": "t_array(t_contract(ERC20)692)dyn_storage",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:123"
            },
            {
              "label": "basecollDeployer",
              "offset": 0,
              "slot": "15",
              "type": "t_contract(BasecollDeployer)4574",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:125"
            },
            {
              "label": "priceoracle",
              "offset": 0,
              "slot": "16",
              "type": "t_contract(IDAIoraclePriceGetter)4408",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:127"
            },
            {
              "label": "reservePercent",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:129"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_address)5_storage": {
              "label": "address[5]"
            },
            "t_array(t_contract(ERC20)692)dyn_storage": {
              "label": "contract ERC20[]"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_contract(BasecollDeployer)4574": {
              "label": "contract BasecollDeployer"
            },
            "t_contract(ERC20)692": {
              "label": "contract ERC20"
            },
            "t_contract(IBase_stables)4369": {
              "label": "contract IBase_stables"
            },
            "t_contract(IBase_usd)4396": {
              "label": "contract IBase_usd"
            },
            "t_contract(IDAIoraclePriceGetter)4408": {
              "label": "contract IDAIoraclePriceGetter"
            },
            "t_contract(IPoolConfiguration)4449": {
              "label": "contract IPoolConfiguration"
            },
            "t_contract(basecoll)4537": {
              "label": "contract basecoll"
            },
            "t_enum(tankStatus)4705": {
              "label": "enum corelibrary.tankStatus",
              "members": [
                "INACTIVE",
                "ACTIVE",
                "CLOSED"
              ]
            },
            "t_mapping(t_address,t_mapping(t_address,t_struct(borrowerstankdata)4734_storage))": {
              "label": "mapping(address => mapping(address => struct corelibrary.borrowerstankdata))"
            },
            "t_mapping(t_address,t_mapping(t_address,t_struct(lenderstankdata)4711_storage))": {
              "label": "mapping(address => mapping(address => struct corelibrary.lenderstankdata))"
            },
            "t_mapping(t_address,t_struct(borrowerstankdata)4734_storage)": {
              "label": "mapping(address => struct corelibrary.borrowerstankdata)"
            },
            "t_mapping(t_address,t_struct(interestbearingtankdata)4729_storage)": {
              "label": "mapping(address => struct corelibrary.interestbearingtankdata)"
            },
            "t_mapping(t_address,t_struct(lenderstankdata)4711_storage)": {
              "label": "mapping(address => struct corelibrary.lenderstankdata)"
            },
            "t_mapping(t_address,t_struct(noninterestbearingtankdata)4748_storage)": {
              "label": "mapping(address => struct corelibrary.noninterestbearingtankdata)"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(borrowerstankdata)4734_storage": {
              "label": "struct corelibrary.borrowerstankdata",
              "members": [
                {
                  "label": "disableUseAsCollateral",
                  "type": "t_bool"
                },
                {
                  "label": "borrowShares",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(interestbearingtankdata)4729_storage": {
              "label": "struct corelibrary.interestbearingtankdata",
              "members": [
                {
                  "label": "status",
                  "type": "t_enum(tankStatus)4705"
                },
                {
                  "label": "baseusd",
                  "type": "t_contract(IBase_usd)4396"
                },
                {
                  "label": "poolConfig",
                  "type": "t_contract(IPoolConfiguration)4449"
                },
                {
                  "label": "totalBorrows",
                  "type": "t_uint256"
                },
                {
                  "label": "totalBorrowShares",
                  "type": "t_uint256"
                },
                {
                  "label": "tankReserves",
                  "type": "t_uint256"
                },
                {
                  "label": "lastUpdateTimestamp",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(lenderstankdata)4711_storage": {
              "label": "struct corelibrary.lenderstankdata",
              "members": [
                {
                  "label": "borrowShares",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(noninterestbearingtankdata)4748_storage": {
              "label": "struct corelibrary.noninterestbearingtankdata",
              "members": [
                {
                  "label": "status",
                  "type": "t_enum(tankStatus)4705"
                },
                {
                  "label": "baseColl",
                  "type": "t_contract(basecoll)4537"
                },
                {
                  "label": "poolConfig",
                  "type": "t_contract(IPoolConfiguration)4449"
                },
                {
                  "label": "lastUpdateTimestamp",
                  "type": "t_uint256"
                },
                {
                  "label": "usdpair",
                  "type": "t_string_storage"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "BaseLend": {
        "src": "contracts/BaseLend.sol:16",
        "version": {
          "withMetadata": "7d068f8159951a747830e34db64eaf4fae6245644603f9ee5c7cb7d3cafd1025",
          "withoutMetadata": "8dceb08204c2edf0551c665a1e89ebc1a7cd8ec16487cb081506b6bc37cd1276",
          "linkedWithoutMetadata": "8dceb08204c2edf0551c665a1e89ebc1a7cd8ec16487cb081506b6bc37cd1276"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeERC20",
          "SafeMath",
          "WadMath",
          "Math",
          "corelibrary"
        ],
        "methods": [
          "getTotalAvailableLiquidity(address)",
          "getTotalLiquidity(address)",
          "initIBT(address,address)",
          "initNIBT(address,address,string)",
          "getIBTdata()",
          "getNIBTdata(address)",
          "setPriceOracle(address)",
          "setTokens(address,address,address)",
          "setIBTStatus(address,uint8)",
          "setNIBTStatus(address,uint8)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "reservePercent",
            "src": "contracts/BaseLend.sol:107"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "baseusd",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IBase_usd)4396",
              "contract": "BaseLend",
              "src": "contracts/BaseLend.sol:90"
            },
            {
              "label": "basecore",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(BaseCore)3544",
              "contract": "BaseLend",
              "src": "contracts/BaseLend.sol:91"
            },
            {
              "label": "backingbalances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "BaseLend",
              "src": "contracts/BaseLend.sol:93"
            },
            {
              "label": "interestbearingtank",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_struct(interestbearingtankdata)4729_storage)",
              "contract": "BaseLend",
              "src": "contracts/BaseLend.sol:94"
            },
            {
              "label": "noninterestbearingtank",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(noninterestbearingtankdata)4748_storage)",
              "contract": "BaseLend",
              "src": "contracts/BaseLend.sol:95"
            },
            {
              "label": "borrowerstank",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_address,t_struct(borrowerstankdata)4734_storage))",
              "contract": "BaseLend",
              "src": "contracts/BaseLend.sol:97"
            },
            {
              "label": "lenderstank",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_mapping(t_address,t_struct(lenderstankdata)4711_storage))",
              "contract": "BaseLend",
              "src": "contracts/BaseLend.sol:98"
            },
            {
              "label": "interestbearingtanklist",
              "offset": 0,
              "slot": "8",
              "type": "t_array(t_contract(ERC20)692)dyn_storage",
              "contract": "BaseLend",
              "src": "contracts/BaseLend.sol:99"
            },
            {
              "label": "noninterestbearingtanklist",
              "offset": 0,
              "slot": "9",
              "type": "t_array(t_contract(ERC20)692)dyn_storage",
              "contract": "BaseLend",
              "src": "contracts/BaseLend.sol:100"
            },
            {
              "label": "basecollDeployer",
              "offset": 0,
              "slot": "10",
              "type": "t_contract(BasecollDeployer)4574",
              "contract": "BaseLend",
              "src": "contracts/BaseLend.sol:102"
            },
            {
              "label": "priceoracle",
              "offset": 0,
              "slot": "11",
              "type": "t_contract(IDAIoraclePriceGetter)4408",
              "contract": "BaseLend",
              "src": "contracts/BaseLend.sol:104"
            },
            {
              "label": "reservePercent",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "BaseLend",
              "src": "contracts/BaseLend.sol:107"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_contract(ERC20)692)dyn_storage": {
              "label": "contract ERC20[]"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_contract(BaseCore)3544": {
              "label": "contract BaseCore"
            },
            "t_contract(BasecollDeployer)4574": {
              "label": "contract BasecollDeployer"
            },
            "t_contract(ERC20)692": {
              "label": "contract ERC20"
            },
            "t_contract(IBase_usd)4396": {
              "label": "contract IBase_usd"
            },
            "t_contract(IDAIoraclePriceGetter)4408": {
              "label": "contract IDAIoraclePriceGetter"
            },
            "t_contract(IPoolConfiguration)4449": {
              "label": "contract IPoolConfiguration"
            },
            "t_contract(basecoll)4537": {
              "label": "contract basecoll"
            },
            "t_enum(tankStatus)4705": {
              "label": "enum corelibrary.tankStatus",
              "members": [
                "INACTIVE",
                "ACTIVE",
                "CLOSED"
              ]
            },
            "t_mapping(t_address,t_mapping(t_address,t_struct(borrowerstankdata)4734_storage))": {
              "label": "mapping(address => mapping(address => struct corelibrary.borrowerstankdata))"
            },
            "t_mapping(t_address,t_mapping(t_address,t_struct(lenderstankdata)4711_storage))": {
              "label": "mapping(address => mapping(address => struct corelibrary.lenderstankdata))"
            },
            "t_mapping(t_address,t_struct(borrowerstankdata)4734_storage)": {
              "label": "mapping(address => struct corelibrary.borrowerstankdata)"
            },
            "t_mapping(t_address,t_struct(interestbearingtankdata)4729_storage)": {
              "label": "mapping(address => struct corelibrary.interestbearingtankdata)"
            },
            "t_mapping(t_address,t_struct(lenderstankdata)4711_storage)": {
              "label": "mapping(address => struct corelibrary.lenderstankdata)"
            },
            "t_mapping(t_address,t_struct(noninterestbearingtankdata)4748_storage)": {
              "label": "mapping(address => struct corelibrary.noninterestbearingtankdata)"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(borrowerstankdata)4734_storage": {
              "label": "struct corelibrary.borrowerstankdata",
              "members": [
                {
                  "label": "disableUseAsCollateral",
                  "type": "t_bool"
                },
                {
                  "label": "borrowShares",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(interestbearingtankdata)4729_storage": {
              "label": "struct corelibrary.interestbearingtankdata",
              "members": [
                {
                  "label": "status",
                  "type": "t_enum(tankStatus)4705"
                },
                {
                  "label": "baseusd",
                  "type": "t_contract(IBase_usd)4396"
                },
                {
                  "label": "poolConfig",
                  "type": "t_contract(IPoolConfiguration)4449"
                },
                {
                  "label": "totalBorrows",
                  "type": "t_uint256"
                },
                {
                  "label": "totalBorrowShares",
                  "type": "t_uint256"
                },
                {
                  "label": "tankReserves",
                  "type": "t_uint256"
                },
                {
                  "label": "lastUpdateTimestamp",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(lenderstankdata)4711_storage": {
              "label": "struct corelibrary.lenderstankdata",
              "members": [
                {
                  "label": "borrowShares",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(noninterestbearingtankdata)4748_storage": {
              "label": "struct corelibrary.noninterestbearingtankdata",
              "members": [
                {
                  "label": "status",
                  "type": "t_enum(tankStatus)4705"
                },
                {
                  "label": "baseColl",
                  "type": "t_contract(basecoll)4537"
                },
                {
                  "label": "poolConfig",
                  "type": "t_contract(IPoolConfiguration)4449"
                },
                {
                  "label": "lastUpdateTimestamp",
                  "type": "t_uint256"
                },
                {
                  "label": "usdpair",
                  "type": "t_string_storage"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IBaseCore": {
        "src": "contracts/Interface/IBaseCore.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(uint256,address)",
          "redeem(uint256,address)",
          "harvest()",
          "earned()",
          "dusdToUsd(uint256,bool)",
          "peaks(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IBase_stables": {
        "src": "contracts/Interface/IBase_stables.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)",
          "burn(address,uint256)",
          "totalSupply()",
          "burnForSelf(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IBase_usd": {
        "src": "contracts/Interface/IBase_usd.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)",
          "burn(address,uint256)",
          "totalSupply()",
          "burnForSelf(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IDAIoraclePriceGetter": {
        "src": "contracts/Interface/IDAIoraclePriceGetter.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getPrice(string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPoolConfiguration": {
        "src": "contracts/Interface/IPoolConfiguration.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getOptimalUtilizationRate()",
          "getBaseBorrowRate()",
          "getLiquidationBonusPercent()",
          "getCollateralPercent()",
          "calculateInterestRate(uint256,uint256)",
          "getUtilizationRate(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "basecoll": {
        "src": "contracts/basecoll.sol:8",
        "version": {
          "withMetadata": "d3b0314edf7063e71ffd6c3d85846756719ffffd1896397489fb28790ee073a7",
          "withoutMetadata": "fd8a7b64813b41475f4f2ca2e4cc396d01b9a5887e53356bec97171d8ea4acec",
          "linkedWithoutMetadata": "fd8a7b64813b41475f4f2ca2e4cc396d01b9a5887e53356bec97171d8ea4acec"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "methods": [
          "(string,string,address,address)",
          "mint(address,uint256)",
          "burn(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "basecoll",
            "src": "contracts/basecoll.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "basecore",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(BaseCore)3544",
              "contract": "basecoll",
              "src": "contracts/basecoll.sol:11"
            },
            {
              "label": "underlyingAsset",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(ERC20)692",
              "contract": "basecoll",
              "src": "contracts/basecoll.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_contract(BaseCore)3544": {
              "label": "contract BaseCore"
            },
            "t_contract(ERC20)692": {
              "label": "contract ERC20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "BasecollDeployer": {
        "src": "contracts/basecollDeployer.sol:8",
        "version": {
          "withMetadata": "aa22d305820c7fc51bddc4f2204993497d35c8dbd684bd27ab70365f6fdea2c5",
          "withoutMetadata": "35cd121d23cfdf739b4389959c54c2732d33e5d3483e44fe5086f641c5c3f68b",
          "linkedWithoutMetadata": "35cd121d23cfdf739b4389959c54c2732d33e5d3483e44fe5086f641c5c3f68b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "createNewbasecoll(string,string,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Math": {
        "src": "contracts/libraries/Math.sol:10",
        "version": {
          "withMetadata": "8eb24f05334341281cfdc4ce9624eb0214fec990a3e7edf35702f88dcb93527f",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "WadMath": {
        "src": "contracts/libraries/WadMath.sol:11",
        "version": {
          "withMetadata": "4469de403b749c3b4e3c35240492ef4d28235438c36c6733c57fd87b0535274f",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "SafeMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "corelibrary": {
        "src": "contracts/libraries/corelibrary.sol:14",
        "version": {
          "withMetadata": "ebc455b183a51c3004a15502c95c434caec0a3cc723a55371a0efe76f926a3b4",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "SafeERC20",
          "SafeMath",
          "WadMath",
          "Math"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "08295699790c674c5574539ced5280dbb163cab91795b07eb9175feafd7c5c02",
          "withoutMetadata": "7e7a4d2dea64835b308c8a359c3029d74988a4318ba8ef4240ab30513edfd448",
          "linkedWithoutMetadata": "7e7a4d2dea64835b308c8a359c3029d74988a4318ba8ef4240ab30513edfd448"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:18",
        "version": {
          "withMetadata": "3cadbdb25b0d889a6e9d9f749cc008545c861f2916c34f119ffec15ff9894211",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "f453140119aa4ab940c1c866e30faba30c70b1bf42ecb26b808dc4e355066110",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "e96c088265fb723a79b847223722ed9c8034dcd061caf652f25c4bd66d192c8e",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "BaseCore": {
        "src": "contracts/BaseCore.sol:20",
        "version": {
          "withMetadata": "3f7460a1f0cd66114fc5c61a7d4518702676ccc00edcb5ca35dfc970c17ca361",
          "withoutMetadata": "aae5642783e877e4f3469f913bf89fac4894839c51262cf5659c79136c9c1f2c",
          "linkedWithoutMetadata": "aae5642783e877e4f3469f913bf89fac4894839c51262cf5659c79136c9c1f2c"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeERC20",
          "SafeMath",
          "WadMath",
          "Math",
          "corelibrary"
        ],
        "methods": [
          "(address[5])",
          "initIBT(address,address)",
          "initNIBT(address,address,string)",
          "getIBTdata()",
          "getNIBTdata(address)",
          "setPriceOracle(address)",
          "setTokens(address,address,address)",
          "setIBTStatus(address,uint8)",
          "setNIBTStatus(address,uint8)",
          "mint(uint256)",
          "depositColl(address,uint256)",
          "burn(uint256)",
          "withdrawColl(address,uint256)",
          "getBalance(address)",
          "getTotalAvailableLiquidity(address)",
          "getTotalLiquidity(address)",
          "getUserCompoundedLiquidityBalance(address,address)",
          "getUserTankData(address,address)",
          "getUserCompoundedBorrowBalance(address)",
          "getUserAccount(address)",
          "borrowBaseusd(uint256)",
          "isAccountHealthy(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BaseCore",
            "src": "contracts/BaseCore.sol:132"
          },
          {
            "kind": "state-variable-assignment",
            "name": "reservePercent",
            "src": "contracts/BaseCore.sol:129"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "backingcoins",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_address)5_storage",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:111"
            },
            {
              "label": "baseusd",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(IBase_usd)4280",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:113"
            },
            {
              "label": "basestables",
              "offset": 0,
              "slot": "7",
              "type": "t_contract(IBase_stables)4253",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:114"
            },
            {
              "label": "backingbalances",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:116"
            },
            {
              "label": "interestbearingtank",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_struct(interestbearingtankdata)4613_storage)",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:117"
            },
            {
              "label": "noninterestbearingtank",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(noninterestbearingtankdata)4632_storage)",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:118"
            },
            {
              "label": "borrowerstank",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_struct(borrowerstankdata)4618_storage))",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:120"
            },
            {
              "label": "lenderstank",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_mapping(t_address,t_struct(lenderstankdata)4595_storage))",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:121"
            },
            {
              "label": "interestbearingtanklist",
              "offset": 0,
              "slot": "13",
              "type": "t_array(t_contract(ERC20)692)dyn_storage",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:122"
            },
            {
              "label": "noninterestbearingtanklist",
              "offset": 0,
              "slot": "14",
              "type": "t_array(t_contract(ERC20)692)dyn_storage",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:123"
            },
            {
              "label": "basecollDeployer",
              "offset": 0,
              "slot": "15",
              "type": "t_contract(BasecollDeployer)4458",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:125"
            },
            {
              "label": "priceoracle",
              "offset": 0,
              "slot": "16",
              "type": "t_contract(IDAIoraclePriceGetter)4292",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:127"
            },
            {
              "label": "reservePercent",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:129"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_address)5_storage": {
              "label": "address[5]"
            },
            "t_array(t_contract(ERC20)692)dyn_storage": {
              "label": "contract ERC20[]"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_contract(BasecollDeployer)4458": {
              "label": "contract BasecollDeployer"
            },
            "t_contract(ERC20)692": {
              "label": "contract ERC20"
            },
            "t_contract(IBase_stables)4253": {
              "label": "contract IBase_stables"
            },
            "t_contract(IBase_usd)4280": {
              "label": "contract IBase_usd"
            },
            "t_contract(IDAIoraclePriceGetter)4292": {
              "label": "contract IDAIoraclePriceGetter"
            },
            "t_contract(IPoolConfiguration)4333": {
              "label": "contract IPoolConfiguration"
            },
            "t_contract(basecoll)4421": {
              "label": "contract basecoll"
            },
            "t_enum(tankStatus)4589": {
              "label": "enum corelibrary.tankStatus",
              "members": [
                "INACTIVE",
                "ACTIVE",
                "CLOSED"
              ]
            },
            "t_mapping(t_address,t_mapping(t_address,t_struct(borrowerstankdata)4618_storage))": {
              "label": "mapping(address => mapping(address => struct corelibrary.borrowerstankdata))"
            },
            "t_mapping(t_address,t_mapping(t_address,t_struct(lenderstankdata)4595_storage))": {
              "label": "mapping(address => mapping(address => struct corelibrary.lenderstankdata))"
            },
            "t_mapping(t_address,t_struct(borrowerstankdata)4618_storage)": {
              "label": "mapping(address => struct corelibrary.borrowerstankdata)"
            },
            "t_mapping(t_address,t_struct(interestbearingtankdata)4613_storage)": {
              "label": "mapping(address => struct corelibrary.interestbearingtankdata)"
            },
            "t_mapping(t_address,t_struct(lenderstankdata)4595_storage)": {
              "label": "mapping(address => struct corelibrary.lenderstankdata)"
            },
            "t_mapping(t_address,t_struct(noninterestbearingtankdata)4632_storage)": {
              "label": "mapping(address => struct corelibrary.noninterestbearingtankdata)"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(borrowerstankdata)4618_storage": {
              "label": "struct corelibrary.borrowerstankdata",
              "members": [
                {
                  "label": "disableUseAsCollateral",
                  "type": "t_bool"
                },
                {
                  "label": "borrowShares",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(interestbearingtankdata)4613_storage": {
              "label": "struct corelibrary.interestbearingtankdata",
              "members": [
                {
                  "label": "status",
                  "type": "t_enum(tankStatus)4589"
                },
                {
                  "label": "baseusd",
                  "type": "t_contract(IBase_usd)4280"
                },
                {
                  "label": "poolConfig",
                  "type": "t_contract(IPoolConfiguration)4333"
                },
                {
                  "label": "totalBorrows",
                  "type": "t_uint256"
                },
                {
                  "label": "totalBorrowShares",
                  "type": "t_uint256"
                },
                {
                  "label": "tankReserves",
                  "type": "t_uint256"
                },
                {
                  "label": "lastUpdateTimestamp",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(lenderstankdata)4595_storage": {
              "label": "struct corelibrary.lenderstankdata",
              "members": [
                {
                  "label": "borrowShares",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(noninterestbearingtankdata)4632_storage": {
              "label": "struct corelibrary.noninterestbearingtankdata",
              "members": [
                {
                  "label": "status",
                  "type": "t_enum(tankStatus)4589"
                },
                {
                  "label": "baseColl",
                  "type": "t_contract(basecoll)4421"
                },
                {
                  "label": "poolConfig",
                  "type": "t_contract(IPoolConfiguration)4333"
                },
                {
                  "label": "lastUpdateTimestamp",
                  "type": "t_uint256"
                },
                {
                  "label": "usdpair",
                  "type": "t_string_storage"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "BaseLend": {
        "src": "contracts/BaseLend.sol:14",
        "version": {
          "withMetadata": "e5e29360e6c3a9b93f1f83df2041a9349fc7ecdc06e4ea260750825a1ac809d5",
          "withoutMetadata": "c0ae9272b89cf147f74e1c10651902da504e7352bd1748818aea15f01dc0f466",
          "linkedWithoutMetadata": "c0ae9272b89cf147f74e1c10651902da504e7352bd1748818aea15f01dc0f466"
        },
        "inherit": [],
        "libraries": [
          "SafeERC20",
          "SafeMath",
          "WadMath",
          "Math",
          "corelibrary"
        ],
        "methods": [
          "getTotalAvailableLiquidity(address)",
          "getTotalLiquidity(address)",
          "initIBT(address,address)",
          "initNIBT(address,address,string)",
          "getIBTdata()",
          "getNIBTdata(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "reservePercent",
            "src": "contracts/BaseLend.sol:103"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "baseusd",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IBase_usd)4280",
              "contract": "BaseLend",
              "src": "contracts/BaseLend.sol:88"
            },
            {
              "label": "basecore",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(BaseCore)3544",
              "contract": "BaseLend",
              "src": "contracts/BaseLend.sol:89"
            },
            {
              "label": "backingbalances",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "BaseLend",
              "src": "contracts/BaseLend.sol:91"
            },
            {
              "label": "interestbearingtank",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_struct(interestbearingtankdata)4613_storage)",
              "contract": "BaseLend",
              "src": "contracts/BaseLend.sol:92"
            },
            {
              "label": "noninterestbearingtank",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_struct(noninterestbearingtankdata)4632_storage)",
              "contract": "BaseLend",
              "src": "contracts/BaseLend.sol:93"
            },
            {
              "label": "borrowerstank",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_struct(borrowerstankdata)4618_storage))",
              "contract": "BaseLend",
              "src": "contracts/BaseLend.sol:95"
            },
            {
              "label": "lenderstank",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_address,t_struct(lenderstankdata)4595_storage))",
              "contract": "BaseLend",
              "src": "contracts/BaseLend.sol:96"
            },
            {
              "label": "interestbearingtanklist",
              "offset": 0,
              "slot": "7",
              "type": "t_array(t_contract(ERC20)692)dyn_storage",
              "contract": "BaseLend",
              "src": "contracts/BaseLend.sol:97"
            },
            {
              "label": "noninterestbearingtanklist",
              "offset": 0,
              "slot": "8",
              "type": "t_array(t_contract(ERC20)692)dyn_storage",
              "contract": "BaseLend",
              "src": "contracts/BaseLend.sol:98"
            },
            {
              "label": "basecollDeployer",
              "offset": 0,
              "slot": "9",
              "type": "t_contract(BasecollDeployer)4458",
              "contract": "BaseLend",
              "src": "contracts/BaseLend.sol:100"
            },
            {
              "label": "reservePercent",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "BaseLend",
              "src": "contracts/BaseLend.sol:103"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_contract(ERC20)692)dyn_storage": {
              "label": "contract ERC20[]"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_contract(BaseCore)3544": {
              "label": "contract BaseCore"
            },
            "t_contract(BasecollDeployer)4458": {
              "label": "contract BasecollDeployer"
            },
            "t_contract(ERC20)692": {
              "label": "contract ERC20"
            },
            "t_contract(IBase_usd)4280": {
              "label": "contract IBase_usd"
            },
            "t_contract(IPoolConfiguration)4333": {
              "label": "contract IPoolConfiguration"
            },
            "t_contract(basecoll)4421": {
              "label": "contract basecoll"
            },
            "t_enum(tankStatus)4589": {
              "label": "enum corelibrary.tankStatus",
              "members": [
                "INACTIVE",
                "ACTIVE",
                "CLOSED"
              ]
            },
            "t_mapping(t_address,t_mapping(t_address,t_struct(borrowerstankdata)4618_storage))": {
              "label": "mapping(address => mapping(address => struct corelibrary.borrowerstankdata))"
            },
            "t_mapping(t_address,t_mapping(t_address,t_struct(lenderstankdata)4595_storage))": {
              "label": "mapping(address => mapping(address => struct corelibrary.lenderstankdata))"
            },
            "t_mapping(t_address,t_struct(borrowerstankdata)4618_storage)": {
              "label": "mapping(address => struct corelibrary.borrowerstankdata)"
            },
            "t_mapping(t_address,t_struct(interestbearingtankdata)4613_storage)": {
              "label": "mapping(address => struct corelibrary.interestbearingtankdata)"
            },
            "t_mapping(t_address,t_struct(lenderstankdata)4595_storage)": {
              "label": "mapping(address => struct corelibrary.lenderstankdata)"
            },
            "t_mapping(t_address,t_struct(noninterestbearingtankdata)4632_storage)": {
              "label": "mapping(address => struct corelibrary.noninterestbearingtankdata)"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(borrowerstankdata)4618_storage": {
              "label": "struct corelibrary.borrowerstankdata",
              "members": [
                {
                  "label": "disableUseAsCollateral",
                  "type": "t_bool"
                },
                {
                  "label": "borrowShares",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(interestbearingtankdata)4613_storage": {
              "label": "struct corelibrary.interestbearingtankdata",
              "members": [
                {
                  "label": "status",
                  "type": "t_enum(tankStatus)4589"
                },
                {
                  "label": "baseusd",
                  "type": "t_contract(IBase_usd)4280"
                },
                {
                  "label": "poolConfig",
                  "type": "t_contract(IPoolConfiguration)4333"
                },
                {
                  "label": "totalBorrows",
                  "type": "t_uint256"
                },
                {
                  "label": "totalBorrowShares",
                  "type": "t_uint256"
                },
                {
                  "label": "tankReserves",
                  "type": "t_uint256"
                },
                {
                  "label": "lastUpdateTimestamp",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(lenderstankdata)4595_storage": {
              "label": "struct corelibrary.lenderstankdata",
              "members": [
                {
                  "label": "borrowShares",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(noninterestbearingtankdata)4632_storage": {
              "label": "struct corelibrary.noninterestbearingtankdata",
              "members": [
                {
                  "label": "status",
                  "type": "t_enum(tankStatus)4589"
                },
                {
                  "label": "baseColl",
                  "type": "t_contract(basecoll)4421"
                },
                {
                  "label": "poolConfig",
                  "type": "t_contract(IPoolConfiguration)4333"
                },
                {
                  "label": "lastUpdateTimestamp",
                  "type": "t_uint256"
                },
                {
                  "label": "usdpair",
                  "type": "t_string_storage"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IBaseCore": {
        "src": "contracts/Interface/IBaseCore.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(uint256,address)",
          "redeem(uint256,address)",
          "harvest()",
          "earned()",
          "dusdToUsd(uint256,bool)",
          "peaks(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IBase_stables": {
        "src": "contracts/Interface/IBase_stables.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)",
          "burn(address,uint256)",
          "totalSupply()",
          "burnForSelf(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IBase_usd": {
        "src": "contracts/Interface/IBase_usd.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)",
          "burn(address,uint256)",
          "totalSupply()",
          "burnForSelf(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IDAIoraclePriceGetter": {
        "src": "contracts/Interface/IDAIoraclePriceGetter.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getPrice(string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPoolConfiguration": {
        "src": "contracts/Interface/IPoolConfiguration.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getOptimalUtilizationRate()",
          "getBaseBorrowRate()",
          "getLiquidationBonusPercent()",
          "getCollateralPercent()",
          "calculateInterestRate(uint256,uint256)",
          "getUtilizationRate(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "basecoll": {
        "src": "contracts/basecoll.sol:8",
        "version": {
          "withMetadata": "d3b0314edf7063e71ffd6c3d85846756719ffffd1896397489fb28790ee073a7",
          "withoutMetadata": "fd8a7b64813b41475f4f2ca2e4cc396d01b9a5887e53356bec97171d8ea4acec",
          "linkedWithoutMetadata": "fd8a7b64813b41475f4f2ca2e4cc396d01b9a5887e53356bec97171d8ea4acec"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "methods": [
          "(string,string,address,address)",
          "mint(address,uint256)",
          "burn(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "basecoll",
            "src": "contracts/basecoll.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "basecore",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(BaseCore)3544",
              "contract": "basecoll",
              "src": "contracts/basecoll.sol:11"
            },
            {
              "label": "underlyingAsset",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(ERC20)692",
              "contract": "basecoll",
              "src": "contracts/basecoll.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_contract(BaseCore)3544": {
              "label": "contract BaseCore"
            },
            "t_contract(ERC20)692": {
              "label": "contract ERC20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "BasecollDeployer": {
        "src": "contracts/basecollDeployer.sol:8",
        "version": {
          "withMetadata": "aa22d305820c7fc51bddc4f2204993497d35c8dbd684bd27ab70365f6fdea2c5",
          "withoutMetadata": "35cd121d23cfdf739b4389959c54c2732d33e5d3483e44fe5086f641c5c3f68b",
          "linkedWithoutMetadata": "35cd121d23cfdf739b4389959c54c2732d33e5d3483e44fe5086f641c5c3f68b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "createNewbasecoll(string,string,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Math": {
        "src": "contracts/libraries/Math.sol:10",
        "version": {
          "withMetadata": "8eb24f05334341281cfdc4ce9624eb0214fec990a3e7edf35702f88dcb93527f",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "WadMath": {
        "src": "contracts/libraries/WadMath.sol:11",
        "version": {
          "withMetadata": "4469de403b749c3b4e3c35240492ef4d28235438c36c6733c57fd87b0535274f",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "SafeMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "corelibrary": {
        "src": "contracts/libraries/corelibrary.sol:14",
        "version": {
          "withMetadata": "ebc455b183a51c3004a15502c95c434caec0a3cc723a55371a0efe76f926a3b4",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "SafeERC20",
          "SafeMath",
          "WadMath",
          "Math"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "08295699790c674c5574539ced5280dbb163cab91795b07eb9175feafd7c5c02",
          "withoutMetadata": "7e7a4d2dea64835b308c8a359c3029d74988a4318ba8ef4240ab30513edfd448",
          "linkedWithoutMetadata": "7e7a4d2dea64835b308c8a359c3029d74988a4318ba8ef4240ab30513edfd448"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:18",
        "version": {
          "withMetadata": "3cadbdb25b0d889a6e9d9f749cc008545c861f2916c34f119ffec15ff9894211",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "f453140119aa4ab940c1c866e30faba30c70b1bf42ecb26b808dc4e355066110",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "e96c088265fb723a79b847223722ed9c8034dcd061caf652f25c4bd66d192c8e",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "BaseCore": {
        "src": "contracts/BaseCore.sol:20",
        "version": {
          "withMetadata": "3f7460a1f0cd66114fc5c61a7d4518702676ccc00edcb5ca35dfc970c17ca361",
          "withoutMetadata": "aae5642783e877e4f3469f913bf89fac4894839c51262cf5659c79136c9c1f2c",
          "linkedWithoutMetadata": "aae5642783e877e4f3469f913bf89fac4894839c51262cf5659c79136c9c1f2c"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeERC20",
          "SafeMath",
          "WadMath",
          "Math",
          "corelibrary"
        ],
        "methods": [
          "(address[5])",
          "initIBT(address,address)",
          "initNIBT(address,address,string)",
          "getIBTdata()",
          "getNIBTdata(address)",
          "setPriceOracle(address)",
          "setTokens(address,address,address)",
          "setIBTStatus(address,uint8)",
          "setNIBTStatus(address,uint8)",
          "mint(uint256)",
          "depositColl(address,uint256)",
          "burn(uint256)",
          "withdrawColl(address,uint256)",
          "getBalance(address)",
          "getTotalAvailableLiquidity(address)",
          "getTotalLiquidity(address)",
          "getUserCompoundedLiquidityBalance(address,address)",
          "getUserTankData(address,address)",
          "getUserCompoundedBorrowBalance(address)",
          "getUserAccount(address)",
          "borrowBaseusd(uint256)",
          "isAccountHealthy(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BaseCore",
            "src": "contracts/BaseCore.sol:132"
          },
          {
            "kind": "state-variable-assignment",
            "name": "reservePercent",
            "src": "contracts/BaseCore.sol:129"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "backingcoins",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_address)5_storage",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:111"
            },
            {
              "label": "baseusd",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(IBase_usd)3925",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:113"
            },
            {
              "label": "basestables",
              "offset": 0,
              "slot": "7",
              "type": "t_contract(IBase_stables)3898",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:114"
            },
            {
              "label": "backingbalances",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:116"
            },
            {
              "label": "interestbearingtank",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_struct(interestbearingtankdata)4258_storage)",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:117"
            },
            {
              "label": "noninterestbearingtank",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(noninterestbearingtankdata)4277_storage)",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:118"
            },
            {
              "label": "borrowerstank",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_struct(borrowerstankdata)4263_storage))",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:120"
            },
            {
              "label": "lenderstank",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_mapping(t_address,t_struct(lenderstankdata)4240_storage))",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:121"
            },
            {
              "label": "interestbearingtanklist",
              "offset": 0,
              "slot": "13",
              "type": "t_array(t_contract(ERC20)692)dyn_storage",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:122"
            },
            {
              "label": "noninterestbearingtanklist",
              "offset": 0,
              "slot": "14",
              "type": "t_array(t_contract(ERC20)692)dyn_storage",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:123"
            },
            {
              "label": "basecollDeployer",
              "offset": 0,
              "slot": "15",
              "type": "t_contract(BasecollDeployer)4103",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:125"
            },
            {
              "label": "priceoracle",
              "offset": 0,
              "slot": "16",
              "type": "t_contract(IDAIoraclePriceGetter)3937",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:127"
            },
            {
              "label": "reservePercent",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:129"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_address)5_storage": {
              "label": "address[5]"
            },
            "t_array(t_contract(ERC20)692)dyn_storage": {
              "label": "contract ERC20[]"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_contract(BasecollDeployer)4103": {
              "label": "contract BasecollDeployer"
            },
            "t_contract(ERC20)692": {
              "label": "contract ERC20"
            },
            "t_contract(IBase_stables)3898": {
              "label": "contract IBase_stables"
            },
            "t_contract(IBase_usd)3925": {
              "label": "contract IBase_usd"
            },
            "t_contract(IDAIoraclePriceGetter)3937": {
              "label": "contract IDAIoraclePriceGetter"
            },
            "t_contract(IPoolConfiguration)3978": {
              "label": "contract IPoolConfiguration"
            },
            "t_contract(basecoll)4066": {
              "label": "contract basecoll"
            },
            "t_enum(tankStatus)4234": {
              "label": "enum corelibrary.tankStatus",
              "members": [
                "INACTIVE",
                "ACTIVE",
                "CLOSED"
              ]
            },
            "t_mapping(t_address,t_mapping(t_address,t_struct(borrowerstankdata)4263_storage))": {
              "label": "mapping(address => mapping(address => struct corelibrary.borrowerstankdata))"
            },
            "t_mapping(t_address,t_mapping(t_address,t_struct(lenderstankdata)4240_storage))": {
              "label": "mapping(address => mapping(address => struct corelibrary.lenderstankdata))"
            },
            "t_mapping(t_address,t_struct(borrowerstankdata)4263_storage)": {
              "label": "mapping(address => struct corelibrary.borrowerstankdata)"
            },
            "t_mapping(t_address,t_struct(interestbearingtankdata)4258_storage)": {
              "label": "mapping(address => struct corelibrary.interestbearingtankdata)"
            },
            "t_mapping(t_address,t_struct(lenderstankdata)4240_storage)": {
              "label": "mapping(address => struct corelibrary.lenderstankdata)"
            },
            "t_mapping(t_address,t_struct(noninterestbearingtankdata)4277_storage)": {
              "label": "mapping(address => struct corelibrary.noninterestbearingtankdata)"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(borrowerstankdata)4263_storage": {
              "label": "struct corelibrary.borrowerstankdata",
              "members": [
                {
                  "label": "disableUseAsCollateral",
                  "type": "t_bool"
                },
                {
                  "label": "borrowShares",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(interestbearingtankdata)4258_storage": {
              "label": "struct corelibrary.interestbearingtankdata",
              "members": [
                {
                  "label": "status",
                  "type": "t_enum(tankStatus)4234"
                },
                {
                  "label": "baseusd",
                  "type": "t_contract(IBase_usd)3925"
                },
                {
                  "label": "poolConfig",
                  "type": "t_contract(IPoolConfiguration)3978"
                },
                {
                  "label": "totalBorrows",
                  "type": "t_uint256"
                },
                {
                  "label": "totalBorrowShares",
                  "type": "t_uint256"
                },
                {
                  "label": "tankReserves",
                  "type": "t_uint256"
                },
                {
                  "label": "lastUpdateTimestamp",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(lenderstankdata)4240_storage": {
              "label": "struct corelibrary.lenderstankdata",
              "members": [
                {
                  "label": "borrowShares",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(noninterestbearingtankdata)4277_storage": {
              "label": "struct corelibrary.noninterestbearingtankdata",
              "members": [
                {
                  "label": "status",
                  "type": "t_enum(tankStatus)4234"
                },
                {
                  "label": "baseColl",
                  "type": "t_contract(basecoll)4066"
                },
                {
                  "label": "poolConfig",
                  "type": "t_contract(IPoolConfiguration)3978"
                },
                {
                  "label": "lastUpdateTimestamp",
                  "type": "t_uint256"
                },
                {
                  "label": "usdpair",
                  "type": "t_string_storage"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "BaseLend": {
        "src": "contracts/BaseLend.sol:12",
        "version": {
          "withMetadata": "7b6fddf00c0b01ed8ff499981ad56b26c2688173acebc4eff1ca153412dbfeac",
          "withoutMetadata": "5fcbb38b4996630ea6c0fc4572161d429c92c71da8f3292014cd5ad7d516b75f",
          "linkedWithoutMetadata": "5fcbb38b4996630ea6c0fc4572161d429c92c71da8f3292014cd5ad7d516b75f"
        },
        "inherit": [],
        "libraries": [
          "SafeERC20",
          "SafeMath",
          "WadMath",
          "Math",
          "corelibrary"
        ],
        "methods": [
          "getTotalAvailableLiquidity(address)",
          "getTotalLiquidity(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "reservePercent",
            "src": "contracts/BaseLend.sol:98"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "baseusd",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IBase_usd)3925",
              "contract": "BaseLend",
              "src": "contracts/BaseLend.sol:86"
            },
            {
              "label": "backingbalances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "BaseLend",
              "src": "contracts/BaseLend.sol:88"
            },
            {
              "label": "interestbearingtank",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_struct(interestbearingtankdata)4258_storage)",
              "contract": "BaseLend",
              "src": "contracts/BaseLend.sol:89"
            },
            {
              "label": "noninterestbearingtank",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_struct(noninterestbearingtankdata)4277_storage)",
              "contract": "BaseLend",
              "src": "contracts/BaseLend.sol:90"
            },
            {
              "label": "borrowerstank",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_struct(borrowerstankdata)4263_storage))",
              "contract": "BaseLend",
              "src": "contracts/BaseLend.sol:92"
            },
            {
              "label": "lenderstank",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_struct(lenderstankdata)4240_storage))",
              "contract": "BaseLend",
              "src": "contracts/BaseLend.sol:93"
            },
            {
              "label": "interestbearingtanklist",
              "offset": 0,
              "slot": "6",
              "type": "t_array(t_contract(ERC20)692)dyn_storage",
              "contract": "BaseLend",
              "src": "contracts/BaseLend.sol:94"
            },
            {
              "label": "noninterestbearingtanklist",
              "offset": 0,
              "slot": "7",
              "type": "t_array(t_contract(ERC20)692)dyn_storage",
              "contract": "BaseLend",
              "src": "contracts/BaseLend.sol:95"
            },
            {
              "label": "reservePercent",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "BaseLend",
              "src": "contracts/BaseLend.sol:98"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_contract(ERC20)692)dyn_storage": {
              "label": "contract ERC20[]"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_contract(ERC20)692": {
              "label": "contract ERC20"
            },
            "t_contract(IBase_usd)3925": {
              "label": "contract IBase_usd"
            },
            "t_contract(IPoolConfiguration)3978": {
              "label": "contract IPoolConfiguration"
            },
            "t_contract(basecoll)4066": {
              "label": "contract basecoll"
            },
            "t_enum(tankStatus)4234": {
              "label": "enum corelibrary.tankStatus",
              "members": [
                "INACTIVE",
                "ACTIVE",
                "CLOSED"
              ]
            },
            "t_mapping(t_address,t_mapping(t_address,t_struct(borrowerstankdata)4263_storage))": {
              "label": "mapping(address => mapping(address => struct corelibrary.borrowerstankdata))"
            },
            "t_mapping(t_address,t_mapping(t_address,t_struct(lenderstankdata)4240_storage))": {
              "label": "mapping(address => mapping(address => struct corelibrary.lenderstankdata))"
            },
            "t_mapping(t_address,t_struct(borrowerstankdata)4263_storage)": {
              "label": "mapping(address => struct corelibrary.borrowerstankdata)"
            },
            "t_mapping(t_address,t_struct(interestbearingtankdata)4258_storage)": {
              "label": "mapping(address => struct corelibrary.interestbearingtankdata)"
            },
            "t_mapping(t_address,t_struct(lenderstankdata)4240_storage)": {
              "label": "mapping(address => struct corelibrary.lenderstankdata)"
            },
            "t_mapping(t_address,t_struct(noninterestbearingtankdata)4277_storage)": {
              "label": "mapping(address => struct corelibrary.noninterestbearingtankdata)"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(borrowerstankdata)4263_storage": {
              "label": "struct corelibrary.borrowerstankdata",
              "members": [
                {
                  "label": "disableUseAsCollateral",
                  "type": "t_bool"
                },
                {
                  "label": "borrowShares",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(interestbearingtankdata)4258_storage": {
              "label": "struct corelibrary.interestbearingtankdata",
              "members": [
                {
                  "label": "status",
                  "type": "t_enum(tankStatus)4234"
                },
                {
                  "label": "baseusd",
                  "type": "t_contract(IBase_usd)3925"
                },
                {
                  "label": "poolConfig",
                  "type": "t_contract(IPoolConfiguration)3978"
                },
                {
                  "label": "totalBorrows",
                  "type": "t_uint256"
                },
                {
                  "label": "totalBorrowShares",
                  "type": "t_uint256"
                },
                {
                  "label": "tankReserves",
                  "type": "t_uint256"
                },
                {
                  "label": "lastUpdateTimestamp",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(lenderstankdata)4240_storage": {
              "label": "struct corelibrary.lenderstankdata",
              "members": [
                {
                  "label": "borrowShares",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(noninterestbearingtankdata)4277_storage": {
              "label": "struct corelibrary.noninterestbearingtankdata",
              "members": [
                {
                  "label": "status",
                  "type": "t_enum(tankStatus)4234"
                },
                {
                  "label": "baseColl",
                  "type": "t_contract(basecoll)4066"
                },
                {
                  "label": "poolConfig",
                  "type": "t_contract(IPoolConfiguration)3978"
                },
                {
                  "label": "lastUpdateTimestamp",
                  "type": "t_uint256"
                },
                {
                  "label": "usdpair",
                  "type": "t_string_storage"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IBaseCore": {
        "src": "contracts/Interface/IBaseCore.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(uint256,address)",
          "redeem(uint256,address)",
          "harvest()",
          "earned()",
          "dusdToUsd(uint256,bool)",
          "peaks(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IBase_stables": {
        "src": "contracts/Interface/IBase_stables.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)",
          "burn(address,uint256)",
          "totalSupply()",
          "burnForSelf(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IBase_usd": {
        "src": "contracts/Interface/IBase_usd.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)",
          "burn(address,uint256)",
          "totalSupply()",
          "burnForSelf(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IDAIoraclePriceGetter": {
        "src": "contracts/Interface/IDAIoraclePriceGetter.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getPrice(string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPoolConfiguration": {
        "src": "contracts/Interface/IPoolConfiguration.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getOptimalUtilizationRate()",
          "getBaseBorrowRate()",
          "getLiquidationBonusPercent()",
          "getCollateralPercent()",
          "calculateInterestRate(uint256,uint256)",
          "getUtilizationRate(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "basecoll": {
        "src": "contracts/basecoll.sol:8",
        "version": {
          "withMetadata": "d3b0314edf7063e71ffd6c3d85846756719ffffd1896397489fb28790ee073a7",
          "withoutMetadata": "fd8a7b64813b41475f4f2ca2e4cc396d01b9a5887e53356bec97171d8ea4acec",
          "linkedWithoutMetadata": "fd8a7b64813b41475f4f2ca2e4cc396d01b9a5887e53356bec97171d8ea4acec"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "methods": [
          "(string,string,address,address)",
          "mint(address,uint256)",
          "burn(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "basecoll",
            "src": "contracts/basecoll.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "basecore",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(BaseCore)3544",
              "contract": "basecoll",
              "src": "contracts/basecoll.sol:11"
            },
            {
              "label": "underlyingAsset",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(ERC20)692",
              "contract": "basecoll",
              "src": "contracts/basecoll.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_contract(BaseCore)3544": {
              "label": "contract BaseCore"
            },
            "t_contract(ERC20)692": {
              "label": "contract ERC20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "BasecollDeployer": {
        "src": "contracts/basecollDeployer.sol:8",
        "version": {
          "withMetadata": "aa22d305820c7fc51bddc4f2204993497d35c8dbd684bd27ab70365f6fdea2c5",
          "withoutMetadata": "35cd121d23cfdf739b4389959c54c2732d33e5d3483e44fe5086f641c5c3f68b",
          "linkedWithoutMetadata": "35cd121d23cfdf739b4389959c54c2732d33e5d3483e44fe5086f641c5c3f68b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "createNewbasecoll(string,string,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Math": {
        "src": "contracts/libraries/Math.sol:10",
        "version": {
          "withMetadata": "8eb24f05334341281cfdc4ce9624eb0214fec990a3e7edf35702f88dcb93527f",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "WadMath": {
        "src": "contracts/libraries/WadMath.sol:11",
        "version": {
          "withMetadata": "4469de403b749c3b4e3c35240492ef4d28235438c36c6733c57fd87b0535274f",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "SafeMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "corelibrary": {
        "src": "contracts/libraries/corelibrary.sol:14",
        "version": {
          "withMetadata": "ebc455b183a51c3004a15502c95c434caec0a3cc723a55371a0efe76f926a3b4",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "SafeERC20",
          "SafeMath",
          "WadMath",
          "Math"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "08295699790c674c5574539ced5280dbb163cab91795b07eb9175feafd7c5c02",
          "withoutMetadata": "7e7a4d2dea64835b308c8a359c3029d74988a4318ba8ef4240ab30513edfd448",
          "linkedWithoutMetadata": "7e7a4d2dea64835b308c8a359c3029d74988a4318ba8ef4240ab30513edfd448"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:18",
        "version": {
          "withMetadata": "3cadbdb25b0d889a6e9d9f749cc008545c861f2916c34f119ffec15ff9894211",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "f453140119aa4ab940c1c866e30faba30c70b1bf42ecb26b808dc4e355066110",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "e96c088265fb723a79b847223722ed9c8034dcd061caf652f25c4bd66d192c8e",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "BaseCore": {
        "src": "contracts/BaseCore.sol:20",
        "version": {
          "withMetadata": "9ae3c88a781ca45c312be58b07c3016133948e9cddc5b052cd312db8cfccd4f0",
          "withoutMetadata": "0ee228067d6a5312b1cde271f55aeca3ade715a26013010f2a244ac5f4e2db43",
          "linkedWithoutMetadata": "0ee228067d6a5312b1cde271f55aeca3ade715a26013010f2a244ac5f4e2db43"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeERC20",
          "SafeMath",
          "WadMath",
          "Math",
          "corelibrary"
        ],
        "methods": [
          "(address[5])",
          "initIBT(address,address)",
          "initNIBT(address,address,string)",
          "getIBTdata()",
          "getNIBTdata(address)",
          "setPriceOracle(address)",
          "setTokens(address,address,address)",
          "setIBTStatus(address,uint8)",
          "setNIBTStatus(address,uint8)",
          "mint(uint256)",
          "depositColl(address,uint256)",
          "burn(uint256)",
          "withdrawColl(address,uint256)",
          "getBalance(address)",
          "getTotalAvailableLiquidity(address)",
          "getTotalLiquidity(address)",
          "getUserCompoundedLiquidityBalance(address,address)",
          "getUserTankData(address,address)",
          "getUserCompoundedBorrowBalance(address)",
          "getUserAccount(address)",
          "isAccountHealthy(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BaseCore",
            "src": "contracts/BaseCore.sol:132"
          },
          {
            "kind": "state-variable-assignment",
            "name": "reservePercent",
            "src": "contracts/BaseCore.sol:129"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "backingcoins",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_address)5_storage",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:111"
            },
            {
              "label": "baseusd",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(IBase_usd)3517",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:113"
            },
            {
              "label": "basestables",
              "offset": 0,
              "slot": "7",
              "type": "t_contract(IBase_stables)3490",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:114"
            },
            {
              "label": "backingbalances",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:116"
            },
            {
              "label": "interestbearingtank",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_struct(interestbearingtankdata)3850_storage)",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:117"
            },
            {
              "label": "noninterestbearingtank",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(noninterestbearingtankdata)3869_storage)",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:118"
            },
            {
              "label": "borrowerstank",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_struct(borrowerstankdata)3855_storage))",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:120"
            },
            {
              "label": "lenderstank",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_mapping(t_address,t_struct(lenderstankdata)3832_storage))",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:121"
            },
            {
              "label": "interestbearingtanklist",
              "offset": 0,
              "slot": "13",
              "type": "t_array(t_contract(ERC20)692)dyn_storage",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:122"
            },
            {
              "label": "noninterestbearingtanklist",
              "offset": 0,
              "slot": "14",
              "type": "t_array(t_contract(ERC20)692)dyn_storage",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:123"
            },
            {
              "label": "basecollDeployer",
              "offset": 0,
              "slot": "15",
              "type": "t_contract(BasecollDeployer)3695",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:125"
            },
            {
              "label": "priceoracle",
              "offset": 0,
              "slot": "16",
              "type": "t_contract(IDAIoraclePriceGetter)3529",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:127"
            },
            {
              "label": "reservePercent",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:129"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_address)5_storage": {
              "label": "address[5]"
            },
            "t_array(t_contract(ERC20)692)dyn_storage": {
              "label": "contract ERC20[]"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_contract(BasecollDeployer)3695": {
              "label": "contract BasecollDeployer"
            },
            "t_contract(ERC20)692": {
              "label": "contract ERC20"
            },
            "t_contract(IBase_stables)3490": {
              "label": "contract IBase_stables"
            },
            "t_contract(IBase_usd)3517": {
              "label": "contract IBase_usd"
            },
            "t_contract(IDAIoraclePriceGetter)3529": {
              "label": "contract IDAIoraclePriceGetter"
            },
            "t_contract(IPoolConfiguration)3570": {
              "label": "contract IPoolConfiguration"
            },
            "t_contract(basecoll)3658": {
              "label": "contract basecoll"
            },
            "t_enum(tankStatus)3826": {
              "label": "enum corelibrary.tankStatus",
              "members": [
                "INACTIVE",
                "ACTIVE",
                "CLOSED"
              ]
            },
            "t_mapping(t_address,t_mapping(t_address,t_struct(borrowerstankdata)3855_storage))": {
              "label": "mapping(address => mapping(address => struct corelibrary.borrowerstankdata))"
            },
            "t_mapping(t_address,t_mapping(t_address,t_struct(lenderstankdata)3832_storage))": {
              "label": "mapping(address => mapping(address => struct corelibrary.lenderstankdata))"
            },
            "t_mapping(t_address,t_struct(borrowerstankdata)3855_storage)": {
              "label": "mapping(address => struct corelibrary.borrowerstankdata)"
            },
            "t_mapping(t_address,t_struct(interestbearingtankdata)3850_storage)": {
              "label": "mapping(address => struct corelibrary.interestbearingtankdata)"
            },
            "t_mapping(t_address,t_struct(lenderstankdata)3832_storage)": {
              "label": "mapping(address => struct corelibrary.lenderstankdata)"
            },
            "t_mapping(t_address,t_struct(noninterestbearingtankdata)3869_storage)": {
              "label": "mapping(address => struct corelibrary.noninterestbearingtankdata)"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(borrowerstankdata)3855_storage": {
              "label": "struct corelibrary.borrowerstankdata",
              "members": [
                {
                  "label": "disableUseAsCollateral",
                  "type": "t_bool"
                },
                {
                  "label": "borrowShares",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(interestbearingtankdata)3850_storage": {
              "label": "struct corelibrary.interestbearingtankdata",
              "members": [
                {
                  "label": "status",
                  "type": "t_enum(tankStatus)3826"
                },
                {
                  "label": "baseusd",
                  "type": "t_contract(IBase_usd)3517"
                },
                {
                  "label": "poolConfig",
                  "type": "t_contract(IPoolConfiguration)3570"
                },
                {
                  "label": "totalBorrows",
                  "type": "t_uint256"
                },
                {
                  "label": "totalBorrowShares",
                  "type": "t_uint256"
                },
                {
                  "label": "tankReserves",
                  "type": "t_uint256"
                },
                {
                  "label": "lastUpdateTimestamp",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(lenderstankdata)3832_storage": {
              "label": "struct corelibrary.lenderstankdata",
              "members": [
                {
                  "label": "borrowShares",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(noninterestbearingtankdata)3869_storage": {
              "label": "struct corelibrary.noninterestbearingtankdata",
              "members": [
                {
                  "label": "status",
                  "type": "t_enum(tankStatus)3826"
                },
                {
                  "label": "baseColl",
                  "type": "t_contract(basecoll)3658"
                },
                {
                  "label": "poolConfig",
                  "type": "t_contract(IPoolConfiguration)3570"
                },
                {
                  "label": "lastUpdateTimestamp",
                  "type": "t_uint256"
                },
                {
                  "label": "usdpair",
                  "type": "t_string_storage"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IBaseCore": {
        "src": "contracts/Interface/IBaseCore.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(uint256,address)",
          "redeem(uint256,address)",
          "harvest()",
          "earned()",
          "dusdToUsd(uint256,bool)",
          "peaks(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IBase_stables": {
        "src": "contracts/Interface/IBase_stables.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)",
          "burn(address,uint256)",
          "totalSupply()",
          "burnForSelf(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IBase_usd": {
        "src": "contracts/Interface/IBase_usd.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)",
          "burn(address,uint256)",
          "totalSupply()",
          "burnForSelf(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IDAIoraclePriceGetter": {
        "src": "contracts/Interface/IDAIoraclePriceGetter.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getPrice(string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPoolConfiguration": {
        "src": "contracts/Interface/IPoolConfiguration.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getOptimalUtilizationRate()",
          "getBaseBorrowRate()",
          "getLiquidationBonusPercent()",
          "getCollateralPercent()",
          "calculateInterestRate(uint256,uint256)",
          "getUtilizationRate(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "basecoll": {
        "src": "contracts/basecoll.sol:8",
        "version": {
          "withMetadata": "77984d1e2c355516dc843cf9c9d78303a0abf4664c9b5357ebdd8bb125775ebe",
          "withoutMetadata": "fd8a7b64813b41475f4f2ca2e4cc396d01b9a5887e53356bec97171d8ea4acec",
          "linkedWithoutMetadata": "fd8a7b64813b41475f4f2ca2e4cc396d01b9a5887e53356bec97171d8ea4acec"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "methods": [
          "(string,string,address,address)",
          "mint(address,uint256)",
          "burn(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "basecoll",
            "src": "contracts/basecoll.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "basecore",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(BaseCore)3414",
              "contract": "basecoll",
              "src": "contracts/basecoll.sol:11"
            },
            {
              "label": "underlyingAsset",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(ERC20)692",
              "contract": "basecoll",
              "src": "contracts/basecoll.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_contract(BaseCore)3414": {
              "label": "contract BaseCore"
            },
            "t_contract(ERC20)692": {
              "label": "contract ERC20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "BasecollDeployer": {
        "src": "contracts/basecollDeployer.sol:8",
        "version": {
          "withMetadata": "6eb39ae748657ec2c75f81325a2a73d2cdd85f84da43841fb3cab88822cb7862",
          "withoutMetadata": "02910b978c1dc6e4ed408fca3956e2696bf335818937ace18264825ae0f0fda1",
          "linkedWithoutMetadata": "02910b978c1dc6e4ed408fca3956e2696bf335818937ace18264825ae0f0fda1"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "createNewbasecoll(string,string,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Math": {
        "src": "contracts/libraries/Math.sol:10",
        "version": {
          "withMetadata": "8eb24f05334341281cfdc4ce9624eb0214fec990a3e7edf35702f88dcb93527f",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "WadMath": {
        "src": "contracts/libraries/WadMath.sol:11",
        "version": {
          "withMetadata": "4469de403b749c3b4e3c35240492ef4d28235438c36c6733c57fd87b0535274f",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "SafeMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "corelibrary": {
        "src": "contracts/libraries/corelibrary.sol:14",
        "version": {
          "withMetadata": "00568b919693274dc1a19e676d322deb763e26601d0a89133885869e9816baa0",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "SafeERC20",
          "SafeMath",
          "WadMath",
          "Math"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "08295699790c674c5574539ced5280dbb163cab91795b07eb9175feafd7c5c02",
          "withoutMetadata": "7e7a4d2dea64835b308c8a359c3029d74988a4318ba8ef4240ab30513edfd448",
          "linkedWithoutMetadata": "7e7a4d2dea64835b308c8a359c3029d74988a4318ba8ef4240ab30513edfd448"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:18",
        "version": {
          "withMetadata": "3cadbdb25b0d889a6e9d9f749cc008545c861f2916c34f119ffec15ff9894211",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "f453140119aa4ab940c1c866e30faba30c70b1bf42ecb26b808dc4e355066110",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "e96c088265fb723a79b847223722ed9c8034dcd061caf652f25c4bd66d192c8e",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "BaseCore": {
        "src": "contracts/BaseCore.sol:20",
        "version": {
          "withMetadata": "3f7460a1f0cd66114fc5c61a7d4518702676ccc00edcb5ca35dfc970c17ca361",
          "withoutMetadata": "aae5642783e877e4f3469f913bf89fac4894839c51262cf5659c79136c9c1f2c",
          "linkedWithoutMetadata": "aae5642783e877e4f3469f913bf89fac4894839c51262cf5659c79136c9c1f2c"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeERC20",
          "SafeMath",
          "WadMath",
          "Math",
          "corelibrary"
        ],
        "methods": [
          "(address[5])",
          "initIBT(address,address)",
          "initNIBT(address,address,string)",
          "getIBTdata()",
          "getNIBTdata(address)",
          "setPriceOracle(address)",
          "setTokens(address,address,address)",
          "setIBTStatus(address,uint8)",
          "setNIBTStatus(address,uint8)",
          "mint(uint256)",
          "depositColl(address,uint256)",
          "burn(uint256)",
          "withdrawColl(address,uint256)",
          "getBalance(address)",
          "getTotalAvailableLiquidity(address)",
          "getTotalLiquidity(address)",
          "getUserCompoundedLiquidityBalance(address,address)",
          "getUserTankData(address,address)",
          "getUserCompoundedBorrowBalance(address)",
          "getUserAccount(address)",
          "borrowBaseusd(uint256)",
          "isAccountHealthy(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BaseCore",
            "src": "contracts/BaseCore.sol:132"
          },
          {
            "kind": "state-variable-assignment",
            "name": "reservePercent",
            "src": "contracts/BaseCore.sol:129"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "backingcoins",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_address)5_storage",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:111"
            },
            {
              "label": "baseusd",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(IBase_usd)3647",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:113"
            },
            {
              "label": "basestables",
              "offset": 0,
              "slot": "7",
              "type": "t_contract(IBase_stables)3620",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:114"
            },
            {
              "label": "backingbalances",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:116"
            },
            {
              "label": "interestbearingtank",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_struct(interestbearingtankdata)3980_storage)",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:117"
            },
            {
              "label": "noninterestbearingtank",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(noninterestbearingtankdata)3999_storage)",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:118"
            },
            {
              "label": "borrowerstank",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_struct(borrowerstankdata)3985_storage))",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:120"
            },
            {
              "label": "lenderstank",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_mapping(t_address,t_struct(lenderstankdata)3962_storage))",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:121"
            },
            {
              "label": "interestbearingtanklist",
              "offset": 0,
              "slot": "13",
              "type": "t_array(t_contract(ERC20)692)dyn_storage",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:122"
            },
            {
              "label": "noninterestbearingtanklist",
              "offset": 0,
              "slot": "14",
              "type": "t_array(t_contract(ERC20)692)dyn_storage",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:123"
            },
            {
              "label": "basecollDeployer",
              "offset": 0,
              "slot": "15",
              "type": "t_contract(BasecollDeployer)3825",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:125"
            },
            {
              "label": "priceoracle",
              "offset": 0,
              "slot": "16",
              "type": "t_contract(IDAIoraclePriceGetter)3659",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:127"
            },
            {
              "label": "reservePercent",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:129"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_address)5_storage": {
              "label": "address[5]"
            },
            "t_array(t_contract(ERC20)692)dyn_storage": {
              "label": "contract ERC20[]"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_contract(BasecollDeployer)3825": {
              "label": "contract BasecollDeployer"
            },
            "t_contract(ERC20)692": {
              "label": "contract ERC20"
            },
            "t_contract(IBase_stables)3620": {
              "label": "contract IBase_stables"
            },
            "t_contract(IBase_usd)3647": {
              "label": "contract IBase_usd"
            },
            "t_contract(IDAIoraclePriceGetter)3659": {
              "label": "contract IDAIoraclePriceGetter"
            },
            "t_contract(IPoolConfiguration)3700": {
              "label": "contract IPoolConfiguration"
            },
            "t_contract(basecoll)3788": {
              "label": "contract basecoll"
            },
            "t_enum(tankStatus)3956": {
              "label": "enum corelibrary.tankStatus",
              "members": [
                "INACTIVE",
                "ACTIVE",
                "CLOSED"
              ]
            },
            "t_mapping(t_address,t_mapping(t_address,t_struct(borrowerstankdata)3985_storage))": {
              "label": "mapping(address => mapping(address => struct corelibrary.borrowerstankdata))"
            },
            "t_mapping(t_address,t_mapping(t_address,t_struct(lenderstankdata)3962_storage))": {
              "label": "mapping(address => mapping(address => struct corelibrary.lenderstankdata))"
            },
            "t_mapping(t_address,t_struct(borrowerstankdata)3985_storage)": {
              "label": "mapping(address => struct corelibrary.borrowerstankdata)"
            },
            "t_mapping(t_address,t_struct(interestbearingtankdata)3980_storage)": {
              "label": "mapping(address => struct corelibrary.interestbearingtankdata)"
            },
            "t_mapping(t_address,t_struct(lenderstankdata)3962_storage)": {
              "label": "mapping(address => struct corelibrary.lenderstankdata)"
            },
            "t_mapping(t_address,t_struct(noninterestbearingtankdata)3999_storage)": {
              "label": "mapping(address => struct corelibrary.noninterestbearingtankdata)"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(borrowerstankdata)3985_storage": {
              "label": "struct corelibrary.borrowerstankdata",
              "members": [
                {
                  "label": "disableUseAsCollateral",
                  "type": "t_bool"
                },
                {
                  "label": "borrowShares",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(interestbearingtankdata)3980_storage": {
              "label": "struct corelibrary.interestbearingtankdata",
              "members": [
                {
                  "label": "status",
                  "type": "t_enum(tankStatus)3956"
                },
                {
                  "label": "baseusd",
                  "type": "t_contract(IBase_usd)3647"
                },
                {
                  "label": "poolConfig",
                  "type": "t_contract(IPoolConfiguration)3700"
                },
                {
                  "label": "totalBorrows",
                  "type": "t_uint256"
                },
                {
                  "label": "totalBorrowShares",
                  "type": "t_uint256"
                },
                {
                  "label": "tankReserves",
                  "type": "t_uint256"
                },
                {
                  "label": "lastUpdateTimestamp",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(lenderstankdata)3962_storage": {
              "label": "struct corelibrary.lenderstankdata",
              "members": [
                {
                  "label": "borrowShares",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(noninterestbearingtankdata)3999_storage": {
              "label": "struct corelibrary.noninterestbearingtankdata",
              "members": [
                {
                  "label": "status",
                  "type": "t_enum(tankStatus)3956"
                },
                {
                  "label": "baseColl",
                  "type": "t_contract(basecoll)3788"
                },
                {
                  "label": "poolConfig",
                  "type": "t_contract(IPoolConfiguration)3700"
                },
                {
                  "label": "lastUpdateTimestamp",
                  "type": "t_uint256"
                },
                {
                  "label": "usdpair",
                  "type": "t_string_storage"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IBaseCore": {
        "src": "contracts/Interface/IBaseCore.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(uint256,address)",
          "redeem(uint256,address)",
          "harvest()",
          "earned()",
          "dusdToUsd(uint256,bool)",
          "peaks(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IBase_stables": {
        "src": "contracts/Interface/IBase_stables.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)",
          "burn(address,uint256)",
          "totalSupply()",
          "burnForSelf(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IBase_usd": {
        "src": "contracts/Interface/IBase_usd.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)",
          "burn(address,uint256)",
          "totalSupply()",
          "burnForSelf(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IDAIoraclePriceGetter": {
        "src": "contracts/Interface/IDAIoraclePriceGetter.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getPrice(string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPoolConfiguration": {
        "src": "contracts/Interface/IPoolConfiguration.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getOptimalUtilizationRate()",
          "getBaseBorrowRate()",
          "getLiquidationBonusPercent()",
          "getCollateralPercent()",
          "calculateInterestRate(uint256,uint256)",
          "getUtilizationRate(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "basecoll": {
        "src": "contracts/basecoll.sol:8",
        "version": {
          "withMetadata": "d3b0314edf7063e71ffd6c3d85846756719ffffd1896397489fb28790ee073a7",
          "withoutMetadata": "fd8a7b64813b41475f4f2ca2e4cc396d01b9a5887e53356bec97171d8ea4acec",
          "linkedWithoutMetadata": "fd8a7b64813b41475f4f2ca2e4cc396d01b9a5887e53356bec97171d8ea4acec"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "methods": [
          "(string,string,address,address)",
          "mint(address,uint256)",
          "burn(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "basecoll",
            "src": "contracts/basecoll.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "basecore",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(BaseCore)3544",
              "contract": "basecoll",
              "src": "contracts/basecoll.sol:11"
            },
            {
              "label": "underlyingAsset",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(ERC20)692",
              "contract": "basecoll",
              "src": "contracts/basecoll.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_contract(BaseCore)3544": {
              "label": "contract BaseCore"
            },
            "t_contract(ERC20)692": {
              "label": "contract ERC20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "BasecollDeployer": {
        "src": "contracts/basecollDeployer.sol:8",
        "version": {
          "withMetadata": "aa22d305820c7fc51bddc4f2204993497d35c8dbd684bd27ab70365f6fdea2c5",
          "withoutMetadata": "35cd121d23cfdf739b4389959c54c2732d33e5d3483e44fe5086f641c5c3f68b",
          "linkedWithoutMetadata": "35cd121d23cfdf739b4389959c54c2732d33e5d3483e44fe5086f641c5c3f68b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "createNewbasecoll(string,string,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Math": {
        "src": "contracts/libraries/Math.sol:10",
        "version": {
          "withMetadata": "8eb24f05334341281cfdc4ce9624eb0214fec990a3e7edf35702f88dcb93527f",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "WadMath": {
        "src": "contracts/libraries/WadMath.sol:11",
        "version": {
          "withMetadata": "4469de403b749c3b4e3c35240492ef4d28235438c36c6733c57fd87b0535274f",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "SafeMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "corelibrary": {
        "src": "contracts/libraries/corelibrary.sol:14",
        "version": {
          "withMetadata": "ebc455b183a51c3004a15502c95c434caec0a3cc723a55371a0efe76f926a3b4",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "SafeERC20",
          "SafeMath",
          "WadMath",
          "Math"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "08295699790c674c5574539ced5280dbb163cab91795b07eb9175feafd7c5c02",
          "withoutMetadata": "7e7a4d2dea64835b308c8a359c3029d74988a4318ba8ef4240ab30513edfd448",
          "linkedWithoutMetadata": "7e7a4d2dea64835b308c8a359c3029d74988a4318ba8ef4240ab30513edfd448"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:18",
        "version": {
          "withMetadata": "3cadbdb25b0d889a6e9d9f749cc008545c861f2916c34f119ffec15ff9894211",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "f453140119aa4ab940c1c866e30faba30c70b1bf42ecb26b808dc4e355066110",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "e96c088265fb723a79b847223722ed9c8034dcd061caf652f25c4bd66d192c8e",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "BaseCore": {
        "src": "contracts/BaseCore.sol:20",
        "version": {
          "withMetadata": "3c550f6cd2e69534a05db0c638f7f77e736add3eacee814d766b6cd72077b32d",
          "withoutMetadata": "0ee228067d6a5312b1cde271f55aeca3ade715a26013010f2a244ac5f4e2db43",
          "linkedWithoutMetadata": "0ee228067d6a5312b1cde271f55aeca3ade715a26013010f2a244ac5f4e2db43"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeERC20",
          "SafeMath",
          "WadMath",
          "Math",
          "corelibrary"
        ],
        "methods": [
          "(address[5])",
          "initIBT(address,address)",
          "initNIBT(address,address,string)",
          "getIBTdata()",
          "getNIBTdata(address)",
          "setPriceOracle(address)",
          "setTokens(address,address,address)",
          "setIBTStatus(address,uint8)",
          "setNIBTStatus(address,uint8)",
          "mint(uint256)",
          "depositColl(address,uint256)",
          "burn(uint256)",
          "withdrawColl(address,uint256)",
          "getBalance(address)",
          "getTotalAvailableLiquidity(address)",
          "getTotalLiquidity(address)",
          "getUserCompoundedLiquidityBalance(address,address)",
          "getUserTankData(address,address)",
          "getUserCompoundedBorrowBalance(address)",
          "getUserAccount(address)",
          "isAccountHealthy(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BaseCore",
            "src": "contracts/BaseCore.sol:132"
          },
          {
            "kind": "state-variable-assignment",
            "name": "reservePercent",
            "src": "contracts/BaseCore.sol:129"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "backingcoins",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_address)5_storage",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:111"
            },
            {
              "label": "baseusd",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(IBase_usd)3475",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:113"
            },
            {
              "label": "basestables",
              "offset": 0,
              "slot": "7",
              "type": "t_contract(IBase_stables)3448",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:114"
            },
            {
              "label": "backingbalances",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:116"
            },
            {
              "label": "interestbearingtank",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_struct(interestbearingtankdata)3808_storage)",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:117"
            },
            {
              "label": "noninterestbearingtank",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(noninterestbearingtankdata)3827_storage)",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:118"
            },
            {
              "label": "borrowerstank",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_struct(borrowerstankdata)3813_storage))",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:120"
            },
            {
              "label": "lenderstank",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_mapping(t_address,t_struct(lenderstankdata)3790_storage))",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:121"
            },
            {
              "label": "interestbearingtanklist",
              "offset": 0,
              "slot": "13",
              "type": "t_array(t_contract(ERC20)692)dyn_storage",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:122"
            },
            {
              "label": "noninterestbearingtanklist",
              "offset": 0,
              "slot": "14",
              "type": "t_array(t_contract(ERC20)692)dyn_storage",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:123"
            },
            {
              "label": "basecollDeployer",
              "offset": 0,
              "slot": "15",
              "type": "t_contract(BasecollDeployer)3653",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:125"
            },
            {
              "label": "priceoracle",
              "offset": 0,
              "slot": "16",
              "type": "t_contract(IDAIoraclePriceGetter)3487",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:127"
            },
            {
              "label": "reservePercent",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:129"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_address)5_storage": {
              "label": "address[5]"
            },
            "t_array(t_contract(ERC20)692)dyn_storage": {
              "label": "contract ERC20[]"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_contract(BasecollDeployer)3653": {
              "label": "contract BasecollDeployer"
            },
            "t_contract(ERC20)692": {
              "label": "contract ERC20"
            },
            "t_contract(IBase_stables)3448": {
              "label": "contract IBase_stables"
            },
            "t_contract(IBase_usd)3475": {
              "label": "contract IBase_usd"
            },
            "t_contract(IDAIoraclePriceGetter)3487": {
              "label": "contract IDAIoraclePriceGetter"
            },
            "t_contract(IPoolConfiguration)3528": {
              "label": "contract IPoolConfiguration"
            },
            "t_contract(basecoll)3616": {
              "label": "contract basecoll"
            },
            "t_enum(tankStatus)3784": {
              "label": "enum corelibrary.tankStatus",
              "members": [
                "INACTIVE",
                "ACTIVE",
                "CLOSED"
              ]
            },
            "t_mapping(t_address,t_mapping(t_address,t_struct(borrowerstankdata)3813_storage))": {
              "label": "mapping(address => mapping(address => struct corelibrary.borrowerstankdata))"
            },
            "t_mapping(t_address,t_mapping(t_address,t_struct(lenderstankdata)3790_storage))": {
              "label": "mapping(address => mapping(address => struct corelibrary.lenderstankdata))"
            },
            "t_mapping(t_address,t_struct(borrowerstankdata)3813_storage)": {
              "label": "mapping(address => struct corelibrary.borrowerstankdata)"
            },
            "t_mapping(t_address,t_struct(interestbearingtankdata)3808_storage)": {
              "label": "mapping(address => struct corelibrary.interestbearingtankdata)"
            },
            "t_mapping(t_address,t_struct(lenderstankdata)3790_storage)": {
              "label": "mapping(address => struct corelibrary.lenderstankdata)"
            },
            "t_mapping(t_address,t_struct(noninterestbearingtankdata)3827_storage)": {
              "label": "mapping(address => struct corelibrary.noninterestbearingtankdata)"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(borrowerstankdata)3813_storage": {
              "label": "struct corelibrary.borrowerstankdata",
              "members": [
                {
                  "label": "disableUseAsCollateral",
                  "type": "t_bool"
                },
                {
                  "label": "borrowShares",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(interestbearingtankdata)3808_storage": {
              "label": "struct corelibrary.interestbearingtankdata",
              "members": [
                {
                  "label": "status",
                  "type": "t_enum(tankStatus)3784"
                },
                {
                  "label": "baseusd",
                  "type": "t_contract(IBase_usd)3475"
                },
                {
                  "label": "poolConfig",
                  "type": "t_contract(IPoolConfiguration)3528"
                },
                {
                  "label": "totalBorrows",
                  "type": "t_uint256"
                },
                {
                  "label": "totalBorrowShares",
                  "type": "t_uint256"
                },
                {
                  "label": "tankReserves",
                  "type": "t_uint256"
                },
                {
                  "label": "lastUpdateTimestamp",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(lenderstankdata)3790_storage": {
              "label": "struct corelibrary.lenderstankdata",
              "members": [
                {
                  "label": "borrowShares",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(noninterestbearingtankdata)3827_storage": {
              "label": "struct corelibrary.noninterestbearingtankdata",
              "members": [
                {
                  "label": "status",
                  "type": "t_enum(tankStatus)3784"
                },
                {
                  "label": "baseColl",
                  "type": "t_contract(basecoll)3616"
                },
                {
                  "label": "poolConfig",
                  "type": "t_contract(IPoolConfiguration)3528"
                },
                {
                  "label": "lastUpdateTimestamp",
                  "type": "t_uint256"
                },
                {
                  "label": "usdpair",
                  "type": "t_string_storage"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IBaseCore": {
        "src": "contracts/Interface/IBaseCore.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(uint256,address)",
          "redeem(uint256,address)",
          "harvest()",
          "earned()",
          "dusdToUsd(uint256,bool)",
          "peaks(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IBase_stables": {
        "src": "contracts/Interface/IBase_stables.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)",
          "burn(address,uint256)",
          "totalSupply()",
          "burnForSelf(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IBase_usd": {
        "src": "contracts/Interface/IBase_usd.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)",
          "burn(address,uint256)",
          "totalSupply()",
          "burnForSelf(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IDAIoraclePriceGetter": {
        "src": "contracts/Interface/IDAIoraclePriceGetter.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getPrice(string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPoolConfiguration": {
        "src": "contracts/Interface/IPoolConfiguration.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getOptimalUtilizationRate()",
          "getBaseBorrowRate()",
          "getLiquidationBonusPercent()",
          "getCollateralPercent()",
          "calculateInterestRate(uint256,uint256)",
          "getUtilizationRate(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "basecoll": {
        "src": "contracts/basecoll.sol:8",
        "version": {
          "withMetadata": "0e0bb0bc410f8c6b05f7f6e906cd98cc21a847bde8417df59e6d236319b0a354",
          "withoutMetadata": "fd8a7b64813b41475f4f2ca2e4cc396d01b9a5887e53356bec97171d8ea4acec",
          "linkedWithoutMetadata": "fd8a7b64813b41475f4f2ca2e4cc396d01b9a5887e53356bec97171d8ea4acec"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "methods": [
          "(string,string,address,address)",
          "mint(address,uint256)",
          "burn(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "basecoll",
            "src": "contracts/basecoll.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "basecore",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(BaseCore)3372",
              "contract": "basecoll",
              "src": "contracts/basecoll.sol:11"
            },
            {
              "label": "underlyingAsset",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(ERC20)692",
              "contract": "basecoll",
              "src": "contracts/basecoll.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_contract(BaseCore)3372": {
              "label": "contract BaseCore"
            },
            "t_contract(ERC20)692": {
              "label": "contract ERC20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "BasecollDeployer": {
        "src": "contracts/basecollDeployer.sol:8",
        "version": {
          "withMetadata": "db0bad615236b17487dc0b937e659651c6290450c44a46392419b9f17da708c8",
          "withoutMetadata": "3cebb747ea3fcd8bbc3f8bffa19d0ac8081befd4c4993e5479ab66a5d20af1a7",
          "linkedWithoutMetadata": "3cebb747ea3fcd8bbc3f8bffa19d0ac8081befd4c4993e5479ab66a5d20af1a7"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "createNewbasecoll(string,string,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Math": {
        "src": "contracts/libraries/Math.sol:10",
        "version": {
          "withMetadata": "8eb24f05334341281cfdc4ce9624eb0214fec990a3e7edf35702f88dcb93527f",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "WadMath": {
        "src": "contracts/libraries/WadMath.sol:11",
        "version": {
          "withMetadata": "4469de403b749c3b4e3c35240492ef4d28235438c36c6733c57fd87b0535274f",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "SafeMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "corelibrary": {
        "src": "contracts/libraries/corelibrary.sol:14",
        "version": {
          "withMetadata": "b4556573fb09cfca63c30a210a35dbd9d6828fb58fbace9cdc9a8483d340c306",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "SafeERC20",
          "SafeMath",
          "WadMath",
          "Math"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "08295699790c674c5574539ced5280dbb163cab91795b07eb9175feafd7c5c02",
          "withoutMetadata": "7e7a4d2dea64835b308c8a359c3029d74988a4318ba8ef4240ab30513edfd448",
          "linkedWithoutMetadata": "7e7a4d2dea64835b308c8a359c3029d74988a4318ba8ef4240ab30513edfd448"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:18",
        "version": {
          "withMetadata": "3cadbdb25b0d889a6e9d9f749cc008545c861f2916c34f119ffec15ff9894211",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "f453140119aa4ab940c1c866e30faba30c70b1bf42ecb26b808dc4e355066110",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "e96c088265fb723a79b847223722ed9c8034dcd061caf652f25c4bd66d192c8e",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "BaseCore": {
        "src": "contracts/BaseCore.sol:20",
        "version": {
          "withMetadata": "c2886aa6cf854a9afbd5707eae173a5eb30b9a8516f89e0b4d69449d6452c484",
          "withoutMetadata": "102b020529fb564dfcf2d0d9fd44b3809a2dc1948a4ae86d7df205291c20e374",
          "linkedWithoutMetadata": "102b020529fb564dfcf2d0d9fd44b3809a2dc1948a4ae86d7df205291c20e374"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeERC20",
          "SafeMath",
          "WadMath",
          "Math",
          "corelibrary"
        ],
        "methods": [
          "(address[5])",
          "initIBT(address,address)",
          "initNIBT(address,address,string)",
          "getIBTdata()",
          "getNIBTdata(address)",
          "setPriceOracle(address)",
          "setTokens(address,address,address)",
          "setIBTStatus(address,uint8)",
          "setNIBTStatus(address,uint8)",
          "getTotalAvailableLiquidity(address)",
          "getTotalLiquidity(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BaseCore",
            "src": "contracts/BaseCore.sol:132"
          },
          {
            "kind": "state-variable-assignment",
            "name": "reservePercent",
            "src": "contracts/BaseCore.sol:129"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "backingcoins",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_address)5_storage",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:111"
            },
            {
              "label": "baseusd",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(IBase_usd)2569",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:113"
            },
            {
              "label": "basestables",
              "offset": 0,
              "slot": "7",
              "type": "t_contract(IBase_stables)2542",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:114"
            },
            {
              "label": "backingbalances",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:116"
            },
            {
              "label": "interestbearingtank",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_struct(interestbearingtankdata)2902_storage)",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:117"
            },
            {
              "label": "noninterestbearingtank",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(noninterestbearingtankdata)2921_storage)",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:118"
            },
            {
              "label": "borrowerstank",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_struct(borrowerstankdata)2907_storage))",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:120"
            },
            {
              "label": "lenderstank",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_mapping(t_address,t_struct(lenderstankdata)2884_storage))",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:121"
            },
            {
              "label": "interestbearingtanklist",
              "offset": 0,
              "slot": "13",
              "type": "t_array(t_contract(ERC20)692)dyn_storage",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:122"
            },
            {
              "label": "noninterestbearingtanklist",
              "offset": 0,
              "slot": "14",
              "type": "t_array(t_contract(ERC20)692)dyn_storage",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:123"
            },
            {
              "label": "basecollDeployer",
              "offset": 0,
              "slot": "15",
              "type": "t_contract(BasecollDeployer)2747",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:125"
            },
            {
              "label": "priceoracle",
              "offset": 0,
              "slot": "16",
              "type": "t_contract(IDAIoraclePriceGetter)2581",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:127"
            },
            {
              "label": "reservePercent",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:129"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_address)5_storage": {
              "label": "address[5]"
            },
            "t_array(t_contract(ERC20)692)dyn_storage": {
              "label": "contract ERC20[]"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_contract(BasecollDeployer)2747": {
              "label": "contract BasecollDeployer"
            },
            "t_contract(ERC20)692": {
              "label": "contract ERC20"
            },
            "t_contract(IBase_stables)2542": {
              "label": "contract IBase_stables"
            },
            "t_contract(IBase_usd)2569": {
              "label": "contract IBase_usd"
            },
            "t_contract(IDAIoraclePriceGetter)2581": {
              "label": "contract IDAIoraclePriceGetter"
            },
            "t_contract(IPoolConfiguration)2622": {
              "label": "contract IPoolConfiguration"
            },
            "t_contract(basecoll)2710": {
              "label": "contract basecoll"
            },
            "t_enum(tankStatus)2878": {
              "label": "enum corelibrary.tankStatus",
              "members": [
                "INACTIVE",
                "ACTIVE",
                "CLOSED"
              ]
            },
            "t_mapping(t_address,t_mapping(t_address,t_struct(borrowerstankdata)2907_storage))": {
              "label": "mapping(address => mapping(address => struct corelibrary.borrowerstankdata))"
            },
            "t_mapping(t_address,t_mapping(t_address,t_struct(lenderstankdata)2884_storage))": {
              "label": "mapping(address => mapping(address => struct corelibrary.lenderstankdata))"
            },
            "t_mapping(t_address,t_struct(borrowerstankdata)2907_storage)": {
              "label": "mapping(address => struct corelibrary.borrowerstankdata)"
            },
            "t_mapping(t_address,t_struct(interestbearingtankdata)2902_storage)": {
              "label": "mapping(address => struct corelibrary.interestbearingtankdata)"
            },
            "t_mapping(t_address,t_struct(lenderstankdata)2884_storage)": {
              "label": "mapping(address => struct corelibrary.lenderstankdata)"
            },
            "t_mapping(t_address,t_struct(noninterestbearingtankdata)2921_storage)": {
              "label": "mapping(address => struct corelibrary.noninterestbearingtankdata)"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(borrowerstankdata)2907_storage": {
              "label": "struct corelibrary.borrowerstankdata",
              "members": [
                {
                  "label": "disableUseAsCollateral",
                  "type": "t_bool"
                },
                {
                  "label": "borrowShares",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(interestbearingtankdata)2902_storage": {
              "label": "struct corelibrary.interestbearingtankdata",
              "members": [
                {
                  "label": "status",
                  "type": "t_enum(tankStatus)2878"
                },
                {
                  "label": "baseusd",
                  "type": "t_contract(IBase_usd)2569"
                },
                {
                  "label": "poolConfig",
                  "type": "t_contract(IPoolConfiguration)2622"
                },
                {
                  "label": "totalBorrows",
                  "type": "t_uint256"
                },
                {
                  "label": "totalBorrowShares",
                  "type": "t_uint256"
                },
                {
                  "label": "tankReserves",
                  "type": "t_uint256"
                },
                {
                  "label": "lastUpdateTimestamp",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(lenderstankdata)2884_storage": {
              "label": "struct corelibrary.lenderstankdata",
              "members": [
                {
                  "label": "borrowShares",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(noninterestbearingtankdata)2921_storage": {
              "label": "struct corelibrary.noninterestbearingtankdata",
              "members": [
                {
                  "label": "status",
                  "type": "t_enum(tankStatus)2878"
                },
                {
                  "label": "baseColl",
                  "type": "t_contract(basecoll)2710"
                },
                {
                  "label": "poolConfig",
                  "type": "t_contract(IPoolConfiguration)2622"
                },
                {
                  "label": "lastUpdateTimestamp",
                  "type": "t_uint256"
                },
                {
                  "label": "usdpair",
                  "type": "t_string_storage"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IBaseCore": {
        "src": "contracts/Interface/IBaseCore.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(uint256,address)",
          "redeem(uint256,address)",
          "harvest()",
          "earned()",
          "dusdToUsd(uint256,bool)",
          "peaks(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IBase_stables": {
        "src": "contracts/Interface/IBase_stables.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)",
          "burn(address,uint256)",
          "totalSupply()",
          "burnForSelf(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IBase_usd": {
        "src": "contracts/Interface/IBase_usd.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)",
          "burn(address,uint256)",
          "totalSupply()",
          "burnForSelf(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IDAIoraclePriceGetter": {
        "src": "contracts/Interface/IDAIoraclePriceGetter.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getPrice(string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPoolConfiguration": {
        "src": "contracts/Interface/IPoolConfiguration.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getOptimalUtilizationRate()",
          "getBaseBorrowRate()",
          "getLiquidationBonusPercent()",
          "getCollateralPercent()",
          "calculateInterestRate(uint256,uint256)",
          "getUtilizationRate(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "basecoll": {
        "src": "contracts/basecoll.sol:8",
        "version": {
          "withMetadata": "acdb3dd0c168f45fa7bb8cbcbbe8fd2b2ba5a8cea18260294d3b70a1497622c7",
          "withoutMetadata": "fd8a7b64813b41475f4f2ca2e4cc396d01b9a5887e53356bec97171d8ea4acec",
          "linkedWithoutMetadata": "fd8a7b64813b41475f4f2ca2e4cc396d01b9a5887e53356bec97171d8ea4acec"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "methods": [
          "(string,string,address,address)",
          "mint(address,uint256)",
          "burn(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "basecoll",
            "src": "contracts/basecoll.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "basecore",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(BaseCore)2466",
              "contract": "basecoll",
              "src": "contracts/basecoll.sol:11"
            },
            {
              "label": "underlyingAsset",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(ERC20)692",
              "contract": "basecoll",
              "src": "contracts/basecoll.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_contract(BaseCore)2466": {
              "label": "contract BaseCore"
            },
            "t_contract(ERC20)692": {
              "label": "contract ERC20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "BasecollDeployer": {
        "src": "contracts/basecollDeployer.sol:8",
        "version": {
          "withMetadata": "56bbd4a44760c9f27cd4b616c4e660ddd40b76d80c78b46f66e934d6578debd2",
          "withoutMetadata": "8afa0c52c61c7c4b5435532ecd551b67967df0a38d92c70727a3ccfdf595b806",
          "linkedWithoutMetadata": "8afa0c52c61c7c4b5435532ecd551b67967df0a38d92c70727a3ccfdf595b806"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "createNewbasecoll(string,string,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Math": {
        "src": "contracts/libraries/Math.sol:10",
        "version": {
          "withMetadata": "8eb24f05334341281cfdc4ce9624eb0214fec990a3e7edf35702f88dcb93527f",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "WadMath": {
        "src": "contracts/libraries/WadMath.sol:11",
        "version": {
          "withMetadata": "4469de403b749c3b4e3c35240492ef4d28235438c36c6733c57fd87b0535274f",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "SafeMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "corelibrary": {
        "src": "contracts/libraries/corelibrary.sol:14",
        "version": {
          "withMetadata": "f48e6544d9015351e3c4e4bd5848c2fc846b2d95580831183808b7158191f137",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "SafeERC20",
          "SafeMath",
          "WadMath",
          "Math"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "08295699790c674c5574539ced5280dbb163cab91795b07eb9175feafd7c5c02",
          "withoutMetadata": "7e7a4d2dea64835b308c8a359c3029d74988a4318ba8ef4240ab30513edfd448",
          "linkedWithoutMetadata": "7e7a4d2dea64835b308c8a359c3029d74988a4318ba8ef4240ab30513edfd448"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:18",
        "version": {
          "withMetadata": "3cadbdb25b0d889a6e9d9f749cc008545c861f2916c34f119ffec15ff9894211",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "f453140119aa4ab940c1c866e30faba30c70b1bf42ecb26b808dc4e355066110",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "e96c088265fb723a79b847223722ed9c8034dcd061caf652f25c4bd66d192c8e",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "BaseCore": {
        "src": "contracts/BaseCore.sol:20",
        "version": {
          "withMetadata": "cea9728080c601eb94dc63cb36b1a2892c04800228b616bae8c602fc219fe806",
          "withoutMetadata": "8e20b3de9157b650c4de02c086c6bb5fb0abba599410d63b69b1e2dd642481e9",
          "linkedWithoutMetadata": "8e20b3de9157b650c4de02c086c6bb5fb0abba599410d63b69b1e2dd642481e9"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeERC20",
          "SafeMath",
          "WadMath",
          "Math",
          "corelibrary"
        ],
        "methods": [
          "(address[5])",
          "initIBT(address,address)",
          "initNIBT(address,address,string)",
          "getIBTdata()",
          "getNIBTdata(address)",
          "getTotalAvailableLiquidity(address)",
          "getTotalLiquidity(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BaseCore",
            "src": "contracts/BaseCore.sol:132"
          },
          {
            "kind": "state-variable-assignment",
            "name": "reservePercent",
            "src": "contracts/BaseCore.sol:129"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "backingcoins",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_address)5_storage",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:111"
            },
            {
              "label": "baseusd",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(IBase_usd)2460",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:113"
            },
            {
              "label": "basestables",
              "offset": 0,
              "slot": "7",
              "type": "t_contract(IBase_stables)2433",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:114"
            },
            {
              "label": "backingbalances",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:116"
            },
            {
              "label": "interestbearingtank",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_struct(interestbearingtankdata)2793_storage)",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:117"
            },
            {
              "label": "noninterestbearingtank",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(noninterestbearingtankdata)2812_storage)",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:118"
            },
            {
              "label": "borrowerstank",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_struct(borrowerstankdata)2798_storage))",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:120"
            },
            {
              "label": "lenderstank",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_mapping(t_address,t_struct(lenderstankdata)2775_storage))",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:121"
            },
            {
              "label": "interestbearingtanklist",
              "offset": 0,
              "slot": "13",
              "type": "t_array(t_contract(ERC20)692)dyn_storage",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:122"
            },
            {
              "label": "noninterestbearingtanklist",
              "offset": 0,
              "slot": "14",
              "type": "t_array(t_contract(ERC20)692)dyn_storage",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:123"
            },
            {
              "label": "basecollDeployer",
              "offset": 0,
              "slot": "15",
              "type": "t_contract(BasecollDeployer)2638",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:125"
            },
            {
              "label": "priceoracle",
              "offset": 0,
              "slot": "16",
              "type": "t_contract(IDAIoraclePriceGetter)2472",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:127"
            },
            {
              "label": "reservePercent",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:129"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_address)5_storage": {
              "label": "address[5]"
            },
            "t_array(t_contract(ERC20)692)dyn_storage": {
              "label": "contract ERC20[]"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_contract(BasecollDeployer)2638": {
              "label": "contract BasecollDeployer"
            },
            "t_contract(ERC20)692": {
              "label": "contract ERC20"
            },
            "t_contract(IBase_stables)2433": {
              "label": "contract IBase_stables"
            },
            "t_contract(IBase_usd)2460": {
              "label": "contract IBase_usd"
            },
            "t_contract(IDAIoraclePriceGetter)2472": {
              "label": "contract IDAIoraclePriceGetter"
            },
            "t_contract(IPoolConfiguration)2513": {
              "label": "contract IPoolConfiguration"
            },
            "t_contract(basecoll)2601": {
              "label": "contract basecoll"
            },
            "t_enum(tankStatus)2769": {
              "label": "enum corelibrary.tankStatus",
              "members": [
                "INACTIVE",
                "ACTIVE",
                "CLOSED"
              ]
            },
            "t_mapping(t_address,t_mapping(t_address,t_struct(borrowerstankdata)2798_storage))": {
              "label": "mapping(address => mapping(address => struct corelibrary.borrowerstankdata))"
            },
            "t_mapping(t_address,t_mapping(t_address,t_struct(lenderstankdata)2775_storage))": {
              "label": "mapping(address => mapping(address => struct corelibrary.lenderstankdata))"
            },
            "t_mapping(t_address,t_struct(borrowerstankdata)2798_storage)": {
              "label": "mapping(address => struct corelibrary.borrowerstankdata)"
            },
            "t_mapping(t_address,t_struct(interestbearingtankdata)2793_storage)": {
              "label": "mapping(address => struct corelibrary.interestbearingtankdata)"
            },
            "t_mapping(t_address,t_struct(lenderstankdata)2775_storage)": {
              "label": "mapping(address => struct corelibrary.lenderstankdata)"
            },
            "t_mapping(t_address,t_struct(noninterestbearingtankdata)2812_storage)": {
              "label": "mapping(address => struct corelibrary.noninterestbearingtankdata)"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(borrowerstankdata)2798_storage": {
              "label": "struct corelibrary.borrowerstankdata",
              "members": [
                {
                  "label": "disableUseAsCollateral",
                  "type": "t_bool"
                },
                {
                  "label": "borrowShares",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(interestbearingtankdata)2793_storage": {
              "label": "struct corelibrary.interestbearingtankdata",
              "members": [
                {
                  "label": "status",
                  "type": "t_enum(tankStatus)2769"
                },
                {
                  "label": "baseusd",
                  "type": "t_contract(IBase_usd)2460"
                },
                {
                  "label": "poolConfig",
                  "type": "t_contract(IPoolConfiguration)2513"
                },
                {
                  "label": "totalBorrows",
                  "type": "t_uint256"
                },
                {
                  "label": "totalBorrowShares",
                  "type": "t_uint256"
                },
                {
                  "label": "tankReserves",
                  "type": "t_uint256"
                },
                {
                  "label": "lastUpdateTimestamp",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(lenderstankdata)2775_storage": {
              "label": "struct corelibrary.lenderstankdata",
              "members": [
                {
                  "label": "borrowShares",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(noninterestbearingtankdata)2812_storage": {
              "label": "struct corelibrary.noninterestbearingtankdata",
              "members": [
                {
                  "label": "status",
                  "type": "t_enum(tankStatus)2769"
                },
                {
                  "label": "baseColl",
                  "type": "t_contract(basecoll)2601"
                },
                {
                  "label": "poolConfig",
                  "type": "t_contract(IPoolConfiguration)2513"
                },
                {
                  "label": "lastUpdateTimestamp",
                  "type": "t_uint256"
                },
                {
                  "label": "usdpair",
                  "type": "t_string_storage"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IBaseCore": {
        "src": "contracts/Interface/IBaseCore.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(uint256,address)",
          "redeem(uint256,address)",
          "harvest()",
          "earned()",
          "dusdToUsd(uint256,bool)",
          "peaks(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IBase_stables": {
        "src": "contracts/Interface/IBase_stables.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)",
          "burn(address,uint256)",
          "totalSupply()",
          "burnForSelf(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IBase_usd": {
        "src": "contracts/Interface/IBase_usd.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)",
          "burn(address,uint256)",
          "totalSupply()",
          "burnForSelf(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IDAIoraclePriceGetter": {
        "src": "contracts/Interface/IDAIoraclePriceGetter.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getPrice(string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPoolConfiguration": {
        "src": "contracts/Interface/IPoolConfiguration.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getOptimalUtilizationRate()",
          "getBaseBorrowRate()",
          "getLiquidationBonusPercent()",
          "getCollateralPercent()",
          "calculateInterestRate(uint256,uint256)",
          "getUtilizationRate(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "basecoll": {
        "src": "contracts/basecoll.sol:8",
        "version": {
          "withMetadata": "2d6c486386031ce17812c50216643e5eb96aaa805c0aaed39ef1b873f1842609",
          "withoutMetadata": "fd8a7b64813b41475f4f2ca2e4cc396d01b9a5887e53356bec97171d8ea4acec",
          "linkedWithoutMetadata": "fd8a7b64813b41475f4f2ca2e4cc396d01b9a5887e53356bec97171d8ea4acec"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "methods": [
          "(string,string,address,address)",
          "mint(address,uint256)",
          "burn(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "basecoll",
            "src": "contracts/basecoll.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "basecore",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(BaseCore)2357",
              "contract": "basecoll",
              "src": "contracts/basecoll.sol:11"
            },
            {
              "label": "underlyingAsset",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(ERC20)692",
              "contract": "basecoll",
              "src": "contracts/basecoll.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_contract(BaseCore)2357": {
              "label": "contract BaseCore"
            },
            "t_contract(ERC20)692": {
              "label": "contract ERC20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "BasecollDeployer": {
        "src": "contracts/basecollDeployer.sol:8",
        "version": {
          "withMetadata": "496812a841d0066195cf7afd45dd5bfa9294021964ed200c3f52ae762ee83b3e",
          "withoutMetadata": "fb6e142e2e33a67ba74503edb146abcb900ec14d4036c2c373276d9791b5935e",
          "linkedWithoutMetadata": "fb6e142e2e33a67ba74503edb146abcb900ec14d4036c2c373276d9791b5935e"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "createNewbasecoll(string,string,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Math": {
        "src": "contracts/libraries/Math.sol:10",
        "version": {
          "withMetadata": "8eb24f05334341281cfdc4ce9624eb0214fec990a3e7edf35702f88dcb93527f",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "WadMath": {
        "src": "contracts/libraries/WadMath.sol:11",
        "version": {
          "withMetadata": "4469de403b749c3b4e3c35240492ef4d28235438c36c6733c57fd87b0535274f",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "SafeMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "corelibrary": {
        "src": "contracts/libraries/corelibrary.sol:14",
        "version": {
          "withMetadata": "18c4b53c3a16b750f7a8f7cb501e9d32b8b74e1de68488aae118c6119647d499",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "SafeERC20",
          "SafeMath",
          "WadMath",
          "Math"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "08295699790c674c5574539ced5280dbb163cab91795b07eb9175feafd7c5c02",
          "withoutMetadata": "7e7a4d2dea64835b308c8a359c3029d74988a4318ba8ef4240ab30513edfd448",
          "linkedWithoutMetadata": "7e7a4d2dea64835b308c8a359c3029d74988a4318ba8ef4240ab30513edfd448"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:18",
        "version": {
          "withMetadata": "3cadbdb25b0d889a6e9d9f749cc008545c861f2916c34f119ffec15ff9894211",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "f453140119aa4ab940c1c866e30faba30c70b1bf42ecb26b808dc4e355066110",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "e96c088265fb723a79b847223722ed9c8034dcd061caf652f25c4bd66d192c8e",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "BaseCore": {
        "src": "contracts/BaseCore.sol:20",
        "version": {
          "withMetadata": "f6bed01c78321e0aeabd7b670e78ebc80f3f4781310e62403ff76d62ef02e90d",
          "withoutMetadata": "d483724ec8db6f72a1b8edc4e9670ed273527d14113cfa0ad955f9b44bf69c6e",
          "linkedWithoutMetadata": "d483724ec8db6f72a1b8edc4e9670ed273527d14113cfa0ad955f9b44bf69c6e"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeERC20",
          "SafeMath",
          "WadMath",
          "Math",
          "corelibrary"
        ],
        "methods": [
          "(address[5])",
          "initIBT(address,address)",
          "initNIBT(address,address,string)",
          "getTotalAvailableLiquidity(address)",
          "getTotalLiquidity(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BaseCore",
            "src": "contracts/BaseCore.sol:132"
          },
          {
            "kind": "state-variable-assignment",
            "name": "reservePercent",
            "src": "contracts/BaseCore.sol:129"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "backingcoins",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_address)5_storage",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:111"
            },
            {
              "label": "baseusd",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(IBase_usd)2308",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:113"
            },
            {
              "label": "basestables",
              "offset": 0,
              "slot": "7",
              "type": "t_contract(IBase_stables)2281",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:114"
            },
            {
              "label": "backingbalances",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:116"
            },
            {
              "label": "interestbearingtank",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_struct(interestbearingtankdata)2641_storage)",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:117"
            },
            {
              "label": "noninterestbearingtank",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(noninterestbearingtankdata)2660_storage)",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:118"
            },
            {
              "label": "borrowerstank",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_struct(borrowerstankdata)2646_storage))",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:120"
            },
            {
              "label": "lenderstank",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_mapping(t_address,t_struct(lenderstankdata)2623_storage))",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:121"
            },
            {
              "label": "interestbearingtanklist",
              "offset": 0,
              "slot": "13",
              "type": "t_array(t_contract(ERC20)692)dyn_storage",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:122"
            },
            {
              "label": "noninterestbearingtanklist",
              "offset": 0,
              "slot": "14",
              "type": "t_array(t_contract(ERC20)692)dyn_storage",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:123"
            },
            {
              "label": "basecollDeployer",
              "offset": 0,
              "slot": "15",
              "type": "t_contract(BasecollDeployer)2486",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:125"
            },
            {
              "label": "priceoracle",
              "offset": 0,
              "slot": "16",
              "type": "t_contract(IDAIoraclePriceGetter)2320",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:127"
            },
            {
              "label": "reservePercent",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:129"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_address)5_storage": {
              "label": "address[5]"
            },
            "t_array(t_contract(ERC20)692)dyn_storage": {
              "label": "contract ERC20[]"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_contract(BasecollDeployer)2486": {
              "label": "contract BasecollDeployer"
            },
            "t_contract(ERC20)692": {
              "label": "contract ERC20"
            },
            "t_contract(IBase_stables)2281": {
              "label": "contract IBase_stables"
            },
            "t_contract(IBase_usd)2308": {
              "label": "contract IBase_usd"
            },
            "t_contract(IDAIoraclePriceGetter)2320": {
              "label": "contract IDAIoraclePriceGetter"
            },
            "t_contract(IPoolConfiguration)2361": {
              "label": "contract IPoolConfiguration"
            },
            "t_contract(basecoll)2449": {
              "label": "contract basecoll"
            },
            "t_enum(tankStatus)2617": {
              "label": "enum corelibrary.tankStatus",
              "members": [
                "INACTIVE",
                "ACTIVE",
                "CLOSED"
              ]
            },
            "t_mapping(t_address,t_mapping(t_address,t_struct(borrowerstankdata)2646_storage))": {
              "label": "mapping(address => mapping(address => struct corelibrary.borrowerstankdata))"
            },
            "t_mapping(t_address,t_mapping(t_address,t_struct(lenderstankdata)2623_storage))": {
              "label": "mapping(address => mapping(address => struct corelibrary.lenderstankdata))"
            },
            "t_mapping(t_address,t_struct(borrowerstankdata)2646_storage)": {
              "label": "mapping(address => struct corelibrary.borrowerstankdata)"
            },
            "t_mapping(t_address,t_struct(interestbearingtankdata)2641_storage)": {
              "label": "mapping(address => struct corelibrary.interestbearingtankdata)"
            },
            "t_mapping(t_address,t_struct(lenderstankdata)2623_storage)": {
              "label": "mapping(address => struct corelibrary.lenderstankdata)"
            },
            "t_mapping(t_address,t_struct(noninterestbearingtankdata)2660_storage)": {
              "label": "mapping(address => struct corelibrary.noninterestbearingtankdata)"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(borrowerstankdata)2646_storage": {
              "label": "struct corelibrary.borrowerstankdata",
              "members": [
                {
                  "label": "disableUseAsCollateral",
                  "type": "t_bool"
                },
                {
                  "label": "borrowShares",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(interestbearingtankdata)2641_storage": {
              "label": "struct corelibrary.interestbearingtankdata",
              "members": [
                {
                  "label": "status",
                  "type": "t_enum(tankStatus)2617"
                },
                {
                  "label": "baseusd",
                  "type": "t_contract(IBase_usd)2308"
                },
                {
                  "label": "poolConfig",
                  "type": "t_contract(IPoolConfiguration)2361"
                },
                {
                  "label": "totalBorrows",
                  "type": "t_uint256"
                },
                {
                  "label": "totalBorrowShares",
                  "type": "t_uint256"
                },
                {
                  "label": "tankReserves",
                  "type": "t_uint256"
                },
                {
                  "label": "lastUpdateTimestamp",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(lenderstankdata)2623_storage": {
              "label": "struct corelibrary.lenderstankdata",
              "members": [
                {
                  "label": "borrowShares",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(noninterestbearingtankdata)2660_storage": {
              "label": "struct corelibrary.noninterestbearingtankdata",
              "members": [
                {
                  "label": "status",
                  "type": "t_enum(tankStatus)2617"
                },
                {
                  "label": "baseColl",
                  "type": "t_contract(basecoll)2449"
                },
                {
                  "label": "poolConfig",
                  "type": "t_contract(IPoolConfiguration)2361"
                },
                {
                  "label": "lastUpdateTimestamp",
                  "type": "t_uint256"
                },
                {
                  "label": "usdpair",
                  "type": "t_string_storage"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IBaseCore": {
        "src": "contracts/Interface/IBaseCore.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(uint256,address)",
          "redeem(uint256,address)",
          "harvest()",
          "earned()",
          "dusdToUsd(uint256,bool)",
          "peaks(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IBase_stables": {
        "src": "contracts/Interface/IBase_stables.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)",
          "burn(address,uint256)",
          "totalSupply()",
          "burnForSelf(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IBase_usd": {
        "src": "contracts/Interface/IBase_usd.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)",
          "burn(address,uint256)",
          "totalSupply()",
          "burnForSelf(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IDAIoraclePriceGetter": {
        "src": "contracts/Interface/IDAIoraclePriceGetter.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getPrice(string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPoolConfiguration": {
        "src": "contracts/Interface/IPoolConfiguration.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getOptimalUtilizationRate()",
          "getBaseBorrowRate()",
          "getLiquidationBonusPercent()",
          "getCollateralPercent()",
          "calculateInterestRate(uint256,uint256)",
          "getUtilizationRate(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "basecoll": {
        "src": "contracts/basecoll.sol:8",
        "version": {
          "withMetadata": "d2fa345458445ef4b22e1d583cb17018ef771cbd866295af2d66fda68ed6bbd3",
          "withoutMetadata": "fd8a7b64813b41475f4f2ca2e4cc396d01b9a5887e53356bec97171d8ea4acec",
          "linkedWithoutMetadata": "fd8a7b64813b41475f4f2ca2e4cc396d01b9a5887e53356bec97171d8ea4acec"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "methods": [
          "(string,string,address,address)",
          "mint(address,uint256)",
          "burn(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "basecoll",
            "src": "contracts/basecoll.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "basecore",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(BaseCore)2205",
              "contract": "basecoll",
              "src": "contracts/basecoll.sol:11"
            },
            {
              "label": "underlyingAsset",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(ERC20)692",
              "contract": "basecoll",
              "src": "contracts/basecoll.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_contract(BaseCore)2205": {
              "label": "contract BaseCore"
            },
            "t_contract(ERC20)692": {
              "label": "contract ERC20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "BasecollDeployer": {
        "src": "contracts/basecollDeployer.sol:8",
        "version": {
          "withMetadata": "a54eca9452da43ec2a3300dd40e25242271f6680dd672fbd2aaeba87c3646d0c",
          "withoutMetadata": "820f4333b9d34294e03c66bbbf45cd39c2ca37a713c6faaf061ec2b8ef567a3d",
          "linkedWithoutMetadata": "820f4333b9d34294e03c66bbbf45cd39c2ca37a713c6faaf061ec2b8ef567a3d"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "createNewbasecoll(string,string,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Math": {
        "src": "contracts/libraries/Math.sol:10",
        "version": {
          "withMetadata": "8eb24f05334341281cfdc4ce9624eb0214fec990a3e7edf35702f88dcb93527f",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "WadMath": {
        "src": "contracts/libraries/WadMath.sol:11",
        "version": {
          "withMetadata": "4469de403b749c3b4e3c35240492ef4d28235438c36c6733c57fd87b0535274f",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "SafeMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "corelibrary": {
        "src": "contracts/libraries/corelibrary.sol:14",
        "version": {
          "withMetadata": "5e74aeecf95ce0a90f30585938f8ad059ee2ca41daf62beb98b016063f0a139d",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "SafeERC20",
          "SafeMath",
          "WadMath",
          "Math"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "08295699790c674c5574539ced5280dbb163cab91795b07eb9175feafd7c5c02",
          "withoutMetadata": "7e7a4d2dea64835b308c8a359c3029d74988a4318ba8ef4240ab30513edfd448",
          "linkedWithoutMetadata": "7e7a4d2dea64835b308c8a359c3029d74988a4318ba8ef4240ab30513edfd448"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:18",
        "version": {
          "withMetadata": "3cadbdb25b0d889a6e9d9f749cc008545c861f2916c34f119ffec15ff9894211",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "f453140119aa4ab940c1c866e30faba30c70b1bf42ecb26b808dc4e355066110",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "e96c088265fb723a79b847223722ed9c8034dcd061caf652f25c4bd66d192c8e",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "BaseCore": {
        "src": "contracts/BaseCore.sol:20",
        "version": {
          "withMetadata": "94dece4e514992809e52779c93a9cbac6ab45816b2cd525574c39690d616c0f8",
          "withoutMetadata": "d483724ec8db6f72a1b8edc4e9670ed273527d14113cfa0ad955f9b44bf69c6e",
          "linkedWithoutMetadata": "d483724ec8db6f72a1b8edc4e9670ed273527d14113cfa0ad955f9b44bf69c6e"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeERC20",
          "SafeMath",
          "WadMath",
          "Math",
          "corelibrary"
        ],
        "methods": [
          "(address[5])",
          "initIBT(address,address)",
          "initNIBT(address,address,string)",
          "getTotalAvailableLiquidity(address)",
          "getTotalLiquidity(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BaseCore",
            "src": "contracts/BaseCore.sol:132"
          },
          {
            "kind": "state-variable-assignment",
            "name": "reservePercent",
            "src": "contracts/BaseCore.sol:129"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "backingcoins",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_address)5_storage",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:111"
            },
            {
              "label": "baseusd",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(IBase_usd)2308",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:113"
            },
            {
              "label": "basestables",
              "offset": 0,
              "slot": "7",
              "type": "t_contract(IBase_stables)2281",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:114"
            },
            {
              "label": "backingbalances",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:116"
            },
            {
              "label": "interestbearingtank",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_struct(interestbearingtankdata)2641_storage)",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:117"
            },
            {
              "label": "noninterestbearingtank",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(noninterestbearingtankdata)2660_storage)",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:118"
            },
            {
              "label": "borrowerstank",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_struct(borrowerstankdata)2646_storage))",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:120"
            },
            {
              "label": "lenderstank",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_mapping(t_address,t_struct(lenderstankdata)2623_storage))",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:121"
            },
            {
              "label": "interestbearingtanklist",
              "offset": 0,
              "slot": "13",
              "type": "t_array(t_contract(ERC20)692)dyn_storage",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:122"
            },
            {
              "label": "noninterestbearingtanklist",
              "offset": 0,
              "slot": "14",
              "type": "t_array(t_contract(ERC20)692)dyn_storage",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:123"
            },
            {
              "label": "basecollDeployer",
              "offset": 0,
              "slot": "15",
              "type": "t_contract(BasecollDeployer)2486",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:125"
            },
            {
              "label": "priceoracle",
              "offset": 0,
              "slot": "16",
              "type": "t_contract(IDAIoraclePriceGetter)2320",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:127"
            },
            {
              "label": "reservePercent",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:129"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_address)5_storage": {
              "label": "address[5]"
            },
            "t_array(t_contract(ERC20)692)dyn_storage": {
              "label": "contract ERC20[]"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_contract(BasecollDeployer)2486": {
              "label": "contract BasecollDeployer"
            },
            "t_contract(ERC20)692": {
              "label": "contract ERC20"
            },
            "t_contract(IBase_stables)2281": {
              "label": "contract IBase_stables"
            },
            "t_contract(IBase_usd)2308": {
              "label": "contract IBase_usd"
            },
            "t_contract(IDAIoraclePriceGetter)2320": {
              "label": "contract IDAIoraclePriceGetter"
            },
            "t_contract(IPoolConfiguration)2361": {
              "label": "contract IPoolConfiguration"
            },
            "t_contract(basecoll)2449": {
              "label": "contract basecoll"
            },
            "t_enum(tankStatus)2617": {
              "label": "enum corelibrary.tankStatus",
              "members": [
                "INACTIVE",
                "ACTIVE",
                "CLOSED"
              ]
            },
            "t_mapping(t_address,t_mapping(t_address,t_struct(borrowerstankdata)2646_storage))": {
              "label": "mapping(address => mapping(address => struct corelibrary.borrowerstankdata))"
            },
            "t_mapping(t_address,t_mapping(t_address,t_struct(lenderstankdata)2623_storage))": {
              "label": "mapping(address => mapping(address => struct corelibrary.lenderstankdata))"
            },
            "t_mapping(t_address,t_struct(borrowerstankdata)2646_storage)": {
              "label": "mapping(address => struct corelibrary.borrowerstankdata)"
            },
            "t_mapping(t_address,t_struct(interestbearingtankdata)2641_storage)": {
              "label": "mapping(address => struct corelibrary.interestbearingtankdata)"
            },
            "t_mapping(t_address,t_struct(lenderstankdata)2623_storage)": {
              "label": "mapping(address => struct corelibrary.lenderstankdata)"
            },
            "t_mapping(t_address,t_struct(noninterestbearingtankdata)2660_storage)": {
              "label": "mapping(address => struct corelibrary.noninterestbearingtankdata)"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(borrowerstankdata)2646_storage": {
              "label": "struct corelibrary.borrowerstankdata",
              "members": [
                {
                  "label": "disableUseAsCollateral",
                  "type": "t_bool"
                },
                {
                  "label": "borrowShares",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(interestbearingtankdata)2641_storage": {
              "label": "struct corelibrary.interestbearingtankdata",
              "members": [
                {
                  "label": "status",
                  "type": "t_enum(tankStatus)2617"
                },
                {
                  "label": "baseusd",
                  "type": "t_contract(IBase_usd)2308"
                },
                {
                  "label": "poolConfig",
                  "type": "t_contract(IPoolConfiguration)2361"
                },
                {
                  "label": "totalBorrows",
                  "type": "t_uint256"
                },
                {
                  "label": "totalBorrowShares",
                  "type": "t_uint256"
                },
                {
                  "label": "tankReserves",
                  "type": "t_uint256"
                },
                {
                  "label": "lastUpdateTimestamp",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(lenderstankdata)2623_storage": {
              "label": "struct corelibrary.lenderstankdata",
              "members": [
                {
                  "label": "borrowShares",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(noninterestbearingtankdata)2660_storage": {
              "label": "struct corelibrary.noninterestbearingtankdata",
              "members": [
                {
                  "label": "status",
                  "type": "t_enum(tankStatus)2617"
                },
                {
                  "label": "baseColl",
                  "type": "t_contract(basecoll)2449"
                },
                {
                  "label": "poolConfig",
                  "type": "t_contract(IPoolConfiguration)2361"
                },
                {
                  "label": "lastUpdateTimestamp",
                  "type": "t_uint256"
                },
                {
                  "label": "usdpair",
                  "type": "t_string_storage"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IBaseCore": {
        "src": "contracts/Interface/IBaseCore.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(uint256,address)",
          "redeem(uint256,address)",
          "harvest()",
          "earned()",
          "dusdToUsd(uint256,bool)",
          "peaks(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IBase_stables": {
        "src": "contracts/Interface/IBase_stables.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)",
          "burn(address,uint256)",
          "totalSupply()",
          "burnForSelf(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IBase_usd": {
        "src": "contracts/Interface/IBase_usd.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)",
          "burn(address,uint256)",
          "totalSupply()",
          "burnForSelf(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IDAIoraclePriceGetter": {
        "src": "contracts/Interface/IDAIoraclePriceGetter.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getPrice(string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPoolConfiguration": {
        "src": "contracts/Interface/IPoolConfiguration.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getOptimalUtilizationRate()",
          "getBaseBorrowRate()",
          "getLiquidationBonusPercent()",
          "getCollateralPercent()",
          "calculateInterestRate(uint256,uint256)",
          "getUtilizationRate(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "basecoll": {
        "src": "contracts/basecoll.sol:8",
        "version": {
          "withMetadata": "ff2aeb44e359629f9b990e9cabad39b524e4ba619c56bd319614776cb1ba6d81",
          "withoutMetadata": "fd8a7b64813b41475f4f2ca2e4cc396d01b9a5887e53356bec97171d8ea4acec",
          "linkedWithoutMetadata": "fd8a7b64813b41475f4f2ca2e4cc396d01b9a5887e53356bec97171d8ea4acec"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "methods": [
          "(string,string,address,address)",
          "mint(address,uint256)",
          "burn(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "basecoll",
            "src": "contracts/basecoll.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "basecore",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(BaseCore)2205",
              "contract": "basecoll",
              "src": "contracts/basecoll.sol:11"
            },
            {
              "label": "underlyingAsset",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(ERC20)692",
              "contract": "basecoll",
              "src": "contracts/basecoll.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_contract(BaseCore)2205": {
              "label": "contract BaseCore"
            },
            "t_contract(ERC20)692": {
              "label": "contract ERC20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "BasecollDeployer": {
        "src": "contracts/basecollDeployer.sol:8",
        "version": {
          "withMetadata": "4fb9ae45b3c1c47ea1d248b7438883e031421b1058517f498e57af6016065617",
          "withoutMetadata": "fcfb998edeecf80caef4c85c72d94eb53a1ada9b59a4fea12051005cfa770f18",
          "linkedWithoutMetadata": "fcfb998edeecf80caef4c85c72d94eb53a1ada9b59a4fea12051005cfa770f18"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "createNewbasecoll(string,string,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Math": {
        "src": "contracts/libraries/Math.sol:10",
        "version": {
          "withMetadata": "8eb24f05334341281cfdc4ce9624eb0214fec990a3e7edf35702f88dcb93527f",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "WadMath": {
        "src": "contracts/libraries/WadMath.sol:11",
        "version": {
          "withMetadata": "4469de403b749c3b4e3c35240492ef4d28235438c36c6733c57fd87b0535274f",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "SafeMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "corelibrary": {
        "src": "contracts/libraries/corelibrary.sol:14",
        "version": {
          "withMetadata": "17c52a469db264506bc71a501596fccb7640a3f2481a876992867b1e0706ec27",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "SafeERC20",
          "SafeMath",
          "WadMath",
          "Math"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "08295699790c674c5574539ced5280dbb163cab91795b07eb9175feafd7c5c02",
          "withoutMetadata": "7e7a4d2dea64835b308c8a359c3029d74988a4318ba8ef4240ab30513edfd448",
          "linkedWithoutMetadata": "7e7a4d2dea64835b308c8a359c3029d74988a4318ba8ef4240ab30513edfd448"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:18",
        "version": {
          "withMetadata": "3cadbdb25b0d889a6e9d9f749cc008545c861f2916c34f119ffec15ff9894211",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "f453140119aa4ab940c1c866e30faba30c70b1bf42ecb26b808dc4e355066110",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "e96c088265fb723a79b847223722ed9c8034dcd061caf652f25c4bd66d192c8e",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "BaseCore": {
        "src": "contracts/BaseCore.sol:20",
        "version": {
          "withMetadata": "9f3827ada2db6253dfdf86387a02b471df1e19a390919deae4caf7c4cf708e07",
          "withoutMetadata": "c311ddeee13f75b8bae112112e5a801a2f1a5bbd6613c065680b4af124372667",
          "linkedWithoutMetadata": "c311ddeee13f75b8bae112112e5a801a2f1a5bbd6613c065680b4af124372667"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeERC20",
          "SafeMath",
          "WadMath",
          "Math",
          "corelibrary"
        ],
        "methods": [
          "(address[5])",
          "initIBT(address,address)",
          "getTotalAvailableLiquidity(address)",
          "getTotalLiquidity(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BaseCore",
            "src": "contracts/BaseCore.sol:132"
          },
          {
            "kind": "state-variable-assignment",
            "name": "reservePercent",
            "src": "contracts/BaseCore.sol:129"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "backingcoins",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_address)5_storage",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:111"
            },
            {
              "label": "baseusd",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(IBase_usd)2191",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:113"
            },
            {
              "label": "basestables",
              "offset": 0,
              "slot": "7",
              "type": "t_contract(IBase_stables)2164",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:114"
            },
            {
              "label": "backingbalances",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:116"
            },
            {
              "label": "interestbearingtank",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_struct(interestbearingtankdata)2523_storage)",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:117"
            },
            {
              "label": "noninterestbearingtank",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(noninterestbearingtankdata)2542_storage)",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:118"
            },
            {
              "label": "borrowerstank",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_struct(borrowerstankdata)2528_storage))",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:120"
            },
            {
              "label": "lenderstank",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_mapping(t_address,t_struct(lenderstankdata)2505_storage))",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:121"
            },
            {
              "label": "interestbearingtanklist",
              "offset": 0,
              "slot": "13",
              "type": "t_array(t_contract(ERC20)692)dyn_storage",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:122"
            },
            {
              "label": "noninterestbearingtanklist",
              "offset": 0,
              "slot": "14",
              "type": "t_array(t_contract(ERC20)692)dyn_storage",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:123"
            },
            {
              "label": "basecollDeployer",
              "offset": 0,
              "slot": "15",
              "type": "t_contract(BasecollDeployer)2369",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:125"
            },
            {
              "label": "priceoracle",
              "offset": 0,
              "slot": "16",
              "type": "t_contract(IDAIoraclePriceGetter)2203",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:127"
            },
            {
              "label": "reservePercent",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:129"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_address)5_storage": {
              "label": "address[5]"
            },
            "t_array(t_contract(ERC20)692)dyn_storage": {
              "label": "contract ERC20[]"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_contract(BasecollDeployer)2369": {
              "label": "contract BasecollDeployer"
            },
            "t_contract(ERC20)692": {
              "label": "contract ERC20"
            },
            "t_contract(IBase_stables)2164": {
              "label": "contract IBase_stables"
            },
            "t_contract(IBase_usd)2191": {
              "label": "contract IBase_usd"
            },
            "t_contract(IDAIoraclePriceGetter)2203": {
              "label": "contract IDAIoraclePriceGetter"
            },
            "t_contract(IPoolConfiguration)2244": {
              "label": "contract IPoolConfiguration"
            },
            "t_contract(basecoll)2332": {
              "label": "contract basecoll"
            },
            "t_enum(tankStatus)2499": {
              "label": "enum corelibrary.tankStatus",
              "members": [
                "INACTIVE",
                "ACTIVE",
                "CLOSED"
              ]
            },
            "t_mapping(t_address,t_mapping(t_address,t_struct(borrowerstankdata)2528_storage))": {
              "label": "mapping(address => mapping(address => struct corelibrary.borrowerstankdata))"
            },
            "t_mapping(t_address,t_mapping(t_address,t_struct(lenderstankdata)2505_storage))": {
              "label": "mapping(address => mapping(address => struct corelibrary.lenderstankdata))"
            },
            "t_mapping(t_address,t_struct(borrowerstankdata)2528_storage)": {
              "label": "mapping(address => struct corelibrary.borrowerstankdata)"
            },
            "t_mapping(t_address,t_struct(interestbearingtankdata)2523_storage)": {
              "label": "mapping(address => struct corelibrary.interestbearingtankdata)"
            },
            "t_mapping(t_address,t_struct(lenderstankdata)2505_storage)": {
              "label": "mapping(address => struct corelibrary.lenderstankdata)"
            },
            "t_mapping(t_address,t_struct(noninterestbearingtankdata)2542_storage)": {
              "label": "mapping(address => struct corelibrary.noninterestbearingtankdata)"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(borrowerstankdata)2528_storage": {
              "label": "struct corelibrary.borrowerstankdata",
              "members": [
                {
                  "label": "disableUseAsCollateral",
                  "type": "t_bool"
                },
                {
                  "label": "borrowShares",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(interestbearingtankdata)2523_storage": {
              "label": "struct corelibrary.interestbearingtankdata",
              "members": [
                {
                  "label": "status",
                  "type": "t_enum(tankStatus)2499"
                },
                {
                  "label": "baseusd",
                  "type": "t_contract(IBase_usd)2191"
                },
                {
                  "label": "poolConfig",
                  "type": "t_contract(IPoolConfiguration)2244"
                },
                {
                  "label": "totalBorrows",
                  "type": "t_uint256"
                },
                {
                  "label": "totalBorrowShares",
                  "type": "t_uint256"
                },
                {
                  "label": "tankReserves",
                  "type": "t_uint256"
                },
                {
                  "label": "lastUpdateTimestamp",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(lenderstankdata)2505_storage": {
              "label": "struct corelibrary.lenderstankdata",
              "members": [
                {
                  "label": "borrowShares",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(noninterestbearingtankdata)2542_storage": {
              "label": "struct corelibrary.noninterestbearingtankdata",
              "members": [
                {
                  "label": "status",
                  "type": "t_enum(tankStatus)2499"
                },
                {
                  "label": "baseColl",
                  "type": "t_contract(basecoll)2332"
                },
                {
                  "label": "poolConfig",
                  "type": "t_contract(IPoolConfiguration)2244"
                },
                {
                  "label": "lastUpdateTimestamp",
                  "type": "t_uint256"
                },
                {
                  "label": "usdpair",
                  "type": "t_string_storage"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IBaseCore": {
        "src": "contracts/Interface/IBaseCore.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(uint256,address)",
          "redeem(uint256,address)",
          "harvest()",
          "earned()",
          "dusdToUsd(uint256,bool)",
          "peaks(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IBase_stables": {
        "src": "contracts/Interface/IBase_stables.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)",
          "burn(address,uint256)",
          "totalSupply()",
          "burnForSelf(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IBase_usd": {
        "src": "contracts/Interface/IBase_usd.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)",
          "burn(address,uint256)",
          "totalSupply()",
          "burnForSelf(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IDAIoraclePriceGetter": {
        "src": "contracts/Interface/IDAIoraclePriceGetter.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getPrice(string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPoolConfiguration": {
        "src": "contracts/Interface/IPoolConfiguration.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getOptimalUtilizationRate()",
          "getBaseBorrowRate()",
          "getLiquidationBonusPercent()",
          "getCollateralPercent()",
          "calculateInterestRate(uint256,uint256)",
          "getUtilizationRate(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "basecoll": {
        "src": "contracts/basecoll.sol:8",
        "version": {
          "withMetadata": "c43126a7daa29b680514bca71102cac1a1a678727e8d6188f91db75f5e0f474d",
          "withoutMetadata": "fd8a7b64813b41475f4f2ca2e4cc396d01b9a5887e53356bec97171d8ea4acec",
          "linkedWithoutMetadata": "fd8a7b64813b41475f4f2ca2e4cc396d01b9a5887e53356bec97171d8ea4acec"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "methods": [
          "(string,string,address,address)",
          "mint(address,uint256)",
          "burn(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "basecoll",
            "src": "contracts/basecoll.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "basecore",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(BaseCore)2088",
              "contract": "basecoll",
              "src": "contracts/basecoll.sol:11"
            },
            {
              "label": "underlyingAsset",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(ERC20)692",
              "contract": "basecoll",
              "src": "contracts/basecoll.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_contract(BaseCore)2088": {
              "label": "contract BaseCore"
            },
            "t_contract(ERC20)692": {
              "label": "contract ERC20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "BasecollDeployer": {
        "src": "contracts/basecollDeployer.sol:8",
        "version": {
          "withMetadata": "ff761a2cbe707aa10cded26fb0b9bc9f694b8311b1c6bd9caa35f7409b269b15",
          "withoutMetadata": "1ac7fef03262ca1669b7ded4093b56d3ac9f75ffbd4ba858e6b9def099d4fa1c",
          "linkedWithoutMetadata": "1ac7fef03262ca1669b7ded4093b56d3ac9f75ffbd4ba858e6b9def099d4fa1c"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "createNewbasecoll(string,string,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Math": {
        "src": "contracts/libraries/Math.sol:10",
        "version": {
          "withMetadata": "8eb24f05334341281cfdc4ce9624eb0214fec990a3e7edf35702f88dcb93527f",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "WadMath": {
        "src": "contracts/libraries/WadMath.sol:11",
        "version": {
          "withMetadata": "4469de403b749c3b4e3c35240492ef4d28235438c36c6733c57fd87b0535274f",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "SafeMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "corelibrary": {
        "src": "contracts/libraries/corelibrary.sol:13",
        "version": {
          "withMetadata": "9fbf882ea6cbeca124bbb28f69365ec3cd79e47227e289d014984a0b6b333ee0",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "SafeERC20",
          "SafeMath",
          "WadMath",
          "Math"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "08295699790c674c5574539ced5280dbb163cab91795b07eb9175feafd7c5c02",
          "withoutMetadata": "7e7a4d2dea64835b308c8a359c3029d74988a4318ba8ef4240ab30513edfd448",
          "linkedWithoutMetadata": "7e7a4d2dea64835b308c8a359c3029d74988a4318ba8ef4240ab30513edfd448"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:18",
        "version": {
          "withMetadata": "3cadbdb25b0d889a6e9d9f749cc008545c861f2916c34f119ffec15ff9894211",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "f453140119aa4ab940c1c866e30faba30c70b1bf42ecb26b808dc4e355066110",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "e96c088265fb723a79b847223722ed9c8034dcd061caf652f25c4bd66d192c8e",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "BaseCore": {
        "src": "contracts/BaseCore.sol:20",
        "version": {
          "withMetadata": "56c6a0c0a427d4cb218018b3ef723c357337a76fefee68dec9eeb983b3dd860a",
          "withoutMetadata": "1750fc3b2a22df5819e1264d81dae167f5ccaff47350f424b47a0edbb2cd84f7",
          "linkedWithoutMetadata": "1750fc3b2a22df5819e1264d81dae167f5ccaff47350f424b47a0edbb2cd84f7"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeERC20",
          "SafeMath",
          "WadMath",
          "Math",
          "corelibrary"
        ],
        "methods": [
          "(address[5])",
          "getTotalAvailableLiquidity(address)",
          "getTotalLiquidity(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BaseCore",
            "src": "contracts/BaseCore.sol:132"
          },
          {
            "kind": "state-variable-assignment",
            "name": "reservePercent",
            "src": "contracts/BaseCore.sol:129"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "backingcoins",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_address)5_storage",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:111"
            },
            {
              "label": "baseusd",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(IBase_usd)2114",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:113"
            },
            {
              "label": "basestables",
              "offset": 0,
              "slot": "7",
              "type": "t_contract(IBase_stables)2087",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:114"
            },
            {
              "label": "backingbalances",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:116"
            },
            {
              "label": "interestbearingtank",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_struct(interestbearingtankdata)2446_storage)",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:117"
            },
            {
              "label": "noninterestbearingtank",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(noninterestbearingtankdata)2465_storage)",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:118"
            },
            {
              "label": "borrowerstank",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_struct(borrowerstankdata)2451_storage))",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:120"
            },
            {
              "label": "lenderstank",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_mapping(t_address,t_struct(lenderstankdata)2428_storage))",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:121"
            },
            {
              "label": "interestbearingtanklist",
              "offset": 0,
              "slot": "13",
              "type": "t_array(t_contract(ERC20)692)dyn_storage",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:122"
            },
            {
              "label": "noninterestbearingtanklist",
              "offset": 0,
              "slot": "14",
              "type": "t_array(t_contract(ERC20)692)dyn_storage",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:123"
            },
            {
              "label": "basecollDeployer",
              "offset": 0,
              "slot": "15",
              "type": "t_contract(BasecollDeployer)2292",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:125"
            },
            {
              "label": "priceoracle",
              "offset": 0,
              "slot": "16",
              "type": "t_contract(IDAIoraclePriceGetter)2126",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:127"
            },
            {
              "label": "reservePercent",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:129"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_address)5_storage": {
              "label": "address[5]"
            },
            "t_array(t_contract(ERC20)692)dyn_storage": {
              "label": "contract ERC20[]"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_contract(BasecollDeployer)2292": {
              "label": "contract BasecollDeployer"
            },
            "t_contract(ERC20)692": {
              "label": "contract ERC20"
            },
            "t_contract(IBase_stables)2087": {
              "label": "contract IBase_stables"
            },
            "t_contract(IBase_usd)2114": {
              "label": "contract IBase_usd"
            },
            "t_contract(IDAIoraclePriceGetter)2126": {
              "label": "contract IDAIoraclePriceGetter"
            },
            "t_contract(IPoolConfiguration)2167": {
              "label": "contract IPoolConfiguration"
            },
            "t_contract(basecoll)2255": {
              "label": "contract basecoll"
            },
            "t_enum(tankStatus)2422": {
              "label": "enum corelibrary.tankStatus",
              "members": [
                "INACTIVE",
                "ACTIVE",
                "CLOSED"
              ]
            },
            "t_mapping(t_address,t_mapping(t_address,t_struct(borrowerstankdata)2451_storage))": {
              "label": "mapping(address => mapping(address => struct corelibrary.borrowerstankdata))"
            },
            "t_mapping(t_address,t_mapping(t_address,t_struct(lenderstankdata)2428_storage))": {
              "label": "mapping(address => mapping(address => struct corelibrary.lenderstankdata))"
            },
            "t_mapping(t_address,t_struct(borrowerstankdata)2451_storage)": {
              "label": "mapping(address => struct corelibrary.borrowerstankdata)"
            },
            "t_mapping(t_address,t_struct(interestbearingtankdata)2446_storage)": {
              "label": "mapping(address => struct corelibrary.interestbearingtankdata)"
            },
            "t_mapping(t_address,t_struct(lenderstankdata)2428_storage)": {
              "label": "mapping(address => struct corelibrary.lenderstankdata)"
            },
            "t_mapping(t_address,t_struct(noninterestbearingtankdata)2465_storage)": {
              "label": "mapping(address => struct corelibrary.noninterestbearingtankdata)"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(borrowerstankdata)2451_storage": {
              "label": "struct corelibrary.borrowerstankdata",
              "members": [
                {
                  "label": "disableUseAsCollateral",
                  "type": "t_bool"
                },
                {
                  "label": "borrowShares",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(interestbearingtankdata)2446_storage": {
              "label": "struct corelibrary.interestbearingtankdata",
              "members": [
                {
                  "label": "status",
                  "type": "t_enum(tankStatus)2422"
                },
                {
                  "label": "baseusd",
                  "type": "t_contract(IBase_usd)2114"
                },
                {
                  "label": "poolConfig",
                  "type": "t_contract(IPoolConfiguration)2167"
                },
                {
                  "label": "totalBorrows",
                  "type": "t_uint256"
                },
                {
                  "label": "totalBorrowShares",
                  "type": "t_uint256"
                },
                {
                  "label": "tankReserves",
                  "type": "t_uint256"
                },
                {
                  "label": "lastUpdateTimestamp",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(lenderstankdata)2428_storage": {
              "label": "struct corelibrary.lenderstankdata",
              "members": [
                {
                  "label": "borrowShares",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(noninterestbearingtankdata)2465_storage": {
              "label": "struct corelibrary.noninterestbearingtankdata",
              "members": [
                {
                  "label": "status",
                  "type": "t_enum(tankStatus)2422"
                },
                {
                  "label": "baseColl",
                  "type": "t_contract(basecoll)2255"
                },
                {
                  "label": "poolConfig",
                  "type": "t_contract(IPoolConfiguration)2167"
                },
                {
                  "label": "lastUpdateTimestamp",
                  "type": "t_uint256"
                },
                {
                  "label": "usdpair",
                  "type": "t_string_storage"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IBaseCore": {
        "src": "contracts/Interface/IBaseCore.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(uint256,address)",
          "redeem(uint256,address)",
          "harvest()",
          "earned()",
          "dusdToUsd(uint256,bool)",
          "peaks(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IBase_stables": {
        "src": "contracts/Interface/IBase_stables.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)",
          "burn(address,uint256)",
          "totalSupply()",
          "burnForSelf(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IBase_usd": {
        "src": "contracts/Interface/IBase_usd.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)",
          "burn(address,uint256)",
          "totalSupply()",
          "burnForSelf(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IDAIoraclePriceGetter": {
        "src": "contracts/Interface/IDAIoraclePriceGetter.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getPrice(string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPoolConfiguration": {
        "src": "contracts/Interface/IPoolConfiguration.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getOptimalUtilizationRate()",
          "getBaseBorrowRate()",
          "getLiquidationBonusPercent()",
          "getCollateralPercent()",
          "calculateInterestRate(uint256,uint256)",
          "getUtilizationRate(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "basecoll": {
        "src": "contracts/basecoll.sol:8",
        "version": {
          "withMetadata": "3c786eda2d972146732165ebb93983b8410495674a5a761fd662f9d64a20984e",
          "withoutMetadata": "fd8a7b64813b41475f4f2ca2e4cc396d01b9a5887e53356bec97171d8ea4acec",
          "linkedWithoutMetadata": "fd8a7b64813b41475f4f2ca2e4cc396d01b9a5887e53356bec97171d8ea4acec"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "methods": [
          "(string,string,address,address)",
          "mint(address,uint256)",
          "burn(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "basecoll",
            "src": "contracts/basecoll.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "basecore",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(BaseCore)2011",
              "contract": "basecoll",
              "src": "contracts/basecoll.sol:11"
            },
            {
              "label": "underlyingAsset",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(ERC20)692",
              "contract": "basecoll",
              "src": "contracts/basecoll.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_contract(BaseCore)2011": {
              "label": "contract BaseCore"
            },
            "t_contract(ERC20)692": {
              "label": "contract ERC20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "BasecollDeployer": {
        "src": "contracts/basecollDeployer.sol:8",
        "version": {
          "withMetadata": "0265108bd7c6781d5cc331ac144b93e3e5a50a55c1a1ad8713625e2928329e6c",
          "withoutMetadata": "20bbe74cce24306e46bdeecc9e4da420983dbb412549198f5258bc2c077c8fe3",
          "linkedWithoutMetadata": "20bbe74cce24306e46bdeecc9e4da420983dbb412549198f5258bc2c077c8fe3"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "createNewbasecoll(string,string,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Math": {
        "src": "contracts/libraries/Math.sol:10",
        "version": {
          "withMetadata": "8eb24f05334341281cfdc4ce9624eb0214fec990a3e7edf35702f88dcb93527f",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "WadMath": {
        "src": "contracts/libraries/WadMath.sol:11",
        "version": {
          "withMetadata": "4469de403b749c3b4e3c35240492ef4d28235438c36c6733c57fd87b0535274f",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "SafeMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "corelibrary": {
        "src": "contracts/libraries/corelibrary.sol:13",
        "version": {
          "withMetadata": "f48d59c28690334ba9940323e7757234bbf85998770055d7f131f366215c6442",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "SafeERC20",
          "SafeMath",
          "WadMath",
          "Math"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "08295699790c674c5574539ced5280dbb163cab91795b07eb9175feafd7c5c02",
          "withoutMetadata": "7e7a4d2dea64835b308c8a359c3029d74988a4318ba8ef4240ab30513edfd448",
          "linkedWithoutMetadata": "7e7a4d2dea64835b308c8a359c3029d74988a4318ba8ef4240ab30513edfd448"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:18",
        "version": {
          "withMetadata": "3cadbdb25b0d889a6e9d9f749cc008545c861f2916c34f119ffec15ff9894211",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "f453140119aa4ab940c1c866e30faba30c70b1bf42ecb26b808dc4e355066110",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "e96c088265fb723a79b847223722ed9c8034dcd061caf652f25c4bd66d192c8e",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "BaseCore": {
        "src": "contracts/BaseCore.sol:20",
        "version": {
          "withMetadata": "e588160097834d60926d653e508aa67ddc2010a36530b4a4172601077c65de13",
          "withoutMetadata": "1750fc3b2a22df5819e1264d81dae167f5ccaff47350f424b47a0edbb2cd84f7",
          "linkedWithoutMetadata": "1750fc3b2a22df5819e1264d81dae167f5ccaff47350f424b47a0edbb2cd84f7"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeERC20",
          "SafeMath",
          "WadMath",
          "Math",
          "corelibrary"
        ],
        "methods": [
          "(address[5])",
          "getTotalAvailableLiquidity(address)",
          "getTotalLiquidity(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BaseCore",
            "src": "contracts/BaseCore.sol:132"
          },
          {
            "kind": "state-variable-assignment",
            "name": "reservePercent",
            "src": "contracts/BaseCore.sol:129"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "backingcoins",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_address)5_storage",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:111"
            },
            {
              "label": "baseusd",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(IBase_usd)2064",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:113"
            },
            {
              "label": "basestables",
              "offset": 0,
              "slot": "7",
              "type": "t_contract(IBase_stables)2037",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:114"
            },
            {
              "label": "backingbalances",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:116"
            },
            {
              "label": "interestbearingtank",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_struct(interestbearingtankdata)2396_storage)",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:117"
            },
            {
              "label": "noninterestbearingtank",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(noninterestbearingtankdata)2415_storage)",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:118"
            },
            {
              "label": "borrowerstank",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_struct(borrowerstankdata)2401_storage))",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:120"
            },
            {
              "label": "lenderstank",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_mapping(t_address,t_struct(lenderstankdata)2378_storage))",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:121"
            },
            {
              "label": "interestbearingtanklist",
              "offset": 0,
              "slot": "13",
              "type": "t_array(t_contract(ERC20)692)dyn_storage",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:122"
            },
            {
              "label": "noninterestbearingtanklist",
              "offset": 0,
              "slot": "14",
              "type": "t_array(t_contract(ERC20)692)dyn_storage",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:123"
            },
            {
              "label": "basecollDeployer",
              "offset": 0,
              "slot": "15",
              "type": "t_contract(BasecollDeployer)2242",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:125"
            },
            {
              "label": "priceoracle",
              "offset": 0,
              "slot": "16",
              "type": "t_contract(IDAIoraclePriceGetter)2076",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:127"
            },
            {
              "label": "reservePercent",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:129"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_address)5_storage": {
              "label": "address[5]"
            },
            "t_array(t_contract(ERC20)692)dyn_storage": {
              "label": "contract ERC20[]"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_contract(BasecollDeployer)2242": {
              "label": "contract BasecollDeployer"
            },
            "t_contract(ERC20)692": {
              "label": "contract ERC20"
            },
            "t_contract(IBase_stables)2037": {
              "label": "contract IBase_stables"
            },
            "t_contract(IBase_usd)2064": {
              "label": "contract IBase_usd"
            },
            "t_contract(IDAIoraclePriceGetter)2076": {
              "label": "contract IDAIoraclePriceGetter"
            },
            "t_contract(IPoolConfiguration)2117": {
              "label": "contract IPoolConfiguration"
            },
            "t_contract(basecoll)2205": {
              "label": "contract basecoll"
            },
            "t_enum(tankStatus)2372": {
              "label": "enum corelibrary.tankStatus",
              "members": [
                "INACTIVE",
                "ACTIVE",
                "CLOSED"
              ]
            },
            "t_mapping(t_address,t_mapping(t_address,t_struct(borrowerstankdata)2401_storage))": {
              "label": "mapping(address => mapping(address => struct corelibrary.borrowerstankdata))"
            },
            "t_mapping(t_address,t_mapping(t_address,t_struct(lenderstankdata)2378_storage))": {
              "label": "mapping(address => mapping(address => struct corelibrary.lenderstankdata))"
            },
            "t_mapping(t_address,t_struct(borrowerstankdata)2401_storage)": {
              "label": "mapping(address => struct corelibrary.borrowerstankdata)"
            },
            "t_mapping(t_address,t_struct(interestbearingtankdata)2396_storage)": {
              "label": "mapping(address => struct corelibrary.interestbearingtankdata)"
            },
            "t_mapping(t_address,t_struct(lenderstankdata)2378_storage)": {
              "label": "mapping(address => struct corelibrary.lenderstankdata)"
            },
            "t_mapping(t_address,t_struct(noninterestbearingtankdata)2415_storage)": {
              "label": "mapping(address => struct corelibrary.noninterestbearingtankdata)"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(borrowerstankdata)2401_storage": {
              "label": "struct corelibrary.borrowerstankdata",
              "members": [
                {
                  "label": "disableUseAsCollateral",
                  "type": "t_bool"
                },
                {
                  "label": "borrowShares",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(interestbearingtankdata)2396_storage": {
              "label": "struct corelibrary.interestbearingtankdata",
              "members": [
                {
                  "label": "status",
                  "type": "t_enum(tankStatus)2372"
                },
                {
                  "label": "baseusd",
                  "type": "t_contract(IBase_usd)2064"
                },
                {
                  "label": "poolConfig",
                  "type": "t_contract(IPoolConfiguration)2117"
                },
                {
                  "label": "totalBorrows",
                  "type": "t_uint256"
                },
                {
                  "label": "totalBorrowShares",
                  "type": "t_uint256"
                },
                {
                  "label": "tankReserves",
                  "type": "t_uint256"
                },
                {
                  "label": "lastUpdateTimestamp",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(lenderstankdata)2378_storage": {
              "label": "struct corelibrary.lenderstankdata",
              "members": [
                {
                  "label": "borrowShares",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(noninterestbearingtankdata)2415_storage": {
              "label": "struct corelibrary.noninterestbearingtankdata",
              "members": [
                {
                  "label": "status",
                  "type": "t_enum(tankStatus)2372"
                },
                {
                  "label": "baseColl",
                  "type": "t_contract(basecoll)2205"
                },
                {
                  "label": "poolConfig",
                  "type": "t_contract(IPoolConfiguration)2117"
                },
                {
                  "label": "lastUpdateTimestamp",
                  "type": "t_uint256"
                },
                {
                  "label": "usdpair",
                  "type": "t_string_storage"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IBaseCore": {
        "src": "contracts/Interface/IBaseCore.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(uint256,address)",
          "redeem(uint256,address)",
          "harvest()",
          "earned()",
          "dusdToUsd(uint256,bool)",
          "peaks(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IBase_stables": {
        "src": "contracts/Interface/IBase_stables.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)",
          "burn(address,uint256)",
          "totalSupply()",
          "burnForSelf(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IBase_usd": {
        "src": "contracts/Interface/IBase_usd.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)",
          "burn(address,uint256)",
          "totalSupply()",
          "burnForSelf(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IDAIoraclePriceGetter": {
        "src": "contracts/Interface/IDAIoraclePriceGetter.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getPrice(string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPoolConfiguration": {
        "src": "contracts/Interface/IPoolConfiguration.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getOptimalUtilizationRate()",
          "getBaseBorrowRate()",
          "getLiquidationBonusPercent()",
          "getCollateralPercent()",
          "calculateInterestRate(uint256,uint256)",
          "getUtilizationRate(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "basecoll": {
        "src": "contracts/basecoll.sol:8",
        "version": {
          "withMetadata": "480564befbec37b2253cd4ce076b099e58814766fad572fb656d700a60363717",
          "withoutMetadata": "fd8a7b64813b41475f4f2ca2e4cc396d01b9a5887e53356bec97171d8ea4acec",
          "linkedWithoutMetadata": "fd8a7b64813b41475f4f2ca2e4cc396d01b9a5887e53356bec97171d8ea4acec"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "methods": [
          "(string,string,address,address)",
          "mint(address,uint256)",
          "burn(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "basecoll",
            "src": "contracts/basecoll.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "basecore",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(BaseCore)1961",
              "contract": "basecoll",
              "src": "contracts/basecoll.sol:11"
            },
            {
              "label": "underlyingAsset",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(ERC20)692",
              "contract": "basecoll",
              "src": "contracts/basecoll.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_contract(BaseCore)1961": {
              "label": "contract BaseCore"
            },
            "t_contract(ERC20)692": {
              "label": "contract ERC20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "BasecollDeployer": {
        "src": "contracts/basecollDeployer.sol:8",
        "version": {
          "withMetadata": "abfc5abf83e85dcbd1dad5385a9ac5da855748241c32c526b828b385759054e0",
          "withoutMetadata": "9c4955555699ce7370414fcb601a0d45661b5cb8bc59a2101de148ffeb1f73e5",
          "linkedWithoutMetadata": "9c4955555699ce7370414fcb601a0d45661b5cb8bc59a2101de148ffeb1f73e5"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "createNewbasecoll(string,string,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Math": {
        "src": "contracts/libraries/Math.sol:10",
        "version": {
          "withMetadata": "8eb24f05334341281cfdc4ce9624eb0214fec990a3e7edf35702f88dcb93527f",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "WadMath": {
        "src": "contracts/libraries/WadMath.sol:11",
        "version": {
          "withMetadata": "4469de403b749c3b4e3c35240492ef4d28235438c36c6733c57fd87b0535274f",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "SafeMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "corelibrary": {
        "src": "contracts/libraries/corelibrary.sol:13",
        "version": {
          "withMetadata": "22441ee8b4c84c0e90d5e399c647d4ae00820b270cf0987610b0c28b89e91f19",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "SafeERC20",
          "SafeMath",
          "WadMath",
          "Math"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "08295699790c674c5574539ced5280dbb163cab91795b07eb9175feafd7c5c02",
          "withoutMetadata": "7e7a4d2dea64835b308c8a359c3029d74988a4318ba8ef4240ab30513edfd448",
          "linkedWithoutMetadata": "7e7a4d2dea64835b308c8a359c3029d74988a4318ba8ef4240ab30513edfd448"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:18",
        "version": {
          "withMetadata": "3cadbdb25b0d889a6e9d9f749cc008545c861f2916c34f119ffec15ff9894211",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "f453140119aa4ab940c1c866e30faba30c70b1bf42ecb26b808dc4e355066110",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "e96c088265fb723a79b847223722ed9c8034dcd061caf652f25c4bd66d192c8e",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "BaseCore": {
        "src": "contracts/BaseCore.sol:20",
        "version": {
          "withMetadata": "9e824031dc9e829075a3b34de018f43fbcb61660a36b8b280f94ae83af0fb57c",
          "withoutMetadata": "7c8a966d91f93fdba07b026d9fbc5fc52fa7fb22ca81034e6fa6d2d3ff075379",
          "linkedWithoutMetadata": "7c8a966d91f93fdba07b026d9fbc5fc52fa7fb22ca81034e6fa6d2d3ff075379"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeERC20",
          "SafeMath",
          "WadMath",
          "Math"
        ],
        "methods": [
          "(address[5])"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BaseCore",
            "src": "contracts/BaseCore.sol:132"
          },
          {
            "kind": "state-variable-assignment",
            "name": "reservePercent",
            "src": "contracts/BaseCore.sol:129"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "backingcoins",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_address)5_storage",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:111"
            },
            {
              "label": "baseusd",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(IBase_usd)1966",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:113"
            },
            {
              "label": "basestables",
              "offset": 0,
              "slot": "7",
              "type": "t_contract(IBase_stables)1939",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:114"
            },
            {
              "label": "backingbalances",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:116"
            },
            {
              "label": "interestbearingtank",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_struct(interestbearingtankdata)2298_storage)",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:117"
            },
            {
              "label": "noninterestbearingtank",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(noninterestbearingtankdata)2317_storage)",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:118"
            },
            {
              "label": "borrowerstank",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_struct(borrowerstankdata)2303_storage))",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:120"
            },
            {
              "label": "lenderstank",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_mapping(t_address,t_struct(lenderstankdata)2280_storage))",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:121"
            },
            {
              "label": "interestbearingtanklist",
              "offset": 0,
              "slot": "13",
              "type": "t_array(t_contract(ERC20)692)dyn_storage",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:122"
            },
            {
              "label": "noninterestbearingtanklist",
              "offset": 0,
              "slot": "14",
              "type": "t_array(t_contract(ERC20)692)dyn_storage",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:123"
            },
            {
              "label": "basecollDeployer",
              "offset": 0,
              "slot": "15",
              "type": "t_contract(BasecollDeployer)2144",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:125"
            },
            {
              "label": "priceoracle",
              "offset": 0,
              "slot": "16",
              "type": "t_contract(IDAIoraclePriceGetter)1978",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:127"
            },
            {
              "label": "reservePercent",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:129"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_address)5_storage": {
              "label": "address[5]"
            },
            "t_array(t_contract(ERC20)692)dyn_storage": {
              "label": "contract ERC20[]"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_contract(BasecollDeployer)2144": {
              "label": "contract BasecollDeployer"
            },
            "t_contract(ERC20)692": {
              "label": "contract ERC20"
            },
            "t_contract(IBase_stables)1939": {
              "label": "contract IBase_stables"
            },
            "t_contract(IBase_usd)1966": {
              "label": "contract IBase_usd"
            },
            "t_contract(IDAIoraclePriceGetter)1978": {
              "label": "contract IDAIoraclePriceGetter"
            },
            "t_contract(IPoolConfiguration)2019": {
              "label": "contract IPoolConfiguration"
            },
            "t_contract(basecoll)2107": {
              "label": "contract basecoll"
            },
            "t_enum(tankStatus)2274": {
              "label": "enum corelibrary.tankStatus",
              "members": [
                "INACTIVE",
                "ACTIVE",
                "CLOSED"
              ]
            },
            "t_mapping(t_address,t_mapping(t_address,t_struct(borrowerstankdata)2303_storage))": {
              "label": "mapping(address => mapping(address => struct corelibrary.borrowerstankdata))"
            },
            "t_mapping(t_address,t_mapping(t_address,t_struct(lenderstankdata)2280_storage))": {
              "label": "mapping(address => mapping(address => struct corelibrary.lenderstankdata))"
            },
            "t_mapping(t_address,t_struct(borrowerstankdata)2303_storage)": {
              "label": "mapping(address => struct corelibrary.borrowerstankdata)"
            },
            "t_mapping(t_address,t_struct(interestbearingtankdata)2298_storage)": {
              "label": "mapping(address => struct corelibrary.interestbearingtankdata)"
            },
            "t_mapping(t_address,t_struct(lenderstankdata)2280_storage)": {
              "label": "mapping(address => struct corelibrary.lenderstankdata)"
            },
            "t_mapping(t_address,t_struct(noninterestbearingtankdata)2317_storage)": {
              "label": "mapping(address => struct corelibrary.noninterestbearingtankdata)"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(borrowerstankdata)2303_storage": {
              "label": "struct corelibrary.borrowerstankdata",
              "members": [
                {
                  "label": "disableUseAsCollateral",
                  "type": "t_bool"
                },
                {
                  "label": "borrowShares",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(interestbearingtankdata)2298_storage": {
              "label": "struct corelibrary.interestbearingtankdata",
              "members": [
                {
                  "label": "status",
                  "type": "t_enum(tankStatus)2274"
                },
                {
                  "label": "baseusd",
                  "type": "t_contract(IBase_usd)1966"
                },
                {
                  "label": "poolConfig",
                  "type": "t_contract(IPoolConfiguration)2019"
                },
                {
                  "label": "totalBorrows",
                  "type": "t_uint256"
                },
                {
                  "label": "totalBorrowShares",
                  "type": "t_uint256"
                },
                {
                  "label": "tankReserves",
                  "type": "t_uint256"
                },
                {
                  "label": "lastUpdateTimestamp",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(lenderstankdata)2280_storage": {
              "label": "struct corelibrary.lenderstankdata",
              "members": [
                {
                  "label": "borrowShares",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(noninterestbearingtankdata)2317_storage": {
              "label": "struct corelibrary.noninterestbearingtankdata",
              "members": [
                {
                  "label": "status",
                  "type": "t_enum(tankStatus)2274"
                },
                {
                  "label": "baseColl",
                  "type": "t_contract(basecoll)2107"
                },
                {
                  "label": "poolConfig",
                  "type": "t_contract(IPoolConfiguration)2019"
                },
                {
                  "label": "lastUpdateTimestamp",
                  "type": "t_uint256"
                },
                {
                  "label": "usdpair",
                  "type": "t_string_storage"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IBaseCore": {
        "src": "contracts/Interface/IBaseCore.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(uint256,address)",
          "redeem(uint256,address)",
          "harvest()",
          "earned()",
          "dusdToUsd(uint256,bool)",
          "peaks(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IBase_stables": {
        "src": "contracts/Interface/IBase_stables.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)",
          "burn(address,uint256)",
          "totalSupply()",
          "burnForSelf(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IBase_usd": {
        "src": "contracts/Interface/IBase_usd.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)",
          "burn(address,uint256)",
          "totalSupply()",
          "burnForSelf(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IDAIoraclePriceGetter": {
        "src": "contracts/Interface/IDAIoraclePriceGetter.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getPrice(string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPoolConfiguration": {
        "src": "contracts/Interface/IPoolConfiguration.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getOptimalUtilizationRate()",
          "getBaseBorrowRate()",
          "getLiquidationBonusPercent()",
          "getCollateralPercent()",
          "calculateInterestRate(uint256,uint256)",
          "getUtilizationRate(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "basecoll": {
        "src": "contracts/basecoll.sol:8",
        "version": {
          "withMetadata": "f0f7e8484e512479c8cafac85da259ca90a02e75fc517f76a031d174dc011050",
          "withoutMetadata": "fd8a7b64813b41475f4f2ca2e4cc396d01b9a5887e53356bec97171d8ea4acec",
          "linkedWithoutMetadata": "fd8a7b64813b41475f4f2ca2e4cc396d01b9a5887e53356bec97171d8ea4acec"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "methods": [
          "(string,string,address,address)",
          "mint(address,uint256)",
          "burn(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "basecoll",
            "src": "contracts/basecoll.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "basecore",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(BaseCore)1863",
              "contract": "basecoll",
              "src": "contracts/basecoll.sol:11"
            },
            {
              "label": "underlyingAsset",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(ERC20)692",
              "contract": "basecoll",
              "src": "contracts/basecoll.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_contract(BaseCore)1863": {
              "label": "contract BaseCore"
            },
            "t_contract(ERC20)692": {
              "label": "contract ERC20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "BasecollDeployer": {
        "src": "contracts/basecollDeployer.sol:8",
        "version": {
          "withMetadata": "67abf9bfaf2045ed1fa015915e4c502d5a3002ac019a13bddcd3a786e83ff704",
          "withoutMetadata": "796014b122f078bea34a8b49d47b2cb6794a944e261bdb533751ee9318b9cb4c",
          "linkedWithoutMetadata": "796014b122f078bea34a8b49d47b2cb6794a944e261bdb533751ee9318b9cb4c"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "createNewbasecoll(string,string,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Math": {
        "src": "contracts/libraries/Math.sol:10",
        "version": {
          "withMetadata": "8eb24f05334341281cfdc4ce9624eb0214fec990a3e7edf35702f88dcb93527f",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "WadMath": {
        "src": "contracts/libraries/WadMath.sol:11",
        "version": {
          "withMetadata": "4469de403b749c3b4e3c35240492ef4d28235438c36c6733c57fd87b0535274f",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "SafeMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "corelibrary": {
        "src": "contracts/libraries/corelibrary.sol:13",
        "version": {
          "withMetadata": "3b52849171163f1f8f24e06d4dbe6daa3be2777be49f9a5aca2783b29df71331",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "SafeERC20",
          "SafeMath",
          "WadMath",
          "Math"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "08295699790c674c5574539ced5280dbb163cab91795b07eb9175feafd7c5c02",
          "withoutMetadata": "7e7a4d2dea64835b308c8a359c3029d74988a4318ba8ef4240ab30513edfd448",
          "linkedWithoutMetadata": "7e7a4d2dea64835b308c8a359c3029d74988a4318ba8ef4240ab30513edfd448"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:18",
        "version": {
          "withMetadata": "3cadbdb25b0d889a6e9d9f749cc008545c861f2916c34f119ffec15ff9894211",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "f453140119aa4ab940c1c866e30faba30c70b1bf42ecb26b808dc4e355066110",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "e96c088265fb723a79b847223722ed9c8034dcd061caf652f25c4bd66d192c8e",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "BaseCore": {
        "src": "contracts/BaseCore.sol:20",
        "version": {
          "withMetadata": "3673ec1be7469bf63fecd2249b741bb1ffa902e8b119795631915aff851e72b4",
          "withoutMetadata": "7c8a966d91f93fdba07b026d9fbc5fc52fa7fb22ca81034e6fa6d2d3ff075379",
          "linkedWithoutMetadata": "7c8a966d91f93fdba07b026d9fbc5fc52fa7fb22ca81034e6fa6d2d3ff075379"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeERC20",
          "SafeMath",
          "WadMath",
          "Math"
        ],
        "methods": [
          "(address[5])"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BaseCore",
            "src": "contracts/BaseCore.sol:132"
          },
          {
            "kind": "state-variable-assignment",
            "name": "reservePercent",
            "src": "contracts/BaseCore.sol:129"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "backingcoins",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_address)5_storage",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:111"
            },
            {
              "label": "baseusd",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(IBase_usd)1966",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:113"
            },
            {
              "label": "basestables",
              "offset": 0,
              "slot": "7",
              "type": "t_contract(IBase_stables)1939",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:114"
            },
            {
              "label": "backingbalances",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:116"
            },
            {
              "label": "interestbearingtank",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_struct(interestbearingtankdata)2282_storage)",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:117"
            },
            {
              "label": "noninterestbearingtank",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(noninterestbearingtankdata)2301_storage)",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:118"
            },
            {
              "label": "borrowerstank",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_struct(borrowerstankdata)2287_storage))",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:120"
            },
            {
              "label": "lenderstank",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_mapping(t_address,t_struct(lenderstankdata)2264_storage))",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:121"
            },
            {
              "label": "interestbearingtanklist",
              "offset": 0,
              "slot": "13",
              "type": "t_array(t_contract(ERC20)692)dyn_storage",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:122"
            },
            {
              "label": "noninterestbearingtanklist",
              "offset": 0,
              "slot": "14",
              "type": "t_array(t_contract(ERC20)692)dyn_storage",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:123"
            },
            {
              "label": "basecollDeployer",
              "offset": 0,
              "slot": "15",
              "type": "t_contract(BasecollDeployer)2144",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:125"
            },
            {
              "label": "priceoracle",
              "offset": 0,
              "slot": "16",
              "type": "t_contract(IDAIoraclePriceGetter)1978",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:127"
            },
            {
              "label": "reservePercent",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:129"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_address)5_storage": {
              "label": "address[5]"
            },
            "t_array(t_contract(ERC20)692)dyn_storage": {
              "label": "contract ERC20[]"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_contract(BasecollDeployer)2144": {
              "label": "contract BasecollDeployer"
            },
            "t_contract(ERC20)692": {
              "label": "contract ERC20"
            },
            "t_contract(IBase_stables)1939": {
              "label": "contract IBase_stables"
            },
            "t_contract(IBase_usd)1966": {
              "label": "contract IBase_usd"
            },
            "t_contract(IDAIoraclePriceGetter)1978": {
              "label": "contract IDAIoraclePriceGetter"
            },
            "t_contract(IPoolConfiguration)2019": {
              "label": "contract IPoolConfiguration"
            },
            "t_contract(basecoll)2107": {
              "label": "contract basecoll"
            },
            "t_enum(tankStatus)2258": {
              "label": "enum corelibrary.tankStatus",
              "members": [
                "INACTIVE",
                "ACTIVE",
                "CLOSED"
              ]
            },
            "t_mapping(t_address,t_mapping(t_address,t_struct(borrowerstankdata)2287_storage))": {
              "label": "mapping(address => mapping(address => struct corelibrary.borrowerstankdata))"
            },
            "t_mapping(t_address,t_mapping(t_address,t_struct(lenderstankdata)2264_storage))": {
              "label": "mapping(address => mapping(address => struct corelibrary.lenderstankdata))"
            },
            "t_mapping(t_address,t_struct(borrowerstankdata)2287_storage)": {
              "label": "mapping(address => struct corelibrary.borrowerstankdata)"
            },
            "t_mapping(t_address,t_struct(interestbearingtankdata)2282_storage)": {
              "label": "mapping(address => struct corelibrary.interestbearingtankdata)"
            },
            "t_mapping(t_address,t_struct(lenderstankdata)2264_storage)": {
              "label": "mapping(address => struct corelibrary.lenderstankdata)"
            },
            "t_mapping(t_address,t_struct(noninterestbearingtankdata)2301_storage)": {
              "label": "mapping(address => struct corelibrary.noninterestbearingtankdata)"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(borrowerstankdata)2287_storage": {
              "label": "struct corelibrary.borrowerstankdata",
              "members": [
                {
                  "label": "disableUseAsCollateral",
                  "type": "t_bool"
                },
                {
                  "label": "borrowShares",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(interestbearingtankdata)2282_storage": {
              "label": "struct corelibrary.interestbearingtankdata",
              "members": [
                {
                  "label": "status",
                  "type": "t_enum(tankStatus)2258"
                },
                {
                  "label": "baseusd",
                  "type": "t_contract(IBase_usd)1966"
                },
                {
                  "label": "poolConfig",
                  "type": "t_contract(IPoolConfiguration)2019"
                },
                {
                  "label": "totalBorrows",
                  "type": "t_uint256"
                },
                {
                  "label": "totalBorrowShares",
                  "type": "t_uint256"
                },
                {
                  "label": "tankReserves",
                  "type": "t_uint256"
                },
                {
                  "label": "lastUpdateTimestamp",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(lenderstankdata)2264_storage": {
              "label": "struct corelibrary.lenderstankdata",
              "members": [
                {
                  "label": "borrowShares",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(noninterestbearingtankdata)2301_storage": {
              "label": "struct corelibrary.noninterestbearingtankdata",
              "members": [
                {
                  "label": "status",
                  "type": "t_enum(tankStatus)2258"
                },
                {
                  "label": "baseColl",
                  "type": "t_contract(basecoll)2107"
                },
                {
                  "label": "poolConfig",
                  "type": "t_contract(IPoolConfiguration)2019"
                },
                {
                  "label": "lastUpdateTimestamp",
                  "type": "t_uint256"
                },
                {
                  "label": "usdpair",
                  "type": "t_string_storage"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IBaseCore": {
        "src": "contracts/Interface/IBaseCore.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(uint256,address)",
          "redeem(uint256,address)",
          "harvest()",
          "earned()",
          "dusdToUsd(uint256,bool)",
          "peaks(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IBase_stables": {
        "src": "contracts/Interface/IBase_stables.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)",
          "burn(address,uint256)",
          "totalSupply()",
          "burnForSelf(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IBase_usd": {
        "src": "contracts/Interface/IBase_usd.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)",
          "burn(address,uint256)",
          "totalSupply()",
          "burnForSelf(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IDAIoraclePriceGetter": {
        "src": "contracts/Interface/IDAIoraclePriceGetter.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getPrice(string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPoolConfiguration": {
        "src": "contracts/Interface/IPoolConfiguration.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getOptimalUtilizationRate()",
          "getBaseBorrowRate()",
          "getLiquidationBonusPercent()",
          "getCollateralPercent()",
          "calculateInterestRate(uint256,uint256)",
          "getUtilizationRate(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "basecoll": {
        "src": "contracts/basecoll.sol:8",
        "version": {
          "withMetadata": "64774ee076b19e539a0a09071aafe30b5c27743eef416ea4e9c9ccd8e04419c6",
          "withoutMetadata": "fd8a7b64813b41475f4f2ca2e4cc396d01b9a5887e53356bec97171d8ea4acec",
          "linkedWithoutMetadata": "fd8a7b64813b41475f4f2ca2e4cc396d01b9a5887e53356bec97171d8ea4acec"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "methods": [
          "(string,string,address,address)",
          "mint(address,uint256)",
          "burn(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "basecoll",
            "src": "contracts/basecoll.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "basecore",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(BaseCore)1863",
              "contract": "basecoll",
              "src": "contracts/basecoll.sol:11"
            },
            {
              "label": "underlyingAsset",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(ERC20)692",
              "contract": "basecoll",
              "src": "contracts/basecoll.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_contract(BaseCore)1863": {
              "label": "contract BaseCore"
            },
            "t_contract(ERC20)692": {
              "label": "contract ERC20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "BasecollDeployer": {
        "src": "contracts/basecollDeployer.sol:8",
        "version": {
          "withMetadata": "9af105f0639af8a9098b83e955fd842e6362d60572a035a414c2db4255f5fd12",
          "withoutMetadata": "d633d4a4e8a11e2a9e8ddd54f727ff7a224b93262b16cb8ab8239db631012ab6",
          "linkedWithoutMetadata": "d633d4a4e8a11e2a9e8ddd54f727ff7a224b93262b16cb8ab8239db631012ab6"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "createNewbasecoll(string,string,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Math": {
        "src": "contracts/libraries/Math.sol:10",
        "version": {
          "withMetadata": "8eb24f05334341281cfdc4ce9624eb0214fec990a3e7edf35702f88dcb93527f",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "WadMath": {
        "src": "contracts/libraries/WadMath.sol:11",
        "version": {
          "withMetadata": "4469de403b749c3b4e3c35240492ef4d28235438c36c6733c57fd87b0535274f",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "SafeMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "corelibrary": {
        "src": "contracts/libraries/corelibrary.sol:10",
        "version": {
          "withMetadata": "870e5bc32446c237265ff11ee4ccdbd9dfd621f0b741303e0919a49ed5b8ecfa",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "08295699790c674c5574539ced5280dbb163cab91795b07eb9175feafd7c5c02",
          "withoutMetadata": "7e7a4d2dea64835b308c8a359c3029d74988a4318ba8ef4240ab30513edfd448",
          "linkedWithoutMetadata": "7e7a4d2dea64835b308c8a359c3029d74988a4318ba8ef4240ab30513edfd448"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:18",
        "version": {
          "withMetadata": "3cadbdb25b0d889a6e9d9f749cc008545c861f2916c34f119ffec15ff9894211",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "f453140119aa4ab940c1c866e30faba30c70b1bf42ecb26b808dc4e355066110",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "e96c088265fb723a79b847223722ed9c8034dcd061caf652f25c4bd66d192c8e",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "BaseCore": {
        "src": "contracts/BaseCore.sol:20",
        "version": {
          "withMetadata": "eeda17237916064506374e2abd5657642a329e338005c8d367dc5286cb704e92",
          "withoutMetadata": "ed676d677f30f9427df7963c8a220242f43955c82d40e07e18aaa474966c829f",
          "linkedWithoutMetadata": "ed676d677f30f9427df7963c8a220242f43955c82d40e07e18aaa474966c829f"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeERC20",
          "SafeMath",
          "WadMath",
          "Math",
          "corelibrary"
        ],
        "methods": [
          "(address[5])",
          "initIBT(address,address)",
          "initNIBT(address,address,string)",
          "getIBTdata()",
          "getNIBTdata(address)",
          "setPriceOracle(address)",
          "setTokens(address,address,address)",
          "setIBTStatus(address,uint8)",
          "setNIBTStatus(address,uint8)",
          "mint(uint256)",
          "depositColl(address,uint256)",
          "burn(uint256)",
          "withdrawColl(address,uint256)",
          "getBalance(address)",
          "getTotalAvailableLiquidity(address)",
          "getTotalLiquidity(address)",
          "getUserCompoundedLiquidityBalance(address,address)",
          "getUserTankData(address,address)",
          "getUserCompoundedBorrowBalance(address)",
          "getUserAccount(address)",
          "RepaysShareAmount(address,uint256)",
          "isAccountHealthy(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BaseCore",
            "src": "contracts/BaseCore.sol:132"
          },
          {
            "kind": "state-variable-assignment",
            "name": "reservePercent",
            "src": "contracts/BaseCore.sol:129"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "backingcoins",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_address)5_storage",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:111"
            },
            {
              "label": "baseusd",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(IBase_usd)4073",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:113"
            },
            {
              "label": "basestables",
              "offset": 0,
              "slot": "7",
              "type": "t_contract(IBase_stables)4046",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:114"
            },
            {
              "label": "backingbalances",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:116"
            },
            {
              "label": "interestbearingtank",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_struct(interestbearingtankdata)4389_storage)",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:117"
            },
            {
              "label": "noninterestbearingtank",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(noninterestbearingtankdata)4408_storage)",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:118"
            },
            {
              "label": "borrowerstank",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_struct(borrowerstankdata)4394_storage))",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:120"
            },
            {
              "label": "lenderstank",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_mapping(t_address,t_struct(lenderstankdata)4371_storage))",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:121"
            },
            {
              "label": "interestbearingtanklist",
              "offset": 0,
              "slot": "13",
              "type": "t_array(t_contract(ERC20)692)dyn_storage",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:122"
            },
            {
              "label": "noninterestbearingtanklist",
              "offset": 0,
              "slot": "14",
              "type": "t_array(t_contract(ERC20)692)dyn_storage",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:123"
            },
            {
              "label": "basecollDeployer",
              "offset": 0,
              "slot": "15",
              "type": "t_contract(BasecollDeployer)4251",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:125"
            },
            {
              "label": "priceoracle",
              "offset": 0,
              "slot": "16",
              "type": "t_contract(IDAIoraclePriceGetter)4085",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:127"
            },
            {
              "label": "reservePercent",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "BaseCore",
              "src": "contracts/BaseCore.sol:129"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_address)5_storage": {
              "label": "address[5]"
            },
            "t_array(t_contract(ERC20)692)dyn_storage": {
              "label": "contract ERC20[]"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_contract(BasecollDeployer)4251": {
              "label": "contract BasecollDeployer"
            },
            "t_contract(ERC20)692": {
              "label": "contract ERC20"
            },
            "t_contract(IBase_stables)4046": {
              "label": "contract IBase_stables"
            },
            "t_contract(IBase_usd)4073": {
              "label": "contract IBase_usd"
            },
            "t_contract(IDAIoraclePriceGetter)4085": {
              "label": "contract IDAIoraclePriceGetter"
            },
            "t_contract(IPoolConfiguration)4126": {
              "label": "contract IPoolConfiguration"
            },
            "t_contract(basecoll)4214": {
              "label": "contract basecoll"
            },
            "t_enum(tankStatus)4365": {
              "label": "enum corelibrary.tankStatus",
              "members": [
                "INACTIVE",
                "ACTIVE",
                "CLOSED"
              ]
            },
            "t_mapping(t_address,t_mapping(t_address,t_struct(borrowerstankdata)4394_storage))": {
              "label": "mapping(address => mapping(address => struct corelibrary.borrowerstankdata))"
            },
            "t_mapping(t_address,t_mapping(t_address,t_struct(lenderstankdata)4371_storage))": {
              "label": "mapping(address => mapping(address => struct corelibrary.lenderstankdata))"
            },
            "t_mapping(t_address,t_struct(borrowerstankdata)4394_storage)": {
              "label": "mapping(address => struct corelibrary.borrowerstankdata)"
            },
            "t_mapping(t_address,t_struct(interestbearingtankdata)4389_storage)": {
              "label": "mapping(address => struct corelibrary.interestbearingtankdata)"
            },
            "t_mapping(t_address,t_struct(lenderstankdata)4371_storage)": {
              "label": "mapping(address => struct corelibrary.lenderstankdata)"
            },
            "t_mapping(t_address,t_struct(noninterestbearingtankdata)4408_storage)": {
              "label": "mapping(address => struct corelibrary.noninterestbearingtankdata)"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(borrowerstankdata)4394_storage": {
              "label": "struct corelibrary.borrowerstankdata",
              "members": [
                {
                  "label": "disableUseAsCollateral",
                  "type": "t_bool"
                },
                {
                  "label": "borrowShares",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(interestbearingtankdata)4389_storage": {
              "label": "struct corelibrary.interestbearingtankdata",
              "members": [
                {
                  "label": "status",
                  "type": "t_enum(tankStatus)4365"
                },
                {
                  "label": "baseusd",
                  "type": "t_contract(IBase_usd)4073"
                },
                {
                  "label": "poolConfig",
                  "type": "t_contract(IPoolConfiguration)4126"
                },
                {
                  "label": "totalBorrows",
                  "type": "t_uint256"
                },
                {
                  "label": "totalBorrowShares",
                  "type": "t_uint256"
                },
                {
                  "label": "tankReserves",
                  "type": "t_uint256"
                },
                {
                  "label": "lastUpdateTimestamp",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(lenderstankdata)4371_storage": {
              "label": "struct corelibrary.lenderstankdata",
              "members": [
                {
                  "label": "borrowShares",
                  "type": "t_uint256"
                }
              ]
            },
            "t_struct(noninterestbearingtankdata)4408_storage": {
              "label": "struct corelibrary.noninterestbearingtankdata",
              "members": [
                {
                  "label": "status",
                  "type": "t_enum(tankStatus)4365"
                },
                {
                  "label": "baseColl",
                  "type": "t_contract(basecoll)4214"
                },
                {
                  "label": "poolConfig",
                  "type": "t_contract(IPoolConfiguration)4126"
                },
                {
                  "label": "lastUpdateTimestamp",
                  "type": "t_uint256"
                },
                {
                  "label": "usdpair",
                  "type": "t_string_storage"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "BaseStables": {
        "src": "contracts/BaseStables.sol:9",
        "version": {
          "withMetadata": "f282bb18eb656a8b3393075c999e197f17f9499859d6482c067fd63c9f6af567",
          "withoutMetadata": "c4dc693209188cb7e9091e70d594db0d9d2863a1cb3ee00ac71687c08836a163",
          "linkedWithoutMetadata": "c4dc693209188cb7e9091e70d594db0d9d2863a1cb3ee00ac71687c08836a163"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "burnForSelf(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BaseStables",
            "src": "contracts/BaseStables.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "basecore",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "BaseStables",
              "src": "contracts/BaseStables.sol:10"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Base_usd": {
        "src": "contracts/Base_usd.sol:9",
        "version": {
          "withMetadata": "9a81d6288269831adb76484bfdf6836718c5fd95155e6ff20b892d984abb1584",
          "withoutMetadata": "2b1a3ddcfed02f0bb0c3b441fa4c1d5cda02fd43ff99ce67af04ceb74f8434fa",
          "linkedWithoutMetadata": "2b1a3ddcfed02f0bb0c3b441fa4c1d5cda02fd43ff99ce67af04ceb74f8434fa"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "burnForSelf(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Base_usd",
            "src": "contracts/Base_usd.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "basecore",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Base_usd",
              "src": "contracts/Base_usd.sol:10"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "DefaultPoolConfiguration": {
        "src": "contracts/DefaultPoolConfiguration.sol:10",
        "version": {
          "withMetadata": "49d85f699c1afde66564c0ee435efbbd054f9b6c7994e630f54257301a5dfe40",
          "withoutMetadata": "ad5ea6e4ba1e8b427d8e7e6c5c462041eff1119c4e8c5c315271bdbe5835ed78",
          "linkedWithoutMetadata": "ad5ea6e4ba1e8b427d8e7e6c5c462041eff1119c4e8c5c315271bdbe5835ed78"
        },
        "inherit": [
          "IPoolConfiguration"
        ],
        "libraries": [
          "SafeMath",
          "WadMath"
        ],
        "methods": [
          "(uint256,uint256,uint256,uint256,uint256)",
          "getBaseBorrowRate()",
          "getCollateralPercent()",
          "getLiquidationBonusPercent()",
          "calculateInterestRate(uint256,uint256)",
          "getOptimalUtilizationRate()",
          "getUtilizationRate(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DefaultPoolConfiguration",
            "src": "contracts/DefaultPoolConfiguration.sol:25"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "baseBorrowRate",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "DefaultPoolConfiguration",
              "src": "contracts/DefaultPoolConfiguration.sol:19"
            },
            {
              "label": "rateSlope1",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "DefaultPoolConfiguration",
              "src": "contracts/DefaultPoolConfiguration.sol:20"
            },
            {
              "label": "rateSlope2",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "DefaultPoolConfiguration",
              "src": "contracts/DefaultPoolConfiguration.sol:21"
            },
            {
              "label": "collateralPercent",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "DefaultPoolConfiguration",
              "src": "contracts/DefaultPoolConfiguration.sol:22"
            },
            {
              "label": "liquidationBonusPercent",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "DefaultPoolConfiguration",
              "src": "contracts/DefaultPoolConfiguration.sol:23"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "DAI": {
        "src": "contracts/DummyTokens/DAI.sol:6",
        "version": {
          "withMetadata": "18b1669f8dc741bb905997e7df56d77f46a3c1acba1dccbeab75c9b01e2bb6b0",
          "withoutMetadata": "5fb168d7abc4ffb43d32683d752de755da22f31ac8ec544317b1d7599dd7ab79",
          "linkedWithoutMetadata": "5fb168d7abc4ffb43d32683d752de755da22f31ac8ec544317b1d7599dd7ab79"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mint(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DAI",
            "src": "contracts/DummyTokens/DAI.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "FRAX": {
        "src": "contracts/DummyTokens/FRAX.sol:6",
        "version": {
          "withMetadata": "1b73c71a936a7b038cb3b07b98a6ba90f931f6b9e0ca3b6321956f789c724cf2",
          "withoutMetadata": "4da144ea0996c034d5d9f358e2d9ff6ed64075fdadd0bcaab0ffbeab48f64adc",
          "linkedWithoutMetadata": "4da144ea0996c034d5d9f358e2d9ff6ed64075fdadd0bcaab0ffbeab48f64adc"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mint(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FRAX",
            "src": "contracts/DummyTokens/FRAX.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "USDC": {
        "src": "contracts/DummyTokens/USDC.sol:6",
        "version": {
          "withMetadata": "81b866280179be095a8b6e5106ec634f2858592597ad1cc5e6e6742a7966ed75",
          "withoutMetadata": "d15ef0efaa1acf80b9e79154095b05008b9d42d16d01a8688ed83204a5dd77b7",
          "linkedWithoutMetadata": "d15ef0efaa1acf80b9e79154095b05008b9d42d16d01a8688ed83204a5dd77b7"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mint(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "USDC",
            "src": "contracts/DummyTokens/USDC.sol:8"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "USDT": {
        "src": "contracts/DummyTokens/USDT.sol:6",
        "version": {
          "withMetadata": "3d0ec394394d59d3aefea85bfb55862dee621cea01f08f7714cfb754c246d7a7",
          "withoutMetadata": "cd0151e4172d558db7f4a21e9b76ccdbc9023083b13327842f721d1dbc7ab6e0",
          "linkedWithoutMetadata": "cd0151e4172d558db7f4a21e9b76ccdbc9023083b13327842f721d1dbc7ab6e0"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mint(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "USDT",
            "src": "contracts/DummyTokens/USDT.sol:8"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UST": {
        "src": "contracts/DummyTokens/UST.sol:6",
        "version": {
          "withMetadata": "ea8222bd963d7836c07679ae53339076663bd324ea52f2dfcd7d03ad20482cf7",
          "withoutMetadata": "87e0a4f5d5f1ce30943132dbeb398d73f9c0e2aea276f6f4e8e3417bc97269f7",
          "linkedWithoutMetadata": "87e0a4f5d5f1ce30943132dbeb398d73f9c0e2aea276f6f4e8e3417bc97269f7"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mint(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UST",
            "src": "contracts/DummyTokens/UST.sol:8"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "WBTC": {
        "src": "contracts/DummyTokens/WBTC.sol:6",
        "version": {
          "withMetadata": "dca83f58bb533ae9717e6f622442cfbdbd40bcb72363feb425e165b6a925223d",
          "withoutMetadata": "ba66fd5b171e58b9085268d6f85c7d8b2e9cd4c1d51efb635006885df94b6365",
          "linkedWithoutMetadata": "ba66fd5b171e58b9085268d6f85c7d8b2e9cd4c1d51efb635006885df94b6365"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mint(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "WBTC",
            "src": "contracts/DummyTokens/WBTC.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "WETH": {
        "src": "contracts/DummyTokens/WETH.sol:6",
        "version": {
          "withMetadata": "771900eb818e27a83ffdb5e96aee0aaeecfb267c3539ba88e73cd7322ae22ba2",
          "withoutMetadata": "3eae042d062c1c6225543749d84808f0721a0d8f02d5b7297bb444281d0c5bd4",
          "linkedWithoutMetadata": "3eae042d062c1c6225543749d84808f0721a0d8f02d5b7297bb444281d0c5bd4"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mint(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "WETH",
            "src": "contracts/DummyTokens/WETH.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IBaseCore": {
        "src": "contracts/Interface/IBaseCore.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(uint256,address)",
          "redeem(uint256,address)",
          "harvest()",
          "earned()",
          "dusdToUsd(uint256,bool)",
          "peaks(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IBase_stables": {
        "src": "contracts/Interface/IBase_stables.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)",
          "burn(address,uint256)",
          "totalSupply()",
          "burnForSelf(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IBase_usd": {
        "src": "contracts/Interface/IBase_usd.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)",
          "burn(address,uint256)",
          "totalSupply()",
          "burnForSelf(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IDAIoraclePriceGetter": {
        "src": "contracts/Interface/IDAIoraclePriceGetter.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getPrice(string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPoolConfiguration": {
        "src": "contracts/Interface/IPoolConfiguration.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getOptimalUtilizationRate()",
          "getBaseBorrowRate()",
          "getLiquidationBonusPercent()",
          "getCollateralPercent()",
          "calculateInterestRate(uint256,uint256)",
          "getUtilizationRate(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "basecoll": {
        "src": "contracts/basecoll.sol:8",
        "version": {
          "withMetadata": "fa6b588db05b819e5e2c121594a24c4616a928d3b6fee5edf0e7ea38283c7c1d",
          "withoutMetadata": "fd8a7b64813b41475f4f2ca2e4cc396d01b9a5887e53356bec97171d8ea4acec",
          "linkedWithoutMetadata": "fd8a7b64813b41475f4f2ca2e4cc396d01b9a5887e53356bec97171d8ea4acec"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "methods": [
          "(string,string,address,address)",
          "mint(address,uint256)",
          "burn(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "basecoll",
            "src": "contracts/basecoll.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "basecore",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(BaseCore)3449",
              "contract": "basecoll",
              "src": "contracts/basecoll.sol:11"
            },
            {
              "label": "underlyingAsset",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(ERC20)692",
              "contract": "basecoll",
              "src": "contracts/basecoll.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_contract(BaseCore)3449": {
              "label": "contract BaseCore"
            },
            "t_contract(ERC20)692": {
              "label": "contract ERC20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "BasecollDeployer": {
        "src": "contracts/basecollDeployer.sol:8",
        "version": {
          "withMetadata": "cbfb61129ad4da7b2658b5d47692579f0f60a1c9c7d26dd4d8d54437713ebfb1",
          "withoutMetadata": "90637a7ec2f314b3366e24b93b8e553ab2524d32a1d9751a72e36af19963bfb8",
          "linkedWithoutMetadata": "90637a7ec2f314b3366e24b93b8e553ab2524d32a1d9751a72e36af19963bfb8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "createNewbasecoll(string,string,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Math": {
        "src": "contracts/libraries/Math.sol:10",
        "version": {
          "withMetadata": "8eb24f05334341281cfdc4ce9624eb0214fec990a3e7edf35702f88dcb93527f",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "WadMath": {
        "src": "contracts/libraries/WadMath.sol:11",
        "version": {
          "withMetadata": "4469de403b749c3b4e3c35240492ef4d28235438c36c6733c57fd87b0535274f",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "SafeMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "corelibrary": {
        "src": "contracts/libraries/corelibrary.sol:10",
        "version": {
          "withMetadata": "adc709c116fbd201cb727beb550b70f381c644ef011b201b9f2be463dee1938a",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    }
  ]
}